<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
	version="2.4">
	<display-name>kwp-oauth</display-name>

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	
	<session-config> 
	    <session-timeout>120</session-timeout>
	</session-config>

	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.jasig.cas.web.init.SafeContextLoaderListener</listener-class>
	</listener>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:spring-context.xml
			classpath:spring-dubbo.xml
			/WEB-INF/cas/spring-configuration/*.xml
			/WEB-INF/cas/deployerConfigContext.xml
		</param-value>
	</context-param>

	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>bai-oauth.root</param-value>
	</context-param>

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>WEB-INF/conf/log4j.properties</param-value>
	</context-param>

	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>CAS Client Info Logging Filter</filter-name>
		<filter-class>com.github.inspektr.common.web.ClientInfoThreadLocalFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CAS Client Info Logging Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/services/*</url-pattern>
	</filter-mapping>
	
	<!-- spring remoting services servlet -->
	<servlet>
		<servlet-name>spring-remoting</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
		 <param-name>contextConfigLocation</param-name>
		 <param-value>classpath:spring-remoting.xml</param-value>
		</init-param>
		<load-on-startup>0</load-on-startup>
	</servlet> 
	<servlet-mapping>
		<servlet-name>spring-remoting</servlet-name>
		<url-pattern>*.srv</url-pattern>
	</servlet-mapping>

	<!-- - This is the Spring dispatcher servlet which delegates all requests 
		to the - Spring WebMVC controllers as configured in cas-servlet.xml. - - 
		The choice made above about how to handle a broken ApplicationContext at 
		- context initialization applies here as well, since this servlet is load-on-startup. 
		- - If you'd like these errors to be fatal and prevent the CAS servlet from 
		loading at all, - use org.springframework.web.servlet.DispatcherServlet. 
		- - If you'd like these errors to result in all requests for CAS getting 
		a "CAS is Unavailable" response, - use org.jasig.cas.web.init.SafeDispatcherServlet -->
	<servlet>
		<servlet-name>cas</servlet-name>
		<servlet-class>org.jasig.cas.web.init.SafeDispatcherServlet</servlet-class>
		<init-param>
			<param-name>publishContext</param-name>
			<param-value>false</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/login</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/logout</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/register</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/push</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/qqLogin</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/kaixinLogin</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/alipayLogin</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/xunleiLogin</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/sohuLogin</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/validate</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/serviceValidate</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/samlValidate</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/proxy</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/proxyValidate</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/CentralAuthenticationService</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/services/add.html</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/services/viewStatistics.html</url-pattern>
	</servlet-mapping>


	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/services/logout.html</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/services/loggedOut.html</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/services/manage.html</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/services/edit.html</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/openid/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/services/deleteRegisteredService.html</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/authorizationFailure.html</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>cas</servlet-name>
		<url-pattern>/403.html</url-pattern>
	</servlet-mapping>

	<!-- 验证码servlet -->
	<servlet>
		<servlet-name>kaptcha</servlet-name>
		<servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
		<init-param>
			<param-name>kaptcha.border</param-name>
			<param-value>no</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.textproducer.font.color</param-name>
			<param-value>black</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.textproducer.char.length</param-name>
			<param-value>4</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.image.width</param-name>
			<param-value>120</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.image.height</param-name>
			<param-value>50</param-value>
		</init-param>
		</servlet>
		<servlet-mapping>
		<servlet-name>kaptcha</servlet-name>
		<url-pattern>/kaptcha.jpgx</url-pattern>
	</servlet-mapping>

	<error-page>
		<exception-type>org.springframework.context.ApplicationContextException</exception-type>
		<location>/WEB-INF/view/cas/brokenContext.jsp</location>
	</error-page>

	<error-page>
		<error-code>404</error-code>
		<location>/</location>
	</error-page>

	<error-page>
		<error-code>403</error-code>
		<location>/403.html</location>
	</error-page>

</web-app>