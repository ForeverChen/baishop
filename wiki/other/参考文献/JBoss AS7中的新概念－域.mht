From: <ÓÉ Windows Internet Explorer 8 ±£´æ>
Subject: =?gb2312?B?wLa14yAtIEpCb3NzIEFTN9bQtcTQwrjFxO6jrdPy?=
Date: Thu, 5 Jan 2012 15:53:17 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01CCCBC2.24409D10"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.6157

This is a multi-part message in MIME format.

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: base64
Content-Location: http://bluedash.net/spaces/JBoss%20AS7%E4%B8%AD%E7%9A%84%E6%96%B0%E6%A6%82%E5%BF%B5%EF%BC%8D%E5%9F%9F

77u/PCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlv
bmFsLy9FTiIgImh0dHA6Ly93d3cudzNjLm9yZy9UUi8xOTk5L1JFQy1odG1sNDAxLTE5OTkxMjI0
L2xvb3NlLmR0ZCI+DQo8SFRNTCBsYW5nPWVuIHhtbDpsYW5nPSJlbiIgeG1sbnM9Imh0dHA6Ly93
d3cudzMub3JnLzE5OTkveGh0bWwiPjxIRUFEPjxUSVRMRT7ok53ngrkgLSBKQm9zcyBBUzfkuK3n
moTmlrDmpoLlv7XvvI3ln588L1RJVExFPg0KPE1FVEEgY29udGVudD10ZXh0L2h0bWw7Y2hhcnNl
dD1VVEYtOCBodHRwLWVxdWl2PWNvbnRlbnQtdHlwZT4NCjxNRVRBIG5hbWU9Z29vZ2xlLXNpdGUt
dmVyaWZpY2F0aW9uIA0KY29udGVudD1aaHBvQ2k3ZTZfVm9renJOeGlkemI2cDI0SWVNR3d3M3RX
dlJGUjM3M080Pg0KPE1FVEEgbmFtZT1kZXNjcmlwdGlvbiANCmNvbnRlbnQ9IkpCb3NzIEFTN+aW
sOWKoOWFpeS6huWfn++8iGRvbWFpbu+8ieeahOamguW/teW5tuWunueOsOS6huebuOWFs+WKn+iD
veOAguWfn+eahOaPkOWHuuWPiuWunueOsO+8jOWFtuebrueahOaYr+S9v+W+l+WkmuWPsEpCb3Nz
IEFT5pyN5Yqh5Zmo55qE6YWN572u5Y+v5Lul6ZuG5Lit5LqO5LiA54K577yM57uf5LiA6YWN572u
44CB57uf5LiA6YOo572y77yM5LuO6ICM5Zyo566h55CG5aSa5Y+wSkJvc3MgQVPmnI3liqHlmajm
l7bvvIzlrp7njrDpm4bkuK3nrqHnkIbjgILmnKzmlofor6bnu4bku4vnu43lpoLkvZXkvb/nlKhB
UzfnmoTov5nkuIDmlrDnibnmgKfjgIIiPg0KPE1FVEEgbmFtZT1rZXl3b3JkcyANCmNvbnRlbnQ9
Impib3NzLCBhczcsIGRvbWFpbiwg5Z+fLCDlpJrln58sIHNlcnZlciwgZ3JvdXAsIGNsdXN0ZXIs
IOe+pOmbhiwgY2xvdWQsIOS6keiuoeeulywg5LqRIj48TElOSyANCnRpdGxlPSJCbHVlZGFzaCBB
dG9tIEZlZWQiIHJlbD1hbHRlcm5hdGUgdHlwZT1hcHBsaWNhdGlvbi9hdG9tK3htbCANCmhyZWY9
Ii9mZWVkLmF0b20iPjxMSU5LIHJlbD0ic2hvcnRjdXQgaWNvbiIgdHlwZT1pbWFnZS94LWljb24g
DQpocmVmPSIvaW1hZ2VzL3NreS1ibHVlL2ljb25fMTZ4MTYuaWNvIj48TElOSyByZWw9c3R5bGVz
aGVldCB0eXBlPXRleHQvY3NzIA0KaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC9zdHlsZXNoZWV0
cy9nbG9iYWwvYXBwbGljYXRpb24uY3NzPzEzMjMxOTAxMTQiIA0KbWVkaWE9c2NyZWVuPjxMSU5L
IHJlbD1zdHlsZXNoZWV0IHR5cGU9dGV4dC9jc3MgDQpocmVmPSJodHRwOi8vYmx1ZWRhc2gubmV0
L3N0eWxlc2hlZXRzL2dsb2JhbC9pbXByb21wdHUuY3NzPzEzMjMxOTAxMTQiIA0KbWVkaWE9c2Ny
ZWVuPjxMSU5LIHJlbD1zdHlsZXNoZWV0IHR5cGU9dGV4dC9jc3MgDQpocmVmPSJodHRwOi8vYmx1
ZWRhc2gubmV0L3N0eWxlc2hlZXRzL2dsb2JhbC9zZWFyY2guY3NzPzEzMjMxOTAxMTQiIA0KbWVk
aWE9c2NyZWVuPjxMSU5LIHJlbD1zdHlsZXNoZWV0IHR5cGU9dGV4dC9jc3MgDQpocmVmPSJodHRw
Oi8vYmx1ZWRhc2gubmV0L3N0eWxlc2hlZXRzL3NreS1ibHVlL3NjYWZmb2xkLmNzcz8xMzIzMTkw
MTE0IiANCm1lZGlhPXNjcmVlbj48TElOSyByZWw9c3R5bGVzaGVldCB0eXBlPXRleHQvY3NzIA0K
aHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC9qYXZhc2NyaXB0cy9zeW50YXhIaWdobGlnaHRlci9z
dHlsZXMvc2hDb3JlLmNzcz8xMzIzMTkwMTE0IiANCm1lZGlhPXNjcmVlbj48TElOSyByZWw9c3R5
bGVzaGVldCB0eXBlPXRleHQvY3NzIA0KaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC9qYXZhc2Ny
aXB0cy9zeW50YXhIaWdobGlnaHRlci9zdHlsZXMvc2hUaGVtZURlZmF1bHQuY3NzPzEzMjMxOTAx
MTQiIA0KbWVkaWE9c2NyZWVuPg0KPE1FVEEgbmFtZT1HRU5FUkFUT1IgY29udGVudD0iTVNIVE1M
IDguMDAuNjAwMS4xOTE3MCI+PC9IRUFEPg0KPEJPRFk+DQo8RElWIGNsYXNzPXdyYXBwZXI+DQo8
RElWIGlkPXRvcF9tZW51Pg0KPERJViBpZD10b3BfbWVudV9saW5rcy1yaWdodD48QSBocmVmPSJo
dHRwOi8vYmx1ZWRhc2gubmV0L2xvZ2luIj7nmbvlvZU8L0E+IHwgPEEgDQpocmVmPSJodHRwOi8v
Ymx1ZWRhc2gubmV0L3VzZXJzL25ldyI+5rOo5YaMPC9BPiB8IOmAieaLqeearuiCpO+8miA8SU1H
IA0Kb25jbGljaz0id2luZG93LmxvY2F0aW9uLmhyZWY9Jy9za2lucy9saWdodC1ibHVlJyIgYWx0
PUxpZ2h0LWJsdWUgDQpzcmM9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvaW1hZ2VzL3RoZW1lcy9saWdo
dC1ibHVlLmpwZz8xMzIzMTkwMTE0Ij4gPElNRyANCm9uY2xpY2s9IndpbmRvdy5sb2NhdGlvbi5o
cmVmPScvc2tpbnMvc2t5LWJsdWUnIiBhbHQ9U2t5LWJsdWUgDQpzcmM9Imh0dHA6Ly9ibHVlZGFz
aC5uZXQvaW1hZ2VzL3RoZW1lcy9za3ktYmx1ZS5qcGc/MTMyMzE5MDExNCI+IDxJTUcgDQpvbmNs
aWNrPSJ3aW5kb3cubG9jYXRpb24uaHJlZj0nL3NraW5zL3BpbmsnIiBhbHQ9UGluayANCnNyYz0i
aHR0cDovL2JsdWVkYXNoLm5ldC9pbWFnZXMvdGhlbWVzL3BpbmsuanBnPzEzMjMxOTAxMTQiPiAm
bmJzcDsmbmJzcDsgDQo8L0RJVj48L0RJVj4NCjxESVYgaWQ9Y29udGFpbmVyLWJhbm5lcj48L0RJ
Vj4NCjxESVYgY2xhc3M9Y29udGFpbmVyPg0KPERJViBpZD1tYWluLW1lbnUtbGVmdD48U1BBTiBj
bGFzcz1tYWluLW1lbnUtY2F0ZWdvcnk+PEEgDQpocmVmPSJodHRwOi8vYmx1ZWRhc2gubmV0LyI+
6aaW6aG1PC9BPjwvU1BBTj4gPFNQQU4gY2xhc3M9bWFpbi1tZW51LWNhdGVnb3J5PjxBIA0KaHJl
Zj0iaHR0cDovL2JsdWVkYXNoLm5ldC9jYXRlZ29yaWVzLyVFNyU5RiVBRCVFNyVBRiU4Ny9zcGFj
ZXMiPuefreevhzwvQT48L1NQQU4+IA0KPFNQQU4gY2xhc3M9bWFpbi1tZW51LWNhdGVnb3J5LWJp
dD48QSANCmhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvY2F0ZWdvcmllcy8lRTclQkMlOTYlRTcl
QTglOEIvc3BhY2VzIj7nvJbnqIs8L0E+PC9TUEFOPiANCjxTUEFOIGNsYXNzPW1haW4tbWVudS1j
YXRlZ29yeT48QSANCmhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvY2F0ZWdvcmllcy8lRTYlOTcl
QTUlRTglQUUlQjAvc3BhY2VzIj7ml6XorrA8L0E+PC9TUEFOPiANCjwvRElWPg0KPERJViBpZD1t
YWluLW1lbnUtcmlnaHQ+DQo8RElWIGNsYXNzPXNlYXJjaD48SU5QVVQgDQpvbmtleWRvd249Imlm
IChldmVudC5rZXlDb2RlID09IDEzKSBnb19zZWFyY2goZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQo
J3NlYXJjaF9maWVsZCcpLnZhbHVlKTsiIA0KaWQ9c2VhcmNoX2ZpZWxkIHRpdGxlPeaQnOe0oiAN
Cm9uY2xpY2s9ImRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzZWFyY2hfZmllbGQnKS52YWx1ZT0n
JzsiIHZhbHVlPeaQnOe0oiBzaXplPTE1PiANCjwvRElWPg0KPERJViBpZD1idG5TZWFyY2ggDQpv
bmNsaWNrPSJnb19zZWFyY2goZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlYXJjaF9maWVsZCcp
LnZhbHVlKTsiPjwvRElWPjwvRElWPjwvRElWPg0KPERJViBzdHlsZT0iSEVJR0hUOiAxcHgiPjwv
RElWPg0KPERJViBpZD1jb250YWluZXJfYW5jaG9yIGNsYXNzPWNvbnRhaW5lcj4NCjxESVYgaWQ9
bWFpbl9hbmNob3IgY2xhc3M9bWFpbj48U1BBTiBjbGFzcz10aXRsZT5KQm9zcyANCkFTN+S4reea
hOaWsOamguW/te+8jeWfnzwvU1BBTj4mbmJzcDsmbmJzcDs8U1BBTiBjbGFzcz1hcnRpY2xlX2xp
bms+IDxBIA0KaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC9jYXRlZ29yaWVzLyVFNyVCQyU5NiVF
NyVBOCU4Qi9zcGFjZXMiPue8lueoizwvQT4gLyA8QSANCmhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5u
ZXQvdXNlcnMv6Zi/55S3Ij7pmL/nlLc8L0E+IDwvU1BBTj4NCjxESVYgc3R5bGU9IldJRFRIOiAx
MDAlOyBESVNQTEFZOiBibG9jazsgSEVJR0hUOiAxMHB4OyBDTEVBUjogYm90aCI+PC9ESVY+DQo8
RElWIGNsYXNzPW1vcmVmdW4tY29udGVudD48U1BBTiBzdHlsZT0iRk9OVC1XRUlHSFQ6IGJvbGQi
PuaJgOWxnuaWh+eroOezu+WIlzwvU1BBTj7vvJogPEEgDQpocmVmPSJodHRwOi8vYmx1ZWRhc2gu
bmV0L3Nlcmllcy9KQm9zcyUyMEFTJTIwNyUyMCVFNyVCMyVCQiVFNSU4OCU5NyVFNCVCQiU4QiVF
NyVCQiU4RCI+SkJvc3MgDQpBUyA3IOezu+WIl+S7i+e7jTwvQT4gDQo8RElWIHN0eWxlPSJXSURU
SDogMTAwJTsgRElTUExBWTogYmxvY2s7IEhFSUdIVDogMTBweDsgQ0xFQVI6IGJvdGgiPjwvRElW
PjwvRElWPg0KPERJViBzdHlsZT0iV0lEVEg6IDEwMCU7IERJU1BMQVk6IGJsb2NrOyBIRUlHSFQ6
IDEwcHg7IENMRUFSOiBib3RoIj48L0RJVj4NCjxQPkpCb3NzIEFTN+aWsOWKoOWFpeS6huWfn++8
iGRvbWFpbu+8ieeahOamguW/teW5tuWunueOsOS6huebuOWFs+WKn+iDveOAguWfn+eahOaPkOWH
uuWPiuWunueOsO+8jOWFtuebrueahOaYr+S9v+W+l+WkmuWPsEpCb3NzIA0KQVPmnI3liqHlmajn
moTphY3nva7lj6/ku6Xpm4bkuK3kuo7kuIDngrnvvIznu5/kuIDphY3nva7jgIHnu5/kuIDpg6jn
vbLvvIzku47ogIzlnKjnrqHnkIblpJrlj7BKQm9zcyBBU+acjeWKoeWZqOaXtu+8jOWunueOsOmb
huS4reeuoeeQhuOAguacrOaWh+ivpue7huS7i+e7jeWmguS9leS9v+eUqEFTN+eahOi/meS4gOaW
sOeJueaAp+OAgjwvUD4NCjxIMj7ln5/vvIhEb21haW7vvInnmoTmpoLlv7Xlj4rlhbbkuI7nvqTp
m4bvvIhDbHVzdGVy77yJ55qE5Yy65YirPC9IMj4NCjxQPuWvueS6juS9v+eUqOi/h0pCb3NzIA0K
QVPov4flvoDniYjmnKznmoTnlKjmiLfvvIzlj6/og73lr7lBU+aJgOaPkOS+m+eahOe+pOmbhuWK
n+iDveW3sue7j+W+iOeGn+aCieS6hu+8jOWcqOeQhuino+Wfn+eahOaXtuWAmeWPr+iDveS8mumB
h+WIsOWbsOmavuOAgumCo+S5iOWfn+WSjOe+pOmbhuacieS7gOS5iOWMuuWIq++8jOeUqOWkhOS4
iuacieS7gOS5iOS4jeWQjOWRou+8nzwvUD4NCjxQPuaAu+eahOadpeiusu+8jEpCb3Nz55qE576k
6ZuG55qE55uu55qE5piv5o+Q5L6b77yaPC9QPg0KPFVMPg0KICA8TEk+6LSf6L295bmz6KGh77yI
TG9hZCBCYWxhbmNl77yJPC9MST4NCiAgPExJPumrmOWPr+eUqO+8iEhpZ2ggQXZhaWxhYmxpdHnv
vIk8L0xJPjwvVUw+DQo8UD7ogIzln5/nmoTnm67nmoTliJnmmK/lsIblpJrlj7DmnI3liqHlmajn
u4TmiJDkuIDkuKrmnI3liqHlmajnu4TvvIhTZXJ2ZXIgR3JvdXDvvInvvIzlubbkuLrkuIDkuKrm
nI3liqHlmajnu4TlhoXnmoTlpJrlj7DkuLvmnLrvvIhIb3N077yJ5o+Q5L6b77yaPC9QPg0KPFVM
Pg0KICA8TEk+5Y2V54K56ZuG5Lit6YWN572u77yI6YCa6L+H5LiA5Liq5Z+f5o6n5Yi25Zmo77yM
5Y2zRG9tYWluIENvbnRyb2xsZXLvvIzlrp7njrDnu4TlhoXkuLvmnLrnmoTnu5/kuIDphY3nva7v
vIk8L0xJPg0KICA8TEk+5Y2V54K557uf5LiA6YOo572y77yM6YCa6L+H5Z+f5o6n5Yi25Zmo5bCG
6aG555uu5LiA5qyh6YOo572y6Iez57uE5YaF5YWo6YOo5Li75py644CCPC9MST48L1VMPg0KPFA+
566A5Y2V5p2l6K6y77yM576k6ZuG55qE55uu5qCH5piv6K6p5aSa5Y+w5pyN5Yqh5Zmo5YiG5pGK
5Y6L5Yqb77yM5b2T5LiA5Y+w5oiW5aSa5Y+w5pyN5Yqh5Zmo5b2T5py65pe277yM5pyN5Yqh5Y+v
5Lul57un57ut5L+d5oyB6L+Q6L2s77yb6ICM5Z+f55qE55uu5qCH5YiZ5piv5o+Q5L6b6ZuG5Lit
6YWN572u5ZKM566h55CG5aSa5Y+w5pyN5Yqh5Zmo55qE6IO95Yqb44CCPC9QPg0KPFA+5Zyo5rKh
5pyJ5Z+f55qE5qaC5b+15pe277yM6KaB5oOz6K6p576k6ZuG5YaF55qE5aSa5Y+w5pyN5Yqh5Zmo
5oiW5Yeg57uE5pyN5Yqh5Zmo5L+d5oyB57uf5LiA55qE6YWN572u77yM5LiA5Liq5LiA5Liq5YiG
5Yir55qE5Y675omL5bel57u05oqk77yM5piv6Z2e5bi46bq754Om55qE5LqL5oOF77yM6ICM5Z+f
55qE5byV5YWl6Kej5Yaz5LqG6L+Z5LiA6Zeu6aKY44CCPC9QPg0KPFA+5oiR5Lus5Y+v5Lul55CG
6Kej5Z+f5ZKM576k6ZuG55qE55u45LqS5YWz57O75pivIuato+S6pO+8iG9ydGhvZ29uYWzvvIki
55qE77ya6YCa6L+H5LiA5qiq5LiA56uW6L+Z5Lik5p2h6L2077yMSkJvc3MgQVPkuLrmiJHku6zl
nKjov5Dnu7TmlrnpnaLmj5DkvpvkuoblvLrlpKfnmoTlj6/mianlsZXog73lipvjgII8L1A+DQo8
SDI+5a6e6aqMPC9IMj4NCjxQPueGn+aCieS6hkFTN+S4rURvbWFpbueahOiuvuiuoeeQhuW/te+8
jOaOpeS4i+adpeWKqOaJi+WunumZheWBmuS4quWunumqjO+8jOeci+eci0RvbWFpbuaYr+WmguS9
leWcqEFTN+S4reW3peS9nOeahOOAgjwvUD4NCjxQPjxTVFJPTkc+5YeG5aSH5bel5L2cPC9TVFJP
Tkc+PC9QPg0KPFA+5L2/55So5Lik5Y+w55S16ISR5YGa5Li65a6e6aqM5Zmo5p2Q77yM5Lik5Y+w
55S16ISR55qESVDliIbliKvkuLogPENPREU+MTAuMC4xLjM8L0NPREU+IOWPiiA8Q09ERT4xMC4w
LjEuMTg8L0NPREU+IA0K77yM5YiG5Yir6L+Q6KGMSkJvc3MgQVM377yM5bm257uE5oiQ5LiA5Liq
5pyN5Yqh5Zmo57uE77yIU2VydmVyIEdyb3Vw77yJ44CC5YW25Lit77yM5L2/55SoIDxDT0RFPjEw
LjAuMS4zPC9DT0RFPiANCui/meWPsOacuuWZqOWBmuS4uuWfn+aOp+WItuWZqO+8iERvbWFpbiBD
b250cm9sbGVy77yJ77yaPC9QPg0KPFA+PElNRyBhbHQ9IiIgDQpzcmM9Imh0dHA6Ly9ibHVlZGFz
aC5uZXQvc3lzdGVtL3Bob3Rvcy8yNTc2L21lZGl1bS9TY3JlZW4lMjBzaG90JTIwMjAxMS0wNy0x
NyUyMGF0JTIwMTEuNDIuNTAlMjBBTS5qcGciPjwvUD4NCjxQPuWmguS4iuWbvuaJgOekuu+8jOS4
pOWPsOS4u+acuuWIhuWIq+iiq+WRveWQjeS4uuKAnW1hc3RlcuKAnOWPiuKAnXNsYXZl4oCc44CC
6YCa6L+H6YWN572u77yM5bCGbWFzdGVy5LiOc2xhdmXnu4TmiJDkuIDkuKrmnI3liqHlmajnu4Tv
vIzlkI3kuLrigJltYWluLXNlcnZlci1ncm91cOKAme+8jOWFtuS4rW1hc3RlcuWwhuWBmuS4uui/
meS4quacjeWKoeWZqOe7hOeahOWfn+aOp+WItuWZqOOAgjwvUD4NCjxQPumcgOimgeivtOaYjuS4
gOeCueeahOaYr++8jOacjeWKoeWZqOe7hChTZXJ2ZXIgDQpHcm91cCnlj6/ku6XnlLHlpJrlj7Dm
nI3liqHlmagoSG9zdCnnu4TmiJDvvIzlubbkuI3kuIDlrprlj6rmnInkuKTlj7DvvIzmiYDku6Xk
uI3opoHooqttYXN0ZXLlj4pzbGF2Zei/meagt+eahOWQjeWtl+e7mei/t+aDkeS6hu+8jOS7peS4
uuS4gOS4quacjeWKoeWZqOe7hOS7heaUr+aMgeS4gOS4u+S4gOS7juS4pOWPsGhvc3Rz44CCPC9Q
Pg0KPFA+5pys5paH5Lit5Zug5Li65Y+q5L2/55So5Lik5Y+w5pyN5Yqh5Zmo5YGa5Li65a6e6aqM
5Zmo5p2Q77yM5Zug5q2k5Ye65LqO5pa55L6/6KeS5bqm5bCG5a6D5Lus5YiG5Yir5ZG95ZCN5Li6
bWFzdGVy5Y+Kc2xhdmXjgII8L1A+DQo8UD7mraTlpJbvvIzlnKjkuIDkuKrmnI3liqHlmajnu4Tk
uK3vvIzlj6rmnInkuIDlj7Dln5/mjqfliLblmajvvIzlnKjmnKzlrp7pqozkuK3miJHku6zlsIbk
vb/nlKhtYXN0ZXLov5nlj7DmnLrlmajlgZrkuLpkb21haW4gY29udHJvbGxlcuOAgjwvUD4NCjxQ
PjxTVFJPTkc+6YWN572uPC9TVFJPTkc+PC9QPg0KPFA+QVM355Sx5LqO57uP6L+H5LqG6YeN5paw
6K6+6K6h77yM5Zug5q2k5Zyo55uu5b2V57uT5p6E5LiO6YWN572u5paH5Lu25LiK6Z2i5LiO5YmN
5LiA54mI5pys5pyJ5LqG5b6I5aSn5LiN5ZCM77yM5a+55LqO54af5oKJ5LqG5a+5QVM255qE6YWN
572u5ZKM55qE5Lq65p2l6K6y77yM5L2/55SoQVM35Lya5o6l6Kem5LiN5bCR5paw5qaC5b+15ZKM
5paw5oCd6Lev44CC5Li65LqG5riF5qWa6KGo6L6+77yM5oiR5Lya5bCG5LiA5Lqb5LiOQVM25Y+K
5Lul5YmN54mI5pys5LiN5ZCM55qE5Zyw5pa55YGa5Ye65b+F6KaB55qE6K+05piO44CCPC9QPg0K
PFA+6aaW5YWI5pivYmlu55uu5b2V5Lit55qE5YaF5a6577yaPC9QPjxQUkUgY2xhc3M9YnJ1c2g6
YmFzaDs+bGl3ZWluYW5AbWc6fi9wcm9qcy9qYm9zcy03LjAuMC5DUjEvYmluJCBscw0KZG9tYWlu
LmJhdCAgICAgICAgICBqYm9zcy1hZG1pbi5iYXQgICAgIHN0YW5kYWxvbmUuY29uZiAgICAgd3Nj
b25zdW1lLnNoDQpkb21haW4uY29uZiAgICAgICAgIGpib3NzLWFkbWluLnNoICAgICAgc3RhbmRh
bG9uZS5jb25mLmJhdCB3c3Byb3ZpZGUuYmF0DQpkb21haW4uY29uZi5iYXQgICAgIHNjcmlwdHMg
ICAgICAgICAgICAgc3RhbmRhbG9uZS5zaCAgICAgICB3c3Byb3ZpZGUuc2gNCmRvbWFpbi5zaCAg
ICAgICAgICAgc3RhbmRhbG9uZS5iYXQgICAgICB3c2NvbnN1bWUuYmF0DQo8L1BSRT4NCjxQPuWc
qEFTN+S7peWJjeeJiOacrOS4re+8jOeUqOadpeWQr+WKqEpCb3Nz5pyN5Yqh55qEIDxDT0RFPnJ1
bi5zaDwvQ09ERT4g5LiN6KeB5LqG77yM5Y+W6ICM5Luj5LmL55qE5pivIA0KPENPREU+c3RhbmRh
bG9uZS5zaDwvQ09ERT4g77yI54us56uL6L+Q6KGM5qih5byP77yJ5Y+KIDxDT0RFPmRvbWFpbi5z
aDwvQ09ERT4g77yI5Z+f6L+Q6KGM5qih5byP77yJ44CC5oiR5Lus56iN5ZCO5bCG5L2/55SoIA0K
PENPREU+ZG9tYWluLnNoPC9DT0RFPiDmnaXov5DooYxKQm9zcyBBUzfvvIzkvYbpppblhYjopoHl
sIbkuKTlj7Bob3N0c+mFjee9ruWlve+8jOaOpeS4i+adpeiusuino+S4pOWPsOacjeWKoeWZqOea
hOmFjee9ru+8mjwvUD4NCjxQPkFTN+eahOebruW9lee7k+aehOWSjOWJjeS4gOeJiOacrOacieW+
iOWkp+S4jeWQjO+8jOWboOS4uumFjee9ruaWh+S7tuWPiuWFtuaJgOWcqOS9jee9ruS5n+acieW+
iOWkp+WPmOWKqO+8jOS4i+mdouaYr0FTN+eahOebruW9lee7k+aehO+8mjwvUD48UFJFIGNsYXNz
PWJydXNoOmJhc2g7PmJpbiAgICAgICAgICAgICAgIGRvY3MgICAgICAgICAgICAgIGpib3NzLW1v
ZHVsZXMuamFyIHN0YW5kYWxvbmUNCmJ1bmRsZXMgICAgICAgICAgIGRvbWFpbiAgICAgICAgICAg
IG1vZHVsZXMgICAgICAgICAgIHdlbGNvbWUtY29udGVudA0KPC9QUkU+DQo8UD7lj6/ku6XnnIvl
iLDmnInkuIDkuKrlkI3kuLoiZG9tYWluIueahOebruW9le+8jOeci+S4gOS4i+i/meS4qmRvbWFp
buebruW9lemHjOmdoueahOWGheWuue+8mjwvUD48UFJFIGNsYXNzPWJydXNoOmJhc2g7PmNvbmZp
Z3VyYXRpb24gY29udGVudCAgICAgICBsaWIgICAgICAgICAgIGxvZyAgICAgICAgICAgc2VydmVy
cw0KPC9QUkU+DQo8UD7ov5nkuKrnm67lvZXkuK3ljIXlkKvkuoZBUzfov5DooYzlnKhkb21haW7m
qKHlvI/kuIvmiYDpnIDnmoTphY3nva7lj4rlhoXlrrnvvIzlhbbkuK3lkI3kuLrigJxjb25maWd1
cmF0aW9u4oCd55qE55uu5b2V6YeM6Z2i5ZCr5pyJ5oiR5Lus5omA6ZyA6KaB55qE6YWN572u5paH
5Lu277yaPC9QPjxQUkUgY2xhc3M9YnJ1c2g6YmFzaDs+bGl3ZWluYW5AbWJhOn4vcHJvanMvamJv
c3MtNy4wLjAuQ1IxL2RvbWFpbi9jb25maWd1cmF0aW9uJCBscw0KZG9tYWluLXByZXZpZXcueG1s
ICAgIGhvc3QueG1sICAgICAgICAgICAgICBtZ210LXVzZXJzLnByb3BlcnRpZXMNCmRvbWFpbi54
bWwgICAgICAgICAgICBob3N0X3htbF9oaXN0b3J5DQpkb21haW5feG1sX2hpc3RvcnkgICAgbG9n
Z2luZy5wcm9wZXJ0aWVzDQo8L1BSRT4NCjxQPuWFtuS4rSA8Q09ERT5kb21haW4ueG1sPC9DT0RF
PiDlkowgPENPREU+aG9zdC54bWw8L0NPREU+IA0K5piv5oiR5Lus6ZyA6KaB5YWz5rOo55qE5YaF
5a6544CC5oiR5Lus6ZyA6KaB5a+5bWFzdGVy5Y+Kc2xhdmXkuIrpnaLnmoTphY3nva7mlofku7bl
iIbliKvov5vooYzphY3nva7vvJo8L1A+DQo8UD48SU1HIGFsdD0iIiANCnNyYz0iaHR0cDovL2Js
dWVkYXNoLm5ldC9zeXN0ZW0vcGhvdG9zLzI1NzgvbWVkaXVtL1VudGl0bGVkLmpwZyI+PC9QPg0K
PFA+5LuO5LiK5Zu+5Lit5Y+v5Lul55yL5Yiw77yMbWFzdGVy55qESkJvc3MgQVPkuK3pnIDopoHp
hY3nva4gPENPREU+ZG9tYWluLnhtbDwvQ09ERT4g5Y+KIDxDT0RFPmhvc3QueG1sPC9DT0RFPiAN
CuS4pOS4quaWh+S7tu+8jOWFtuS4rSA8Q09ERT5kb21haW4ueG1sPC9DT0RFPiDmmK/lgZrkuLrl
n5/mjqfliLblmajlv4XpobvphY3nva7nmoTlhoXlrrnvvIwgPENPREU+aG9zdC54bWw8L0NPREU+
IA0K5YiZ5pivbWFzdGVy5Y+Kc2xhdmXlkIToh6rnmoRKQm9zcyBBU+mDvemcgOimgemFjee9ruea
hOaWh+S7tuOAguaIkeS7rOWFiOS7jm1hc3RlcuS4iumdoueahOmFjee9rueci+i1t++8mjwvUD4N
CjxQPjxTVFJPTkc+TWFzdGVy5LiK6Z2i55qE6YWN572uPC9TVFJPTkc+PC9QPg0KPFVMPg0KICA8
TEk+ZG9tYWluLnhtbDwvTEk+PC9VTD48UFJFIGNsYXNzPWJydXNoOnhtbDs+Jmx0O2RvbWFpbiB4
bWxucz0idXJuOmpib3NzOmRvbWFpbjoxLjAiJmd0Ow0KDQoJJmx0O2V4dGVuc2lvbnMmZ3Q7Li4u
DQoJDQoJJmx0O3N5c3RlbS1wcm9wZXJ0aWVzJmd0Oy4uLg0KCQ0KCSZsdDtwcm9maWxlcyZndDsN
CgkJJmx0O3Byb2ZpbGUgbmFtZT0iZGVmYXVsdCImZ3Q7Li4uDQoJCQ0KCQkmbHQ7cHJvZmlsZSBu
YW1lPSJoYSImZ3Q7Li4uDQoJJmx0Oy9wcm9maWxlcyZndDsNCgkNCgkmbHQ7aW50ZXJmYWNlcyZn
dDsuLi4NCgkJDQoJJmx0O3NvY2tldC1iaW5kaW5nLWdyb3VwcyZndDsuLi4NCgkNCgkmbHQ7c2Vy
dmVyLWdyb3VwcyZndDsNCgkJJmx0O3NlcnZlci1ncm91cCBuYW1lPSJtYWluLXNlcnZlci1ncm91
cCIgcHJvZmlsZT0iZGVmYXVsdCImZ3Q7Li4uDQoJCSZsdDtzZXJ2ZXItZ3JvdXAgbmFtZT0ib3Ro
ZXItc2VydmVyLWdyb3VwIiBwcm9maWxlPSJoYSImZ3Q7Li4uDQoJJmx0Oy9zZXJ2ZXItZ3JvdXBz
Jmd0Ow0KCQ0KJmx0Oy9kb21haW4mZ3Q7DQo8L1BSRT4NCjxQPui/meS4quaWh+S7tumHjOmdouac
ieWHoOS4qumDqOWIhuaYr+WAvOW+l+aIkeS7rOWFs+azqOS4gOS4i+eahO+8mjwvUD4NCjxPTD4N
CiAgPExJPmV4dGVuc2lvbnMg4oCTIOi/meS4gOmDqOWIhuWumuS5ieS6huWfn+S4reacjeWKoeWZ
qOWcqOWQr+WKqOaXtumcgOimgeWKoOi9veeahOaooeWdl+OAgkFTN+S9v+eUqOS6huWFqOaWsOiu
vuiuoeeahEpCb3NzIA0KICBNb2R1bGVz5p2l5Yqg6L295qih5Z2X77yM5aSn5bmF5o+Q6auY5LqG
5pyN5Yqh5Zmo55qE5ZCv5Yqo44CC6L+Z5LiA5YaF5a655LiN5piv5pys5paH6K6y6Kej6YeN54K5
77yM5ZCO57ut5oiR5Lya5LiT6Zeo5YaZ5LiA56+H5paH56ug5p2l5LuL57uN44CC55uu5YmN5LqG
6Kej5Yiw6L+Z5LiA56iL5bqm5Y2z5Y+v44CCPC9MST4NCiAgPExJPnByb2ZpbGVzIOKAkyANCiAg
cHJvZmlsZXPmmK9kb21haW7kuK3lrprkuYnnmoTkuIDkuKrmoLjlv4PmpoLlv7XvvIzkuZ/mmK9k
b21haW7nmoTmoLjlv4Pnu4TmiJDpg6jliIbjgILln7rkuo5wcm9maWxlc++8jEFTN+S+v+WunueO
sOS6huWfn+S4reWQhOacjeWKoeWZqOeahOe7n+S4gOmbhuS4remFjee9ru+8mueUqOaIt+WPr+mA
mui/h3Byb2ZpbGXlr7nlkITlrZDns7vnu5/vvIhzdWJzeXN0ZW3vvInov5vooYzphY3nva7vvIzl
rozmiJDlkI7lsIZwcm9maWxl6YWN572u57uZ5p+Q5Liq5oiW5aSa5Liq5pyN5Yqh5Zmo57uE77yM
5ZCE5pyN5Yqh5Zmo57uE5YaF55qE5Li75py65YWx55So5LiA5Lu96YWN572u44CCPC9MST4NCiAg
PExJPnNlcnZlciBncm91cHMg4oCTIA0KICDmnI3liqHlmajnu4TnmoTmpoLlv7Xlt7Lnu4/lnKjl
iY3pnaLnmoTku4vnu43kuK3kuIDlho3mj5Dlj4rvvIzkuZ/mmK9BUzfnmoTln5/nmoTorr7orqHk
uK3kuIDkuKrmoLjlv4Pnu4TmiJDpg6jliIbjgILlnKjov5nph4zvvIxBUzfpu5jorqTlrprkuYnk
uobkuKTkuKrmnI3liqHlmajnu4TvvJptYWluLXNlcnZlci1ncm91cOWPim90aGVyLXNlcnZlci1n
cm91cO+8jOWug+S7rOWIhuWIq+S9v+eUqOKAmWRlZmF1bHTigJkgDQogIHByb2ZpbGXlj4rigJlo
YeKAmSBwcm9maWxl44CC5Zyo5pys5a6e6aqM5Lit77yM5oiR5Lus5bCG5L2/55SobWFpbi1zZXJ2
ZXItZ3JvdXDjgII8L0xJPjwvT0w+DQo8VUw+DQogIDxMST5ob3N0LnhtbDwvTEk+PC9VTD48UFJF
IGNsYXNzPWJydXNoOnhtbDs+Jmx0O2hvc3QgeG1sbnM9InVybjpqYm9zczpkb21haW46MS4wIiBu
YW1lPSJtYXN0ZXIiJmd0Ow0KDQogICAgJmx0O21hbmFnZW1lbnQmZ3Q7DQoJICAgICZsdDtzZWN1
cml0eS1yZWFsbXMmZ3Q7Li4uDQogICAgICAgICAgJmx0O21hbmFnZW1lbnQtaW50ZXJmYWNlcyZn
dDsNCiAgICAgICAgICAmbHQ7bmF0aXZlLWludGVyZmFjZSBpbnRlcmZhY2U9Im1hbmFnZW1lbnQi
IHBvcnQ9Ijk5OTkiIC8mZ3Q7DQogICAgICAgICAgJmx0O2h0dHAtaW50ZXJmYWNlIGludGVyZmFj
ZT0ibWFuYWdlbWVudCIgcG9ydD0iOTk5MCIvJmd0Ow0KICAgICAgICZsdDsvbWFuYWdlbWVudC1p
bnRlcmZhY2VzJmd0Ow0KICAgICZsdDsvbWFuYWdlbWVudCZndDsNCg0KICAgICZsdDtkb21haW4t
Y29udHJvbGxlciZndDsNCiAgICAgICAmbHQ7bG9jYWwvJmd0Ow0KICAgICZsdDsvZG9tYWluLWNv
bnRyb2xsZXImZ3Q7DQoNCiAgICAmbHQ7aW50ZXJmYWNlcyZndDsNCiAgICAgICAgJmx0O2ludGVy
ZmFjZSBuYW1lPSJtYW5hZ2VtZW50IiZndDsNCiAgICAgICAgICAgICZsdDtpbmV0LWFkZHJlc3Mg
dmFsdWU9IjEwLjAuMS4zIi8mZ3Q7DQogICAgICAgICZsdDsvaW50ZXJmYWNlJmd0Ow0KICAgICAg
ICAmbHQ7aW50ZXJmYWNlIG5hbWU9InB1YmxpYyImZ3Q7DQogICAgICAgICAgICZsdDtpbmV0LWFk
ZHJlc3MgdmFsdWU9IjEwLjAuMS4zIi8mZ3Q7DQogICAgICAgICZsdDsvaW50ZXJmYWNlJmd0Ow0K
ICAgICZsdDsvaW50ZXJmYWNlcyZndDsNCg0KIAkmbHQ7anZtcyZndDsuLi4NCgkNCiAgICAmbHQ7
c2VydmVycyZndDsNCiAgICAgICAgJmx0O3NlcnZlciBuYW1lPSJzZXJ2ZXItb25lIiBncm91cD0i
bWFpbi1zZXJ2ZXItZ3JvdXAiJmd0Oy4uLg0KICAgICZsdDsvc2VydmVycyZndDsNCiZsdDsvaG9z
dCZndDsNCjwvUFJFPg0KPFA+5LiK6Z2i5piv5LiA5LqbaG9zdC54bWzkuK3pnIDopoHphY3nva7n
moTlhbPplK7lhoXlrrnvvIzlt7Lnu4/pkojlr7nopoHlgZrnmoTmtYvor5XlgZrkuobkuIDkupvp
hY3nva7kuIrpnaLnmoTkv67mlLnvvIzku6XkuIvmmK/or6bnu4bor7TmmI7vvJo8L1A+DQo8T0w+
DQogIDxMST5ob3N0IG5hbWXmjInnhafmiJHku6znmoTpnIDopoHmlLnmiJDkuoYibWFzdGVyIuOA
gjwvTEk+DQogIDxMST5tYW5hZ2VtZW50IOKAkyBtYW5hZ2VtZW505a6a5LmJ5LqG5pyN5Yqh5Zmo
55qE566h55CG56uv5Y+j77yM5YW25Lit77yaOTk5Oeerr+WPo+aYr+aJgOiwkyJuYXRpdmUi5LqM
6L+b5Yi256uv5Y+j77yM5ZCO6Z2i55qEIA0KICA8Q09ERT5qYm9zcy1hZG1pbi5zaDwvQ09ERT4g
DQogIOeuoeeQhuWRveS7pOS8muS9v+eUqOi/meS4querr+WPo++8mzk5OTDliJnmj5Dkvpvln7rk
uo5XRULpobXpnaLnmoTnrqHnkIbnq6/jgILmiJHku6znrYnkuIDkuIvkuKTnp43nrqHnkIbnq6/l
j6Ppg73kvJrnlKjliLDjgII8L0xJPg0KICA8TEk+ZG9tYWluIGNvbnRyb2xsZXIg4oCTIOWumuS5
ieacrOacjeWKoeWZqOaJgOmcgOi/nuaOpeeahGRvbWFpbuaOp+WItuWZqOaJgOWcqOWcsOWdgO+8
jOWboOS4um1hc3RlcuacrOi6q+WwseaYr2RvbWFpbiANCiAgY29udHJvbGxlcu+8jOaJgOS7pei/
nuaOpeiHs+acrOacumxvY2FsaG9zdOWNs+WPr+OAgjwvTEk+DQogIDxMST5pbnRlcmZhY2VzIOKA
kyANCiAgbWFuYWdlbWVudOWPinB1YmxpY+aOpeWPo+acjeWKoeaJgOWcqOeahOWcsOWdgO+8jOaI
keS7rOimgeWwhuWFtuiuvuS4unNsYXZl5Y+v5Lul6K6/6Zeu5Yiw55qESVDlnLDlnYDvvIzkv53o
r4FzbGF2ZeWPr+S7pei/nuaOpeiHs2hvc3Q8L0xJPg0KICA8TEk+c2VydmVycyDigJMg5LiA5Liq
54mp55CG5Li75py65a6e6ZmF5LiK5Y+v5Lul5ZCM5pe26L+Q6KGM5aSa5Y+wSkJvc3MgDQogIEFT
N+eahFNlcnZlcu+8jOiAjOavj+S4gOWPsFNlcnZlcumDveWPr+S7pemFjee9ruWIsOS4jeWQjOea
hOacjeWKoeWZqOe7hOWOu+OAguWcqOacrOWunumqjOS4re+8jOaIkeS7rOS9v+eUqOacgOeugOea
hOaDheWGte+8jG1hc3RlcuS4iumdouWPqui3keS4gOS4qnNlcnZlci1vbmXvvIzlsZ7kuo5tYWlu
LXNlcnZlci1ncm91cO+8jOaKiuWFtuWug0FTN+m7mOiupOiuvuWumueahHNlcnZlcuWPr+S7pemD
veWIoOaOie+8jOWPqueVmXNlcnZlci1vbmXjgII8L0xJPjwvT0w+DQo8UD48U1RST05HPlNsYXZl
5LiK6Z2i55qE6YWN572uPC9TVFJPTkc+PC9QPg0KPFVMPg0KICA8TEk+ZG9tYWluLnhtbDwvTEk+
PC9VTD4NCjxQPlNsYXZl6L+Z5Y+w5py65Zmo5LiN5L2c5Li65Z+f5o6n5Yi25Zmo6ICM5a2Y5Zyo
77yM5Zug5q2k5LiN6ZyA6KaB566h5a6D77yM5Lmf5Y+v5Lul5bCGZG9tYWluLnhtbOWIoOaOieaI
luaUueWQjeOAgjwvUD4NCjxVTD4NCiAgPExJPmhvc3QueG1sPC9MST48L1VMPjxQUkUgY2xhc3M9
YnJ1c2g6eG1sOz4mbHQ7aG9zdCB4bWxucz0idXJuOmpib3NzOmRvbWFpbjoxLjAiIG5hbWU9InNs
YXZlIiZndDsNCg0KICAgICZsdDtkb21haW4tY29udHJvbGxlciZndDsNCiAgICAgICAmbHQ7cmVt
b3RlIGhvc3Q9IjEwLjAuMS4zIiBwb3J0PSI5OTk5Ii8mZ3Q7DQogICAgJmx0Oy9kb21haW4tY29u
dHJvbGxlciZndDsNCg0KICAgICZsdDtpbnRlcmZhY2VzJmd0Ow0KICAgICAgICAmbHQ7aW50ZXJm
YWNlIG5hbWU9Im1hbmFnZW1lbnQiJmd0Ow0KICAgICAgICAgICAgJmx0O2luZXQtYWRkcmVzcyB2
YWx1ZT0iMTAuMC4xLjE4Ii8mZ3Q7DQogICAgICAgICZsdDsvaW50ZXJmYWNlJmd0Ow0KICAgICAg
ICAmbHQ7aW50ZXJmYWNlIG5hbWU9InB1YmxpYyImZ3Q7DQogICAgICAgICAgICZsdDtpbmV0LWFk
ZHJlc3MgdmFsdWU9IjEwLjAuMS4xOCIvJmd0Ow0KICAgICAgICAmbHQ7L2ludGVyZmFjZSZndDsN
CiAgICAmbHQ7L2ludGVyZmFjZXMmZ3Q7DQoNCiAJJmx0O2p2bXMmZ3Q7Li4uDQoJDQogICAgJmx0
O3NlcnZlcnMmZ3Q7DQogICAgICAgICZsdDtzZXJ2ZXIgbmFtZT0ic2VydmVyLW9uZSIgZ3JvdXA9
Im1haW4tc2VydmVyLWdyb3VwIiZndDsuLi4NCiAgICAmbHQ7L3NlcnZlcnMmZ3Q7DQombHQ7L2hv
c3QmZ3Q7DQo8L1BSRT4NCjxQPuS4iumdoueahOmFjee9ruacieWHoOeCuemcgOimgeivtOaYju+8
mjwvUD4NCjxVTD4NCiAgPExJPnNsYXZl6YeM6Z2i77yMaG9zdCBuYW1l5oyH5a6a5Li6InNsYXZl
IuOAgjwvTEk+DQogIDxMST5kb21haW4tY29udHJvbGxlcu+8muaMh+WumuS4um1hc3RlcueahElQ
77yaMTAuMC4xLjPvvIzpgJrov4c5OTk5566h55CG56uv5Y+j6L+b6KGM6YCa6K6v44CCPC9MST4N
CiAgPExJPnNsYXZl5LiK6Z2i77yM5bGe5LqObWFpbi1zZXJ2ZXItZ3JvdXDnmoRzZXJ2ZXLkuZ/l
kb3lkI3kuLoic2VydmVyLW9uZSLvvIzov5nkvJrlkoxtYXN0ZXLkuIrpnaLnmoRzZXJ2ZXLlhrLn
qoHlkJfvvJ/lrp7pmYXkuIrkuI3kvJrvvIzlm6DkuLrkuKTlj7DlkIzmoLflkI3lrZfnmoRzZXJ2
ZXLov5DooYzlnKjkuI3lkIznmoRob3N05b2T5Lit44CCPC9MST48L1VMPg0KPFA+PFNUUk9ORz7p
g6jnvbI8L1NUUk9ORz48L1A+DQo8UD7phY3nva7lrozmiJDlkI7vvIzmjqXkuIvmnaXkvr/liLDk
uoblrp7pmYXpg6jnvbLnmoTpmLbmrrXvvIzmiJHku6zlsIZtYXN0ZXLlkoxzbGF2ZeS4iumdouea
hEFTN+WIhuWIq+eUqCA8Q09ERT5kb21haW4uc2g8L0NPREU+IOWQr+WKqOi1t+adpeOAgjwvUD48
UFJFIGNsYXNzPWJydXNoOmJhc2g7PltTZXJ2ZXI6c2VydmVyLW9uZV0gMjE6MTc6MTQsNDkxIElO
Rk8gIFtvcmcuamJvc3MuYXNdIChDb250cm9sbGVyIEJvb3QgVGhyZWFkKSBKQm9zcyBBUyA3LjAu
MC5DUjEgIldoaXRlIFJhYmJpdCIgc3RhcnRlZCBpbiA2MDI5bXMgLSBTdGFydGVkIDEwOSBvZiAx
NjMgc2VydmljZXMgKDU0IHNlcnZpY2VzIGFyZSBwYXNzaXZlIG9yIG9uLWRlbWFuZCkNCltIb3N0
IENvbnRyb2xsZXJdIDIxOjE4OjAyLDYzNSBJTkZPICBbb3JnLmpib3NzLmRvbWFpbl0gKHBvb2wt
My10aHJlYWQtMSkgUmVnaXN0ZXJlZCByZW1vdGUgc2xhdmUgaG9zdCBzbGF2ZQ0KPC9QUkU+DQo8
UD7lkK/liqjmiJDlip/nmoTor53vvIzlupTor6Xlj6/ku6XlnKhtYXN0ZXLkuIrpnaLnnIvliLDk
uIrpnaLnmoTml6Xlv5fvvIxzbGF2Zeiiq+aIkOWKn+eahOazqOWGjOi/m+adpeOAgjwvUD4NCjxQ
PuWujOaIkOWQr+WKqOWQju+8jOaIkeS7rOmcgOimgeWwhuW+heS9v+eUqOeahHZpcnR1YWwtaG9z
dOWQr+WKqOi1t+adpe+8jOW9k0FTN+S7pWRvbWFpbueahOaWueW8j+WQr+WKqOaXtu+8jOm7mOiu
pOaYr+S4jeWQr+WKqOS7u+S9lXZpcnR1YWwgDQpzZXJ2ZXLnmoTvvIjlnKjmiJHnm67liY3kvb/n
lKjnmoQ3LjAuMCBDUjEgV2hpdGUgUmFiYml054mI5pys5Lit5piv6L+Z5qC377yJ77yM5oiR5Lus
5Y+v5Lul5ZyoIDxDT0RFPmRvbWFpbi54bWw8L0NPREU+IA0K5Lit6YWN572u6buY6K6k5Yqg6L29
dmlydHVhbC1ob3N077yM5Lmf5Y+v5Lul5Zyo5pyN5Yqh5Zmo6L+Q6KGM6LW35p2l5ZCO77yM5L2/
55So566h55CG56uv5ZG95Luk5Yqo5oCB55qE5Yqg6L2977yM5Zyo6L+Z6YeM5oiR5YeG5aSH5L2/
55So5ZCO5LiA56eN5pa55byP77yM5LuO6ICM6K6y6KejQVM3566h55CG56uv55qE5L2/55So5pa5
5rOV44CCPC9QPg0KPFA+5ZyoQVM355qEYmlu55uu5b2V5LiL6Z2i5pyJ5LiA5LiqIDxDT0RFPmpi
b3NzLWFkbWluLnNoPC9DT0RFPiDvvIwgDQrov5nmmK9BUzfmj5DkvpvnmoTlhajmlrDnmoTnrqHn
kIblt6XlhbfvvIzmiJHku6zkvb/nlKjov5nkuKrlt6XlhbfvvIzov57mjqXoh7NtYXN0ZXLvvJo8
L1A+PFBSRSBjbGFzcz1icnVzaDpiYXNoOz4gLi9qYm9zcy1hZG1pbi5zaCANCllvdSBhcmUgZGlz
Y29ubmVjdGVkIGF0IHRoZSBtb21lbnQuIFR5cGUgJ2Nvbm5lY3QnIHRvIGNvbm5lY3QgdG8gdGhl
IHNlcnZlciBvciAnaGVscCcgZm9yIHRoZSBsaXN0IG9mIHN1cHBvcnRlZCBjb21tYW5kcy4NCltk
aXNjb25uZWN0ZWQgL10gY29ubmVjdCAxMC4wLjEuMw0KQ29ubmVjdGVkIHRvIGRvbWFpbiBjb250
cm9sbGVyIGF0IDEwLjAuMS4zOjk5OTkNCjwvUFJFPg0KPFA+5Y+v5Lul55yL5Yiw77yM5oiR5Lus
5bey57uP6L+e5o6l5Yiw5LqGbWFzdGVy55qEOTk5OeeuoeeQhuerr+WPo+OAguaOpeS4i+adpeWP
r+S7peafpeeciyJkZWZhdWx0Iui/meS4qnByb2ZpbGXlvZPkuK3nmoR3ZWLmqKHlnZfnmoTov5Do
oYzmg4XlhrXvvJo8L1A+PFBSRSBjbGFzcz1icnVzaDpiYXNoOz5bZG9tYWluQDEwLjAuMS4zOjk5
OTkgL10gL3Byb2ZpbGU9ZGVmYXVsdC9zdWJzeXN0ZW09d2ViOnJlYWQtY2hpbGRyZW4tbmFtZXMo
Y2hpbGQtdHlwZT1jb25uZWN0b3IpDQp7DQogICAgIm91dGNvbWUiID0mZ3Q7ICJzdWNjZXNzIiwN
CiAgICAicmVzdWx0IiA9Jmd0OyBbImh0dHAiXQ0KfQ0KPC9QUkU+DQo8UD7lj6/op4FodHRw5pyN
5Yqh5Zmo5bey57uP5ZCv5Yqo77yM55Sx5LqO5oiR5Lus55qEIm1haW4tc2VydmVyLWdyb3VwIuS9
v+eUqOeahOaYr2RlZmF1bHTov5nkuKpwcm9maWxl77yM5Zug5q2k77yM5pyN5Yqh5Zmo57uE5Lit
55qE5Lik5Y+waG9zdOeahHdlYuaooeWdl+aOpeWPl3Byb2ZpbGXnmoTnu5/kuIDphY3nva7vvIzp
g73mmK/lt7LlkK/liqjnmoTjgILnu6fnu63nnIvkuIDkuIt3ZWLmqKHlnZfkuK3nmoTnu4boioLv
vJo8L1A+PFBSRSBjbGFzcz1icnVzaDpiYXNoOz5bZG9tYWluQDEwLjAuMS4zOjk5OTkgL10gL3By
b2ZpbGU9ZGVmYXVsdC9zdWJzeXN0ZW09d2ViL2Nvbm5lY3Rvcj1odHRwOnJlYWQtcmVzb3VyY2Uo
cmVjdXJzaXZlPXRydWUpDQp7DQogICAgIm91dGNvbWUiID0mZ3Q7ICJzdWNjZXNzIiwNCiAgICAi
cmVzdWx0IiA9Jmd0OyB7DQogICAgICAgICJwcm90b2NvbCIgPSZndDsgIkhUVFAvMS4xIiwNCiAg
ICAgICAgInNjaGVtZSIgPSZndDsgImh0dHAiLA0KICAgICAgICAic29ja2V0LWJpbmRpbmciID0m
Z3Q7ICJodHRwIiwNCiAgICAgICAgInNzbCIgPSZndDsgdW5kZWZpbmVkLA0KICAgICAgICAidmly
dHVhbC1zZXJ2ZXIiID0mZ3Q7IHVuZGVmaW5lZA0KICAgIH0NCn0NCjwvUFJFPg0KPFA+5rOo5oSP
5YiwdmlydHVhbC1zZXJ2ZXLnmoTnirbmgIHmmK/mnKrlrprkuYnvvIh1bmRlZmluZWTvvInvvIzm
iJHku6zopoHmg7PlsIbkuIDkuKp3ZWLpobnnm67pg6jnvbLov5vmnI3liqHlmajnu4TkuK3nmoTl
kITkuKpob3N077yM5bCx5b+F6aG75Yqg6L295LiA5Liq5b6F6YOo572y55qEdmlydHVhbC1zZXJ2
ZXLvvIzlm6DmraTmiJHku6zkvb/nlKjlkb3ku6TmnaXmt7vliqDvvJo8L1A+PFBSRSBjbGFzcz1i
cnVzaDpiYXNoOz5bZG9tYWluQDEwLjAuMS4zOjk5OTkgL10gL3Byb2ZpbGU9ZGVmYXVsdC9zdWJz
eXN0ZW09d2ViL3ZpcnR1YWwtc2VydmVyPW90aGVyLmNvbTphZGQgICANCnsNCiAgICAib3V0Y29t
ZSIgPSZndDsgInN1Y2Nlc3MiLA0KICAgICJyZXN1bHQiID0mZ3Q7IHsic2VydmVyLWdyb3VwcyIg
PSZndDsgWygibWFpbi1zZXJ2ZXItZ3JvdXAiID0mZ3Q7IHsNCiAgICAibWFzdGVyIiA9Jmd0OyB7
DQogICAgICAgICJob3N0IiA9Jmd0OyAibWFzdGVyIiwNCiAgICAgICAgInJlc3BvbnNlIiA9Jmd0
OyB7Im91dGNvbWUiID0mZ3Q7ICJzdWNjZXNzIn0NCiAgICB9LA0KICAgICJzbGF2ZSIgPSZndDsg
ew0KICAgICAgICAiaG9zdCIgPSZndDsgInNsYXZlIiwNCiAgICAgICAgInJlc3BvbnNlIiA9Jmd0
OyB7DQogICAgICAgICAgICAib3V0Y29tZSIgPSZndDsgInN1Y2Nlc3MiLA0KICAgICAgICAgICAg
InJlc3VsdCIgPSZndDsgdW5kZWZpbmVkDQogICAgICAgIH0NCiAgICB9DQp9KV19DQp9DQo8L1BS
RT4NCjxQPuWPr+S7peeci+WIsO+8jOaIkeS7rOS5i+WJjeWcqCA8Q09ERT5kb21haW4ueG1sPC9D
T0RFPiDkuK3phY3nva7nmoQg4oCcb3RoZXIuY29t4oCdIOi/meS4qiB2aXJ0dWFsIA0KaG9zdOii
q+aIkOWKn+a3u+WKoOS6huOAgjwvUD4NCjxQPuaOpeS4i+adpeaYr+mDqOe9sldFQuW6lOeUqOea
hOeOr+iKgu+8jOaIkeS7rOmmluWFiOeUqG1hdmVu5Yi25L2c5LiA5Liq5pyA566A5Y2V55qEd2Vi
6aG555uu77yM5LuF5YyF5ZCr5LiA5Liq5qyi6L+O6aG16Z2i77yaPC9QPjxQUkUgY2xhc3M9YnJ1
c2g6YmFzaDs+bXZuIGFyY2hldHlwZTpnZW5lcmF0ZSAtRGdyb3VwSWQ9Y29tLm15Y29tcGFueS5h
cHAgLURhcnRpZmFjdElkPW15LXdlYmFwcCAtRGFyY2hldHlwZUFydGlmYWN0SWQ9bWF2ZW4tYXJj
aGV0eXBlLXdlYmFwcA0KPC9QUkU+DQo8UD7nlJ/miJDnmoTpobnnm67lpoLkuIvvvJo8L1A+PFBS
RSBjbGFzcz1icnVzaDpiYXNoOz4uDQp8LS0gcG9tLnhtbA0KYC0tIHNyYw0KICAgIGAtLSBtYWlu
DQogICAgICAgIHwtLSByZXNvdXJjZXMNCiAgICAgICAgYC0tIHdlYmFwcA0KICAgICAgICAgICAg
fC0tIFdFQi1JTkYNCiAgICAgICAgICAgIHwgICBgLS0gd2ViLnhtbA0KICAgICAgICAgICAgYC0t
IGluZGV4LmpzcA0KPC9QUkU+DQo8UD7kvb/nlKjlpoLkuIvlkb3ku6TlsIbpobnnm67miZPmiJBX
QVLljIXvvJo8L1A+PFBSRSBjbGFzcz1icnVzaDpiYXNoOz5tdm4gcGFja2FnZQ0KPC9QUkU+DQo8
UD7lvpfliLB3YXLvvJo8L1A+PFBSRSBjbGFzcz1icnVzaDpiYXNoOz50YXJnZXQNCmAtLSBteS13
ZWJhcHAud2FyDQo8L1BSRT4NCjxQPuaOpeS4i+adpeaYr+mDqOe9sui/meS4qndhcuWMhe+8jOWv
ueS6juacrOasoeWunumqjOadpeiusu+8jOWFs+mUrueahOmDqOWIhuWcqOS6juiDveWQpumAmui/
h2RvbWFpbuaPkOS+m+eahHNlcnZlciBncm91cOeuoeeQhuWKn+iDve+8jOS4gOasoeWwhuS4gOS4
qumhueebrumDqOe9sui/m3NlcnZlciANCmdyb3Vw5Lit55qE5aSa5Y+w5pyN5Yqh5Zmo44CC5oiR
5Lus5o6l5LiL5p2l5bCx6aqM6K+B6L+Z54K577yM6aG65L6/55yL5LiLQVM35o+Q5L6b55qEV0VC
566h55CG5Yqf6IO977yM5omT5byAV0VC5rWP6KeI5Zmo77yM6K6/6ZeubWFzdGVy55qESFRUUOer
r+WPo+eahOeuoeeQhuWcsOWdgO+8mjwvUD48UFJFIGNsYXNzPWJydXNoOmh0bWw7Pmh0dHA6Ly8x
MC4wLjEuMzo5OTkwL2NvbnNvbGUvQXBwLmh0bWwNCjwvUFJFPg0KPFA+5Y+v5Lul55yL5Yiw77yM
566h55CG6aG16K+G5Yir5Ye6QVM35q2j6L+Q6KGM5ZyoZG9tYWlu5qih5byP5LmL5LiL77yM5bm2
5LiU55uu5YmN5YWx5pyJ5Lik5Y+w5Li75py66L+Q6KGM77yI5bem5LiK6KeS55qE5YiX6KGo5YiG
5Yir5YiX5pyJbWFzdGVy5Y+Kc2xhdmXvvInjgILmiJHku6zopoHlhbPms6jnmoTmmK9zZXJ2ZXIt
Z3JvdXDvvJrngrnlh7vlj7PkuIrop5LnmoQiU2VydmVyIA0KR3JvdXBzIu+8jOi/m+WFpeacjeWK
oeWZqOe7hOeahOeuoeeQhumhtemdou+8jOeEtuWQjueCueWHu+W3pui+ueeahCJNYW5hZ2UgRGVw
bG95bWVudHMi6aG16Z2i77yM6L+b5YWl6YOo572y5Yqf6IO96aG16Z2i77yaPC9QPg0KPFA+PElN
RyBhbHQ9IiIgc3JjPSJodHRwOi8vYmx1ZWRhc2gubmV0L3N5c3RlbS9waG90b3MvMjU4MS9tZWRp
dW0vZGVwLmpwZyI+PC9QPg0KPFA+5Y+v5Lul55yL5Yiw77yM55uu5YmN6L+Y5rKh5pyJ5Lu75L2V
6LWE5rqQ6KKr5Yqg6Iez5pyN5Yqh5Zmo57uE77yM5q2k5pe254K55Ye75Y+z6L6555qEIkFkZCBD
b250ZW50IuWKn+iDve+8jOWwhiA8Q09ERT5teS13ZWJwcC53YXI8L0NPREU+IA0K5re75Yqg6L+b
Q29udGVudCBSZXBvc2l0b3J577yI5Z+f5o6n5Yi25Zmo55So5LqO5L+d5a2Y5b6F6YOo572y6LWE
5rqQ55qE55uu5b2V77yJ44CCPC9QPg0KPFA+5re75Yqg5a6M5oiQ5ZCO5aaC5LiL5Zu+5omA56S6
77yaPC9QPg0KPFA+PElNRyBhbHQ9IiIgc3JjPSJodHRwOi8vYmx1ZWRhc2gubmV0L3N5c3RlbS9w
aG90b3MvMjU4Mi9tZWRpdW0vZHAyLmpwZyI+PC9QPg0KPFA+54S25ZCO54K55Ye7IkFkZCBUbyBH
cm91cCLlsIYgPENPREU+bXktd2ViYXBwLndhcjwvQ09ERT4g5re75Yqg6IezIA0K4oCcbWFpbi1z
ZXJ2ZXItZ3JvdXDigJ3vvIzlubblsIblhbZlbmFibGXvvIzkuIDliIfpobrliKnnmoTor53nu5Pm
npzlpoLkuIvmiYDnpLrvvJo8L1A+DQo8UD48SU1HIGFsdD0iIiBzcmM9Imh0dHA6Ly9ibHVlZGFz
aC5uZXQvc3lzdGVtL3Bob3Rvcy8yNTgzL21lZGl1bS9kcDMuanBnIj48L1A+DQo8UD7mraTml7bm
iJHku6zpooTmnJ/nmoTnu5PmnpzlupTor6XmmK8gPENPREU+bXktd2ViYXBwLndhcjwvQ09ERT4g
DQrooqvlkIzml7bpg6jnvbLoh7NtYXN0ZXLlj4pzbGF2ZeS6hu+8jOWIhuWIq+ivleedgOiuv+mX
rm1hc3RlcuWPinNsYXZl55qEaHR0cOi1hOa6kO+8jOeci+eci+aYr+WQpumDvemDqOe9suS4im15
LXdlYmFwcOi/meS4quW6lOeUqOS6hu+8mjwvUD4NCjxQPjxJTUcgYWx0PSIiIHNyYz0iaHR0cDov
L2JsdWVkYXNoLm5ldC9zeXN0ZW0vcGhvdG9zLzI1ODQvbWVkaXVtL2MuanBnIj48L1A+DQo8UD7n
u5PmnpzlpoLmiJHku6zmiYDpooTmnJ/nmoTpgqPmoLfvvIzkuKTlj7DmnI3liqHlmajpg73lj6/k
u6Xorr/pl67liLDov5nkuKrpg6jnvbLnmoTotYTmupDjgILpgJrov4flr7nkuIDkuKrngrnvvIhE
b21haW4gDQpDb250cm9sbGVy77yJ55qE6YWN572u5LiO6YOo572y77yM5oiR5Lus5a6e546w5LqG
5aSaQVM35pyN5Yqh5Zmo55qE6ZuG5Lit566h55CG44CCPC9QPg0KPFA+PFNUUk9ORz7lsI/nu5M8
L1NUUk9ORz48L1A+DQo8UD7pgJrov4fln5/ov5nkuKrmpoLlv7XvvIzlrp7njrDkuoblpJrmnI3l
iqHlmajnu5/kuIDnrqHnkIbvvIznu5/kuIDphY3nva7vvIzotYTmupDnu5/kuIDpg6jnvbLnmoTn
m67moIfjgILpgJrov4fpm4bkuK3nrqHnkIbvvIzmiJHku6zlj6/ku6XlnKjmraTln7rnoYDkuIrl
ho3ov5vooYznvqTpm4bnmoTliJLliIbkuI7pg6jnvbLvvIzlrp7njrDnvqTpm4blhoXlpJrlj7Dm
nI3liqHlmajnmoTljZXngrnphY3nva7kuI7nrqHnkIbjgILlj6/ku6Xor7RBUzfnmoREb21haW7m
poLlv7XnmoTlvJXlhaXvvIzkuI7nvqTpm4bnmoTmpoLlv7Xnu4TlkIjlnKjkuIDotbfvvIzpgJro
v4fkuIDmqKrkuIDku47kuKTmnaHovbTvvIzlvaLmiJDkuoblrozmlbTnmoTlnZDmoIfns7vjgII8
L1A+DQo8SDI+5Y+C6ICD6LWE5paZPC9IMj4NCjxQPjxTVVAgY2xhc3M9Zm9vdG5vdGU+PEEgDQpo
cmVmPSJodHRwOi8vYmx1ZWRhc2gubmV0L3NwYWNlcy9KQm9zcyUyMEFTNyVFNCVCOCVBRCVFNyU5
QSU4NCVFNiU5NiVCMCVFNiVBNiU4MiVFNSVCRiVCNSVFRiVCQyU4RCVFNSU5RiU5RiNmbjEiPjE8
L0E+PC9TVVA+IA0KPEEgDQpocmVmPSJodHRwOi8vY29tbXVuaXR5Lmpib3NzLm9yZy93aWtpL0Rv
bWFpblJlcXVpcmVtZW50cyI+aHR0cDovL2NvbW11bml0eS5qYm9zcy5vcmcvd2lraS9Eb21haW5S
ZXF1aXJlbWVudHM8L0E+IA0K4oCTIEFTNyBEb21haW7pnIDmsYLmlofmoaM8L1A+DQo8UD48U1VQ
IGNsYXNzPWZvb3Rub3RlPjxBIA0KaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC9zcGFjZXMvSkJv
c3MlMjBBUzclRTQlQjglQUQlRTclOUElODQlRTYlOTYlQjAlRTYlQTYlODIlRTUlQkYlQjUlRUYl
QkMlOEQlRTUlOUYlOUYjZm4yIj4yPC9BPjwvU1VQPiANCjxBIA0KaHJlZj0iaHR0cDovL2NvbW11
bml0eS5qYm9zcy5vcmcvd2lraS9Eb21haW5NYW5hZ2VtZW50TW9kZWxEZXNpZ24iPmh0dHA6Ly9j
b21tdW5pdHkuamJvc3Mub3JnL3dpa2kvRG9tYWluTWFuYWdlbWVudE1vZGVsRGVzaWduPC9BPiAN
CuKAkyBBUzcgRG9tYWluIOeuoeeQhuaooeWei+iuvuiuoeaWh+ahozwvUD4NCjxQPjxTVVAgY2xh
c3M9Zm9vdG5vdGU+PEEgDQpocmVmPSJodHRwOi8vYmx1ZWRhc2gubmV0L3NwYWNlcy9KQm9zcyUy
MEFTNyVFNCVCOCVBRCVFNyU5QSU4NCVFNiU5NiVCMCVFNiVBNiU4MiVFNSVCRiVCNSVFRiVCQyU4
RCVFNSU5RiU5RiNmbjMiPjM8L0E+PC9TVVA+IA0KPEEgDQpocmVmPSJodHRwOi8vY29tbXVuaXR5
Lmpib3NzLm9yZy9lbi9qYm9zc2FzL2FzN191c2Vycz92aWV3PWRpc2N1c3Npb25zIj5odHRwOi8v
Y29tbXVuaXR5Lmpib3NzLm9yZy9lbi9qYm9zc2FzL2FzN191c2Vycz92aWV3PWRpc2N1c3Npb25z
PC9BPiANCuKAkyBBUzcg55So5oi356S+5Yy6PC9QPg0KPFA+PFNVUCBjbGFzcz1mb290bm90ZT48
QSANCmhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvc3BhY2VzL0pCb3NzJTIwQVM3JUU0JUI4JUFE
JUU3JTlBJTg0JUU2JTk2JUIwJUU2JUE2JTgyJUU1JUJGJUI1JUVGJUJDJThEJUU1JTlGJTlGI2Zu
NCI+NDwvQT48L1NVUD4gDQo8QSANCmhyZWY9Imh0dHA6Ly9jb21tdW5pdHkuamJvc3Mub3JnL2Vu
L2pib3NzYXMvZGV2L2pib3NzX2FzN19kZXZlbG9wbWVudD92aWV3PWRpc2N1c3Npb25zIj5odHRw
Oi8vY29tbXVuaXR5Lmpib3NzLm9yZy9lbi9qYm9zc2FzL2Rldi9qYm9zc19hczdfZGV2ZWxvcG1l
bnQ/dmlldz1kaXNjdXNzaW9uczwvQT4gDQrigJMgQVM3IOW8gOWPkeekvuWMujwvUD4NCjxQPjxT
VVAgY2xhc3M9Zm9vdG5vdGU+PEEgDQpocmVmPSJodHRwOi8vYmx1ZWRhc2gubmV0L3NwYWNlcy9K
Qm9zcyUyMEFTNyVFNCVCOCVBRCVFNyU5QSU4NCVFNiU5NiVCMCVFNiVBNiU4MiVFNSVCRiVCNSVF
RiVCQyU4RCVFNSU5RiU5RiNmbjUiPjU8L0E+PC9TVVA+IA0KPEEgDQpocmVmPSJodHRwczovL2Rv
Y3MuamJvc3Mub3JnL2F1dGhvci9kaXNwbGF5L0FTNy9BZG1pbitHdWlkZSI+aHR0cHM6Ly9kb2Nz
Lmpib3NzLm9yZy9hdXRob3IvZGlzcGxheS9BUzcvQWRtaW4rR3VpZGU8L0E+IA0K4oCTIEFTNyDn
rqHnkIblkZjmiYvlhow8L1A+5qCH562+77yaIDxBIGhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQv
dGFncy9qYm9zcyI+amJvc3M8L0E+IDxBIA0KaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC90YWdz
L2FzNyI+YXM3PC9BPiA8QSANCmhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvdGFncy9kb21haW4i
PmRvbWFpbjwvQT4gPEEgDQpocmVmPSJodHRwOi8vYmx1ZWRhc2gubmV0L3RhZ3MvJUU1JTlGJTlG
Ij7ln588L0E+IDxBIA0KaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC90YWdzLyVFNSVBNCU5QSVF
NSU5RiU5RiI+5aSa5Z+fPC9BPiA8QSANCmhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvdGFncy9z
ZXJ2ZXIiPnNlcnZlcjwvQT4gPEEgDQpocmVmPSJodHRwOi8vYmx1ZWRhc2gubmV0L3RhZ3MvZ3Jv
dXAiPmdyb3VwPC9BPiA8QSANCmhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvdGFncy9jbHVzdGVy
Ij5jbHVzdGVyPC9BPiA8QSANCmhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvdGFncy8lRTclQkUl
QTQlRTklOUIlODYiPue+pOmbhjwvQT4gPEEgDQpocmVmPSJodHRwOi8vYmx1ZWRhc2gubmV0L3Rh
Z3MvY2xvdWQiPmNsb3VkPC9BPiA8QSANCmhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvdGFncy8l
RTQlQkElOTElRTglQUUlQTElRTclQUUlOTciPuS6keiuoeeulzwvQT4gPEEgDQpocmVmPSJodHRw
Oi8vYmx1ZWRhc2gubmV0L3RhZ3MvJUU0JUJBJTkxIj7kupE8L0E+IA0KPERJViBzdHlsZT0iV0lE
VEg6IDEwMCU7IERJU1BMQVk6IGJsb2NrOyBIRUlHSFQ6IDEwcHg7IENMRUFSOiBib3RoIj48L0RJ
Vj4NCjxESVYgc3R5bGU9IlRFWFQtQUxJR046IHJpZ2h0IiBjbGFzcz1hcnRpY2xlX2xpbms+4oCU
4oCUIDxBIA0KaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC9jYXRlZ29yaWVzLyVFNyVCQyU5NiVF
NyVBOCU4Qi9zcGFjZXMiPue8lueoizwvQT4gLyA8QSANCmhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5u
ZXQvc2VyaWVzL0pCb3NzJTIwQVMlMjA3JTIwJUU3JUIzJUJCJUU1JTg4JTk3JUU0JUJCJThCJUU3
JUJCJThEIj5KQm9zcyANCkFTIDcg57O75YiX5LuL57uNPC9BPiAvIDxTUEFOIGNsYXNzPWF1dGhv
cj48QSANCmhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvdXNlcnMv6Zi/55S3Ij7pmL/nlLc8L0E+
PC9TUEFOPiAvIDIwMTEtMDctMTggMTA6MzZQTSA8L0RJVj4NCjxESVYgc3R5bGU9IlRFWFQtQUxJ
R046IHJpZ2h0IiBjbGFzcz1hcnRpY2xlX2xpbms+PFNQQU4gDQpzdHlsZT0iRk9OVC1XRUlHSFQ6
IGJvbGQiPuWIhuS6qzwvU1BBTj7vvJo8QSANCmhyZWY9Imh0dHA6Ly92LnQuc2luYS5jb20uY24v
c2hhcmUvc2hhcmUucGhwP3RpdGxlPVtKQm9zcyBBUzfkuK3nmoTmlrDmpoLlv7XvvI3ln59dSkJv
c3MgQVM35paw5Yqg5YWl5LqG5Z+f77yIZG9tYWlu77yJ55qE5qaC5b+15bm25a6e546w5LqG55u4
5YWz5Yqf6IO944CC5Z+f55qE5o+Q5Ye65Y+K5a6e546w77yM5YW255uu55qE5piv5L2/5b6X5aSa
5Y+wSkJvc3MgQVPmnI3liqHlmajnmoTphY3nva7lj6/ku6Xpm4bkuK3kuo7kuIDngrnvvIznu5/k
uIDphY3nva7jgIHnu5/kuIDpg6jnvbLvvIzku47ogIzlnKjnrqHnkIblpJrlj7BKQm9zcyBBU+ac
jeWKoeWZqOaXtu+8jOWunueOsOmbhuS4reeuoeeQhuOAguacrOaWh+ivpue7huS7i+e7jeWmguS9
leS9v+eUqEFTN+eahOi/meS4gOaWsOeJueaAp+OAgiZhbXA7dXJsPWh0dHA6Ly9ibHVlZGFzaC5u
ZXQvdC9iZmQwM2FkMzJjNjQzODlmMjIyYWJhODhkY2UzNmU3MSZhbXA7cGljPWh0dHA6Ly9ibHVl
ZGFzaC5uZXQvc3lzdGVtL3RodW1ibmFpbHMvMTA3Ni9zbWFsbC8yNTU1NDUxOTA2XzkyNjZkZTY2
ZmJfei5qcGciIA0KdGFyZ2V0PV9ibGFuaz7mlrDmtarlm7TohJY8L0E+IC8gPEEgDQpocmVmPSJo
dHRwOi8vd3d3LmthaXhpbjAwMS5jb20vcmVwYXN0ZS9ic2hhcmUucGhwP3J0aXRsZT1KQm9zcyBB
UzfkuK3nmoTmlrDmpoLlv7XvvI3ln58mYW1wO3Jjb250ZW50PUpCb3NzIEFTN+aWsOWKoOWFpeS6
huWfn++8iGRvbWFpbu+8ieeahOamguW/teW5tuWunueOsOS6huebuOWFs+WKn+iDveOAguWfn+ea
hOaPkOWHuuWPiuWunueOsO+8jOWFtuebrueahOaYr+S9v+W+l+WkmuWPsEpCb3NzIEFT5pyN5Yqh
5Zmo55qE6YWN572u5Y+v5Lul6ZuG5Lit5LqO5LiA54K577yM57uf5LiA6YWN572u44CB57uf5LiA
6YOo572y77yM5LuO6ICM5Zyo566h55CG5aSa5Y+wSkJvc3MgQVPmnI3liqHlmajml7bvvIzlrp7n
jrDpm4bkuK3nrqHnkIbjgILmnKzmlofor6bnu4bku4vnu43lpoLkvZXkvb/nlKhBUzfnmoTov5nk
uIDmlrDnibnmgKfjgIImYW1wO3J1cmw9aHR0cDovL2JsdWVkYXNoLm5ldC90L2JmZDAzYWQzMmM2
NDM4OWYyMjJhYmE4OGRjZTM2ZTcxIiANCnRhcmdldD1fYmxhbms+5byA5b+DPC9BPiAvIDxBIA0K
aHJlZj0iaHR0cDovL3d3dy5kb3ViYW4uY29tL3JlY29tbWVuZC8/dXJsPWh0dHA6Ly9ibHVlZGFz
aC5uZXQvdC9iZmQwM2FkMzJjNjQzODlmMjIyYWJhODhkY2UzNmU3MSZhbXA7dGl0bGU9SkJvc3Mg
QVM35Lit55qE5paw5qaC5b+177yN5Z+fJmFtcDtjb21tZW50PUpCb3NzIEFTN+aWsOWKoOWFpeS6
huWfn++8iGRvbWFpbu+8ieeahOamguW/teW5tuWunueOsOS6huebuOWFs+WKn+iDveOAguWfn+ea
hOaPkOWHuuWPiuWunueOsO+8jOWFtuebrueahOaYr+S9v+W+l+WkmuWPsEpCb3NzIEFT5pyN5Yqh
5Zmo55qE6YWN572u5Y+v5Lul6ZuG5Lit5LqO5LiA54K577yM57uf5LiA6YWN572u44CB57uf5LiA
6YOo572y77yM5LuO6ICM5Zyo566h55CG5aSa5Y+wSkJvc3MgQVPmnI3liqHlmajml7bvvIzlrp7n
jrDpm4bkuK3nrqHnkIbjgILmnKzmlofor6bnu4bku4vnu43lpoLkvZXkvb/nlKhBUzfnmoTov5nk
uIDmlrDnibnmgKfjgIIiIA0KdGFyZ2V0PV9ibGFuaz7osYbnk6M8L0E+IC8gPEEgDQpocmVmPSJo
dHRwOi8vc2hhcmUucmVucmVuLmNvbS9zaGFyZS9idXR0b25zaGFyZS5kbz9saW5rPWh0dHA6Ly9i
bHVlZGFzaC5uZXQvdC9iZmQwM2FkMzJjNjQzODlmMjIyYWJhODhkY2UzNmU3MSZhbXA7dGl0bGU9
SkJvc3MgQVM35Lit55qE5paw5qaC5b+177yN5Z+fJmFtcDtjb21tZW50PUpCb3NzIEFTN+aWsOWK
oOWFpeS6huWfn++8iGRvbWFpbu+8ieeahOamguW/teW5tuWunueOsOS6huebuOWFs+WKn+iDveOA
guWfn+eahOaPkOWHuuWPiuWunueOsO+8jOWFtuebrueahOaYr+S9v+W+l+WkmuWPsEpCb3NzIEFT
5pyN5Yqh5Zmo55qE6YWN572u5Y+v5Lul6ZuG5Lit5LqO5LiA54K577yM57uf5LiA6YWN572u44CB
57uf5LiA6YOo572y77yM5LuO6ICM5Zyo566h55CG5aSa5Y+wSkJvc3MgQVPmnI3liqHlmajml7bv
vIzlrp7njrDpm4bkuK3nrqHnkIbjgILmnKzmlofor6bnu4bku4vnu43lpoLkvZXkvb/nlKhBUzfn
moTov5nkuIDmlrDnibnmgKfjgIIiIA0KdGFyZ2V0PV9ibGFuaz7kurrkuro8L0E+IDwvRElWPg0K
PERJViBzdHlsZT0iV0lEVEg6IDEwMCU7IERJU1BMQVk6IGJsb2NrOyBIRUlHSFQ6IDEwcHg7IENM
RUFSOiBib3RoIj48L0RJVj4NCjxUQUJMRSANCnN0eWxlPSJCT1JERVItQk9UVE9NOiAwcHg7IEJP
UkRFUi1MRUZUOiAwcHg7IFdJRFRIOiAxMDAlOyBCT1JERVItVE9QOiAwcHg7IEJPUkRFUi1SSUdI
VDogMHB4Ij4NCiAgPFRCT0RZPg0KICA8VFI+DQogICAgPFREIHN0eWxlPSJURVhULUFMSUdOOiBs
ZWZ0OyBXSURUSDogNTAlOyBWRVJUSUNBTC1BTElHTjogdGV4dC10b3AiPg0KICAgICAgPERJViBj
bGFzcz1tb3JlZnVuLWNvbnRlbnQ+PFNQQU4gc3R5bGU9IkZPTlQtV0VJR0hUOiBib2xkIj7liY3k
uIDnr4c8L1NQQU4+77yaIDxBIA0KICAgICAgaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC9zcGFj
ZXMvSkJvc3MlMjBBUyUyMDclMjAlRTUlQkYlQUIlRTklODAlOUYlRTQlQjglOEElRTYlODklOEIi
PkpCb3NzIA0KICAgICAgQVMgNyDlv6vpgJ/kuIrmiYs8L0E+IDwvRElWPjwvVEQ+DQogICAgPFRE
IHN0eWxlPSJURVhULUFMSUdOOiByaWdodDsgV0lEVEg6IDUwJTsgVkVSVElDQUwtQUxJR046IHRl
eHQtdG9wIj4NCiAgICAgIDxESVYgY2xhc3M9bW9yZWZ1bi1jb250ZW50PjxTUEFOIHN0eWxlPSJG
T05ULVdFSUdIVDogYm9sZCI+5ZCO5LiA56+HPC9TUEFOPu+8miA8QSANCiAgICAgIGhyZWY9Imh0
dHA6Ly9ibHVlZGFzaC5uZXQvc3BhY2VzLyVFNSU5QyVBOEpCb3NzJTIwQVM3JUU0JUI4JUFEJUU4
JUJGJTlCJUU4JUExJThDJUU5JUExJUI5JUU3JTlCJUFFJUU5JTgzJUE4JUU3JUJEJUIyIj7lnKhK
Qm9zcyANCiAgICAgIEFTN+S4rei/m+ihjOmhueebrumDqOe9sjwvQT4gPC9TUEFOPjwvRElWPjwv
VEQ+PC9UUj48L1RCT0RZPjwvVEFCTEU+DQo8RElWIHN0eWxlPSJXSURUSDogMTAwJTsgRElTUExB
WTogYmxvY2s7IEhFSUdIVDogMTBweDsgQ0xFQVI6IGJvdGgiPjwvRElWPg0KPERJViBzdHlsZT0i
V0lEVEg6IDEwMCU7IERJU1BMQVk6IGJsb2NrOyBIRUlHSFQ6IDEwcHg7IENMRUFSOiBib3RoIj48
L0RJVj4NCjxTQ1JJUFQgdHlwZT10ZXh0L2phdmFzY3JpcHQ+PCEtLQpnb29nbGVfYWRfY2xpZW50
ID0gImNhLXB1Yi03OTEyNDkxNTAxMjY3MDY0IjsKLyog5q2j5paH5bm/5ZGKICovCmdvb2dsZV9h
ZF9zbG90ID0gIjAwMjg2ODgzNzMiOwpnb29nbGVfYWRfd2lkdGggPSAzMzY7Cmdvb2dsZV9hZF9o
ZWlnaHQgPSAyODA7Ci8vLS0+CjwvU0NSSVBUPg0KDQo8U0NSSVBUIHR5cGU9dGV4dC9qYXZhc2Ny
aXB0IA0Kc3JjPSJodHRwOi8vcGFnZWFkMi5nb29nbGVzeW5kaWNhdGlvbi5jb20vcGFnZWFkL3No
b3dfYWRzLmpzIj4KPC9TQ1JJUFQ+DQoNCjxESVYgc3R5bGU9IldJRFRIOiAxMDAlOyBESVNQTEFZ
OiBibG9jazsgSEVJR0hUOiAxMHB4OyBDTEVBUjogYm90aCI+PC9ESVY+DQo8RElWIHN0eWxlPSJX
SURUSDogMTAwJTsgRElTUExBWTogYmxvY2s7IEhFSUdIVDogMTBweDsgQ0xFQVI6IGJvdGgiPjwv
RElWPg0KPERJViBzdHlsZT0iV0lEVEg6IDEwMCU7IERJU1BMQVk6IGJsb2NrOyBIRUlHSFQ6IDEw
cHg7IENMRUFSOiBib3RoIj48L0RJVj4NCjxUQUJMRSBib3JkZXI9MCBjZWxsU3BhY2luZz0wIGNl
bGxQYWRkaW5nPTAgd2lkdGg9NTUwPg0KICA8VEJPRFk+DQogIDxUUj4NCiAgICA8VEQgc3R5bGU9
IkJPUkRFUi1CT1RUT006ICNlYmViZWIgMXB4IHNvbGlkOyBQQURESU5HLUJPVFRPTTogNHB4IiAN
CiAgICBjbGFzcz1tb3JlZnVuPg0KICAgICAgPEgyPumaj+S+v+eci+ecizwvSDI+PC9URD4NCiAg
ICA8VEQgc3R5bGU9IkJPUkRFUi1CT1RUT006ICNlYmViZWIgMXB4IHNvbGlkOyBQQURESU5HLUJP
VFRPTTogNHB4IiANCiAgICBjbGFzcz1tb3JlZnVuPg0KICAgICAgPEgyPuacgOaWsOaWh+eroDwv
SDI+PC9URD48L1RSPg0KICA8VFI+DQogICAgPFREIGNsYXNzPW1vcmVmdW4+DQogICAgICA8RElW
IGNsYXNzPW1vcmVmdW4tY29udGVudD48QSANCiAgICAgIGhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5u
ZXQvc3BhY2VzLyVFNSU4RiVBRiVFNyU4OCVCMSVFOCVCNCU5RiVFOCVCNCVBMyVFNyU5QSU4NCVF
NSU4QSVBOCVFNyU4OSVBOSVFNiU4QSVBNCVFNSVCNyVBNSI+5Y+v54ix6LSf6LSj55qE5Yqo54mp
5oqk5belPC9BPjwvRElWPg0KICAgICAgPERJViBjbGFzcz1tb3JlZnVuLWNvbnRlbnQ+PEEgDQog
ICAgICBocmVmPSJodHRwOi8vYmx1ZWRhc2gubmV0L3NwYWNlcy8lRTYlQkMlODIlRTQlQkElQUUl
RTclOUElODQlRTYlQTAlOTElRTclOEElQjYlRTQlQjklQTYlRTYlOUUlQjYiPua8guS6rueahOag
keeKtuS5puaetjwvQT48L0RJVj4NCiAgICAgIDxESVYgY2xhc3M9bW9yZWZ1bi1jb250ZW50PjxB
IA0KICAgICAgaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC9zcGFjZXMvJUU0JUI4JUJBJUU0JUJC
JTgwJUU0JUI5JTg4JUU3JTk0JUI3JUU0JUJBJUJBJUU2JTgzJUIzJUU1JUE4JUI2JUUyJTgwJTlD
JUU1JTlEJThGJUUyJTgwJTlEJUU1JUE1JUIzJUU0JUJBJUJBIj7kuLrku4DkuYjnlLfkurrmg7Pl
qLbigJzlnY/igJ3lpbPkuro8L0E+PC9ESVY+DQogICAgICA8RElWIGNsYXNzPW1vcmVmdW4tY29u
dGVudD48QSANCiAgICAgIGhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvc3BhY2VzLyVFNyU4QyVB
OSVFNyU4QyVBOSVFNCVCOSU5RiVFNyU4RSVBOURTIj7njKnnjKnkuZ/njqlEUzwvQT48L0RJVj4N
CiAgICAgIDxESVYgY2xhc3M9bW9yZWZ1bi1jb250ZW50PjxBIA0KICAgICAgaHJlZj0iaHR0cDov
L2JsdWVkYXNoLm5ldC9zcGFjZXMvJUU1JTlCJUE3JUU4JTg0JUI4JUU1JUIwJThGJUU5JUI4JTlG
JUVGJUJDJThEJUU1JUE0JUE3JUU4JUE1JUJGJUU2JUI0JThCJUU4JUE3JTkyJUU1JTk4JUI0JUU2
JUI1JUI3JUU5JTlCJTgwJTIwJTIwIj7lm6fohLjlsI/puJ/vvI3lpKfopb/mtIvop5LlmLTmtbfp
m4AgDQogICAgICA8L0E+PC9ESVY+DQogICAgICA8RElWIGNsYXNzPW1vcmVmdW4tY29udGVudD48
QSANCiAgICAgIGhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvc3BhY2VzLyVFNyVBNSU5RSVFNSVB
NSU4NyVFNyVBNyVBRiVFNiU5QyVBOCVFNyU5QSU4NCVFOSVBQiU5OCVFNyVBNyU5MSVFNiU4QSU4
MCVFNyU4RSVBOSVFNiVCMyU5NSI+56We5aWH56ev5pyo55qE6auY56eR5oqA546p5rOVPC9BPjwv
RElWPg0KICAgICAgPERJViBjbGFzcz1tb3JlZnVuLWNvbnRlbnQ+PEEgDQogICAgICBocmVmPSJo
dHRwOi8vYmx1ZWRhc2gubmV0L3NwYWNlcy8lRTclODglQjElRTglQkUlQkUlRTglOEQlQjclRTgl
OUIlODclRTUlQjElOEIlRUYlQkMlOEMlRTQlQkUlQkYlRTUlQUUlOUMlRTQlQkQlQTAlRTYlOTUl
QTIlRTQlQkQlOEYlRUYlQkMlOUYiPueIsei+vuiNt+ibh+Wxi++8jOS+v+WunOS9oOaVouS9j++8
nzwvQT48L0RJVj4NCiAgICAgIDxESVYgY2xhc3M9bW9yZWZ1bi1jb250ZW50PjxBIA0KICAgICAg
aHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC9zcGFjZXMvJUU3JUJBJUE2JUU0JUJDJTlBJUU2JTg4
JTkwJUU0JUI4JThEJUU2JTg4JTkwJUVGJUJDJThDJUU3JTk0JUIxJUU0JUJEJUEwJUU4JUFGJUI0
JUU0JUJBJTg2JUU3JUFFJTk3Ij7nuqbkvJrmiJDkuI3miJDvvIznlLHkvaDor7Tkuobnrpc8L0E+
PC9ESVY+DQogICAgICA8RElWIGNsYXNzPW1vcmVmdW4tY29udGVudD48QSANCiAgICAgIGhyZWY9
Imh0dHA6Ly9ibHVlZGFzaC5uZXQvc3BhY2VzLyVFNSU5MyU4NyVFRiVCQyU4QyVFNSVBNSVCMyVF
NCVCQiU4NiVFNSU4MSU5QyVFOCVCRCVBNiVFNSU5QyVCQSVFNCVCOSU5RiVFNiU5QyU4OSVFRiVC
QyU5RiI+5ZOH77yM5aWz5LuG5YGc6L2m5Zy65Lmf5pyJ77yfPC9BPjwvRElWPg0KICAgICAgPERJ
ViBjbGFzcz1tb3JlZnVuLWNvbnRlbnQ+PEEgDQogICAgICBocmVmPSJodHRwOi8vYmx1ZWRhc2gu
bmV0L3NwYWNlcy8lRTglODElQUElRTYlOTglOEUlRTYlQjUlQjclRTglQjElOUElRTglOTIlOTkl
RTQlQjglOEElRTclOUMlQkMlRUYlQkMlOEMlMjAlRTYlQjQlQkIlRTUlOEElQTglRTUlODUlQTgl
RTUlODclQUQlRTIlODAlOUMlRTclQUMlQUMlRTUlODUlQUQlRTYlODQlOUYlRTIlODAlOUQiPuiB
quaYjua1t+ixmuiSmeS4iuecvO+8jCANCiAgICAgIOa0u+WKqOWFqOWHreKAnOesrOWFreaEn+KA
nTwvQT48L0RJVj48L1REPg0KICAgIDxURCBjbGFzcz1tb3JlZnVuPg0KICAgICAgPERJViBjbGFz
cz1tb3JlZnVuLWNvbnRlbnQ+PEEgDQogICAgICBocmVmPSJodHRwOi8vYmx1ZWRhc2gubmV0L3Nw
YWNlcy8lRTclQTAlQjQlRTclQTIlOEUlRTclOUElODQlRTclOEUlQkIlRTclOTIlODMlRTYlOUQl
QUYiPuegtOeijueahOeOu+eSg+adrzwvQT48L0RJVj4NCiAgICAgIDxESVYgY2xhc3M9bW9yZWZ1
bi1jb250ZW50PjxBIA0KICAgICAgaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC9zcGFjZXMvJUU5
JTg3JTkxJUU4JTg5JUIyJUU3JTgzJUE0JUU5JUI4JUFEJUU0JUJEJUEwJUU2JTk1JUEyJUU1JTkw
JTgzJUU1JTkwJTk3JUVGJUJDJTlGIj7ph5HoibLng6TpuK3kvaDmlaLlkIPlkJfvvJ88L0E+PC9E
SVY+DQogICAgICA8RElWIGNsYXNzPW1vcmVmdW4tY29udGVudD48QSANCiAgICAgIGhyZWY9Imh0
dHA6Ly9ibHVlZGFzaC5uZXQvc3BhY2VzLyVFNSVCMSVCMSVFOSVBQyVCQyVFNSVBNCU5QyVFOCVB
RiU5RCVDMiVCNyVFNyVBQiU4QiVFNSVBNCU4RiI+5bGx6ay85aSc6K+dwrfnq4vlpI88L0E+PC9E
SVY+DQogICAgICA8RElWIGNsYXNzPW1vcmVmdW4tY29udGVudD48QSANCiAgICAgIGhyZWY9Imh0
dHA6Ly9ibHVlZGFzaC5uZXQvc3BhY2VzL0Flcm9TaG90JTIwJUU1JTkyJTk2JUU1JTk1JUExJUU1
JTlCJUEwJUU1JTk3JTlDJUU1JUE1JUJEJUU4JTgwJTg1JUU3JTlBJTg0JUU2JTk2JUIwJUU1JUFF
JUEwIj5BZXJvU2hvdCANCiAgICAgIOWSluWVoeWboOWXnOWlveiAheeahOaWsOWuoDwvQT48L0RJ
Vj4NCiAgICAgIDxESVYgY2xhc3M9bW9yZWZ1bi1jb250ZW50PjxBIA0KICAgICAgaHJlZj0iaHR0
cDovL2JsdWVkYXNoLm5ldC9zcGFjZXMvT21uaSVFOCVBRSVBOSVFOCVBNyVBNiVFNSVCMSU4RiVF
OSU5QSU4RiVFNSVBNCU4NCVFNSU4RiVBRiVFNSVCRSU5NyI+T21uaeiuqeinpuWxj+maj+WkhOWP
r+W+lzwvQT48L0RJVj4NCiAgICAgIDxESVYgY2xhc3M9bW9yZWZ1bi1jb250ZW50PjxBIA0KICAg
ICAgaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC9zcGFjZXMvJUU4JUE3JUE2JUU1JUIxJThGJUU2
JThBJTgwJUU2JTlDJUFGJUU1JTg2JThEJUU1JTg4JTlCJUU2JTk2JUIwJTIwJUU4JUFGJTg2JUU1
JTg4JUFCJUU0JUJEJUEwJUU2JTg5JThCJUU2JThDJTg3JUU3JTlBJTg0JUU2JUFGJThGJUU0JUI4
JUFBJUU5JTgzJUE4JUU1JTg4JTg2Ij7op6blsY/mioDmnK/lho3liJvmlrAgDQogICAgICDor4bl
iKvkvaDmiYvmjIfnmoTmr4/kuKrpg6jliIY8L0E+PC9ESVY+DQogICAgICA8RElWIGNsYXNzPW1v
cmVmdW4tY29udGVudD48QSANCiAgICAgIGhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvc3BhY2Vz
LyVFNSU4RiVBRiVFNCVCQiVBNSVFNyVBQiU5OSVFNyU5RCU4MCVFNyU5RCVBMSVFOCVBNyU4OSVF
NyU5QSU4NCVFNSVCQSU4QSI+5Y+v5Lul56uZ552A552h6KeJ55qE5bqKPC9BPjwvRElWPg0KICAg
ICAgPERJViBjbGFzcz1tb3JlZnVuLWNvbnRlbnQ+PEEgDQogICAgICBocmVmPSJodHRwOi8vYmx1
ZWRhc2gubmV0L3NwYWNlcy8lRTYlOTclQTAlRTclQkElQkYlRTUlODglQjklRTglQkQlQTYlRTIl
ODAlOTQlRTIlODAlOTQlRTglODclQUElRTglQTElOEMlRTglQkQlQTYlRTclOUElODQlRTklOUQl
QTklRTYlOTYlQjAiPuaXoOe6v+WIuei9puKAlOKAlOiHquihjOi9pueahOmdqeaWsDwvQT48L0RJ
Vj4NCiAgICAgIDxESVYgY2xhc3M9bW9yZWZ1bi1jb250ZW50PjxBIA0KICAgICAgaHJlZj0iaHR0
cDovL2JsdWVkYXNoLm5ldC9zcGFjZXMvQXNoUG9vcGllJUUyJTgwJTk0JUUyJTgwJTk0JUU4JUJG
JTg3JUU5JTlCJTgxJUU2JTk3JUEwJUU1JUEzJUIwJTIwJUU5JTgxJTlCJUU3JThCJTk3JUU2JTk3
JUEwJUU3JTk3JTk1Ij5Bc2hQb29waWXigJTigJTov4fpm4Hml6Dlo7AgDQogICAgICDpgZvni5fm
l6Dnl5U8L0E+PC9ESVY+DQogICAgICA8RElWIGNsYXNzPW1vcmVmdW4tY29udGVudD48QSANCiAg
ICAgIGhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvc3BhY2VzL0xldnl0YXRvciVFMiU4MCU5NCVF
MiU4MCU5NCVFNiU5NiVCMCVFNSU5RSU4QiVFOCU4QSU4MiVFOCU4MyVCRCVFNiU5QiVCMiVFNSVC
QyVBNyVFNyU5NCVCNSVFNiVBMiVBRiI+TGV2eXRhdG9y4oCU4oCU5paw5Z6L6IqC6IO95puy5byn
55S15qKvPC9BPjwvRElWPjwvVEQ+PC9UUj48L1RCT0RZPjwvVEFCTEU+DQo8RElWIHN0eWxlPSJI
RUlHSFQ6IDIwcHg7IENMRUFSOiBib3RoIj48L0RJVj48L0RJVj4NCjxESVYgaWQ9c2lkZWJhcl9h
bmNob3IgY2xhc3M9c2lkZWJhcj4NCjxESVYgc3R5bGU9IkhFSUdIVDogMTNweCI+PC9ESVY+DQo8
RElWIGNsYXNzPXNpZGViYXJfYXV0aG9yPjxJTUcgDQpzdHlsZT0iV0lEVEg6IDEwMHB4OyBQQURE
SU5HLVJJR0hUOiAxMHB4OyBGTE9BVDogbGVmdDsgQ1VSU09SOiBwb2ludGVyIiANCm9uY2xpY2s9
InJlcGxhY2Vfc2VsZignL3VzZXJzL+mYv+eUtycpOyIgYWx0PVByb2ZpbGUtaW1hZ2UtZGlzcGxh
eSANCnNyYz0iaHR0cDovL2JsdWVkYXNoLm5ldC9zeXN0ZW0vYXZhdGFycy8yL21lZGl1bS9wcm9m
aWxlLWltYWdlLWRpc3BsYXkuanNwYS5wbmc/MTMxNjQ5NzE5NCI+IA0KDQo8RElWIGNsYXNzPXNp
ZGViYXJfYXV0aG9yX2xvZ2luPumYv+eUtzwvRElWPjxCUj5sLndlaW5hbkBnbWFpbC5jb20gLyAN
Cmh0dHA6Ly93ZWliby5jb20vYmx1ZWRhc2ggDQo8RElWIHN0eWxlPSJIRUlHSFQ6IDIwcHg7IENM
RUFSOiBib3RoIj48L0RJVj48L0RJVj4NCjxESVYgY2xhc3M9c2lkZWJhcl9jb250ZW50PuS7peS4
i+aYr+mYv+eUt+WPkeihqOeahOaWh+eroO+8miA8L0RJVj4NCjxESVYgY2xhc3M9c2lkZWJhcl90
aXRsZT48QSANCmhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvc3BhY2VzL1dlYiVFNSVCQyU4MCVF
NSU4RiU5MSVFNiU5NSU5OSVFNyVBOCU4QjE2JTIwJUVGJUJDJThEJTIwU3ByaW5nJTIwV2ViJTIw
RmxvdyI+57yW56iL77yaV2Vi5byA5Y+R5pWZ56iLMTYgDQrvvI0gU3ByPC9BPiA8L0RJVj4NCjxE
SVYgY2xhc3M9c2lkZWJhcl9jb250ZW50PjxBIA0KaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC9z
cGFjZXMvV2ViJUU1JUJDJTgwJUU1JThGJTkxJUU2JTk1JTk5JUU3JUE4JThCMTYlMjAlRUYlQkMl
OEQlMjBTcHJpbmclMjBXZWIlMjBGbG93Ij7lnKjkuIDkupvnvZHnq5nlupTnlKjkuK3vvIzmnInn
moTlip/og73nlLHkuIDns7vliJfnmoTliY3lkI7kuJrliqHpgLvovpHlhbHlkIznu4TmiJDjgILp
gJrluLjmg4XlhrXkuIvvvIzov5nkupvku7vliqHooqvliIbop6PkuLrmlbDkuKrpobXpnaLnmoTl
sI/lip/og73vvIzlroPku6zlhbHlkIznu4TmiJDkuIDkuKrlrozmlbTnmoTpgLvovpHjgILmiJHk
u6zmiorov5nnp43kuJzopb/lj6vlgZrmtYHnqIvjgIJTcHJpbmcgDQpXZWIgRmxvd+WwseaYr1Nw
cmluZ+S4uuaIkeS7rOaPkOS+m+eahOWunueOsOa1geeoi+eahOW3peWFt++8jOWug+ebuOW9k+S6
juW7uuaehOS6jlNwcmluZyBNVkPkuIrnmoTkuIDkuKrmj5Lku7bvvIzkuLpTcHJpbmcgTVZD5re7
5Yqg5LqG5a6a5LmJRmxvd+eahOiDveWKm+OAgiANCjwvQT4NCjxESVYgc3R5bGU9IkhFSUdIVDog
MTBweDsgQ0xFQVI6IGJvdGgiPjwvRElWPjwvRElWPg0KPERJViBjbGFzcz1zaWRlYmFyX3RpdGxl
PjxBIA0KaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC9zcGFjZXMvJUU2JUJGJTgwJUU1JTg1JTg5
JUU1JThGJThEJUU1JUIwJTg0JUU5JTkyJTlGIj7np5HmioDvvJrmv4DlhYnlj43lsITpkp88L0E+
IA0KPC9ESVY+DQo8RElWIGNsYXNzPXNpZGViYXJfY29udGVudD48QSANCmhyZWY9Imh0dHA6Ly9i
bHVlZGFzaC5uZXQvc3BhY2VzLyVFNiVCRiU4MCVFNSU4NSU4OSVFNSU4RiU4RCVFNSVCMCU4NCVF
OSU5MiU5RiI+5oiR5Lus6YO955So6L+H55S15a2Q6KGo77yM5Lmf55+l6YGTTEVE55qE55S15a2Q
6KGo5Y6f55CG77ya5Yip55SoN+auteaVsOeggeeuoeeahOS6rueBreadpeaLvOWHujAtOei/meS6
m+aVsOWtl+OAguiAjOi/measoeS7i+e7jeeahOi/measvueUteWtkOmSn++8jOWunuWcqOaYr+Wk
qumFt+S6hu+8jOWug+aYr+eUqOa/gOWFieWPjeWwhOadpeWunueOsOaVsOWtl+eahOaYvuekujwv
QT4gDQoNCjxESVYgc3R5bGU9IkhFSUdIVDogMTBweDsgQ0xFQVI6IGJvdGgiPjwvRElWPjwvRElW
Pg0KPERJViBjbGFzcz1zaWRlYmFyX3RpdGxlPjxBIA0KaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5l
dC9zcGFjZXMvMjAxMCVFNSU4QyU5NyVFNCVCQSVBQyVFNSU5QiVCRCVFOSU5OSU4NSVFOCVCRCVB
NiVFNSVCMSU5NSVFNCVCOSU4QiVFNyVCRSU4RSVFNSVBNSVCMyVFNyVBRiU4NyI+6K+R5paH77ya
MjAxMOWMl+S6rOWbvemZhei9puWxleS5i+e+juWls+evhzwvQT4gDQo8L0RJVj4NCjxESVYgY2xh
c3M9c2lkZWJhcl9jb250ZW50PjxBIA0KaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC9zcGFjZXMv
MjAxMCVFNSU4QyU5NyVFNCVCQSVBQyVFNSU5QiVCRCVFOSU5OSU4NSVFOCVCRCVBNiVFNSVCMSU5
NSVFNCVCOSU4QiVFNyVCRSU4RSVFNSVBNSVCMyVFNyVBRiU4NyI+5Lq65aSq5aSa5LqG77yM6Zmk
5LqG5Lq66L+Y5piv5Lq677yM6L+e55u45py66YO95b+r6KKr5oyk5omB5LqG77yM5Li65LqG5pGE
5b2x5LqL5Lia77yM5oiR5a655piT5ZCX5oiRIA0KOi0pIA0K5LiN6K+05bqf6K+d77yM5LiK54mH
77yM5pud5YWJ5LiN5YeG55qE77yM5pyJ54K55Y+R6Jma55qE77yM5bCx5LiN6KaB5aSq6K6h6L6D
5LqG77yM5Zyo5p2h5Lu25YWB6K6455qE5oOF5Ya15LiL77yM5oiR5Lya5bC96YeP5rOo5oSP5p6E
5Zu+5ZKM55So5YWJ44CC5Y+m5aSW5LiN6KaB6Zeu5oiR5Li65LuA5LmI5pyJ5Lqb5Zu+54mH55qE
5bC65a+45b6I5oCq77yM5Li65LqG5YiH5o6J5b6I5aSa6ISR6KKL77yBTU3pg73lvojmlazkuJrv
vIzlvojmirHmrYnkuI3og73kuIDkuIDliJfkuL7lpbnku6zpg73lsZ7kuo7pgqPkuKrlk4HniYzn
moRNVO+8jOWkp+WutuimgeaYr+WWnOasouWwseWOu+i9puWxleWumOe9keS4iuaUr+aMgeWlueS7
rOWQp++8gTwvQT4gDQoNCjxESVYgc3R5bGU9IkhFSUdIVDogMTBweDsgQ0xFQVI6IGJvdGgiPjwv
RElWPjwvRElWPg0KPERJViBzdHlsZT0iVEVYVC1BTElHTjogcmlnaHQiIGNsYXNzPXNpZGViYXJf
Y29udGVudD48QSANCmhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvdXNlcnMvJUU5JTk4JUJGJUU3
JTk0JUI3Ij7nnIvnnIvmm7TlpJrpmL/nlLflj5HooajnmoTmlofnq6AmZ3Q7Jmd0OzwvQT4gDQo8
L0RJVj4NCjxESVYgY2xhc3M9c2lkZWJhcl90aXRsZT5BRDwvRElWPg0KPERJViBjbGFzcz1zaWRl
YmFyX2NvbnRlbnQ+DQo8U0NSSVBUIHR5cGU9dGV4dC9qYXZhc2NyaXB0PjwhLS0KICBnb29nbGVf
YWRfY2xpZW50ID0gImNhLXB1Yi03OTEyNDkxNTAxMjY3MDY0IjsKICAvKiDlj7PkvqfmoI8gKi8K
ICBnb29nbGVfYWRfc2xvdCA9ICIxMTcwOTk5Mjc1IjsKICBnb29nbGVfYWRfd2lkdGggPSAyMDA7
CiAgZ29vZ2xlX2FkX2hlaWdodCA9IDIwMDsKICAvLy0tPgogIDwvU0NSSVBUPg0KDQo8U0NSSVBU
IHR5cGU9dGV4dC9qYXZhc2NyaXB0IA0Kc3JjPSJodHRwOi8vcGFnZWFkMi5nb29nbGVzeW5kaWNh
dGlvbi5jb20vcGFnZWFkL3Nob3dfYWRzLmpzIj4KICA8L1NDUklQVD4NCjwvRElWPg0KPERJViBz
dHlsZT0iV0lEVEg6IDEwMCU7IERJU1BMQVk6IGJsb2NrOyBIRUlHSFQ6IDEwcHg7IENMRUFSOiBi
b3RoIj48L0RJVj4NCjxESVYgY2xhc3M9c2lkZWJhcl9jb250ZW50Pueci+eci+WFtuWug+S6uuea
hOaWh+eroO+8miA8L0RJVj4NCjxESVYgY2xhc3M9c2lkZWJhcl90aXRsZT48QSANCmhyZWY9Imh0
dHA6Ly9ibHVlZGFzaC5uZXQvc3BhY2VzLyVFOCVBRiVCQSVFNSVBNSU5NiVFNSVCRSU5NyVFNCVC
OCVCQiVFNCVCOCVCQSVFOSU5NSVCRiVFNSVBRiVCRiVFNSVCOSVCMiVFNiU5RCVBRiI+5LmQ5rS7
77ya6K+65aWW5b6X5Li75Li66ZW/5a+/5bmy5p2vPC9BPiANCjwvRElWPg0KPERJViBjbGFzcz1z
aWRlYmFyX2NvbnRlbnQ+PEEgDQpocmVmPSJodHRwOi8vYmx1ZWRhc2gubmV0L3NwYWNlcy8lRTgl
QUYlQkElRTUlQTUlOTYlRTUlQkUlOTclRTQlQjglQkIlRTQlQjglQkElRTklOTUlQkYlRTUlQUYl
QkYlRTUlQjklQjIlRTYlOUQlQUYiPuS4veWhlOaYr+WOhuWPsuS4iuacgOmVv+Wvv+eahOivuui0
neWwlOWlluiOt+W+l+iAhe+8jOWHoOWkqeWJje+8jOWlueWImuWImuW6huelneS6huiHquW3sTEw
MuWygeeahOeUn+aXpeOAguWlueaYr+S4gOWQjeadsOWHuueahOenkeWtpuWutu+8jOS4u+aUu+el
nue7j+ezu+e7n+mihuWfn++8jOiAjOWlueWNtOaKiuiHquW3seeci+WBmuS4gOS4quiJuuacr+Wu
tuOAguadpeS6huino+S4gOS4i+S4veWhlOiDjOWQjueahOaVheS6i+WQp348L0E+IA0KDQo8RElW
IHN0eWxlPSJIRUlHSFQ6IDEwcHg7IENMRUFSOiBib3RoIj48L0RJVj48L0RJVj4NCjxESVYgY2xh
c3M9c2lkZWJhcl90aXRsZT48QSANCmhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvc3BhY2VzLyVF
NSU4QSVCMiVFNyU4OCU4NiVFNCVCRiU4MyVFOSU5NCU4MCVFRiVCQyU4QyVFNiU5RSVBQSVFNiU5
NCVBRiVFNCVCOCVCQSVFNyVBNCVCQyI+6Laj6Ze777ya5Yqy54iG5L+D6ZSA77yM5p6q5pSv5Li6
56S8PC9BPiANCjwvRElWPg0KPERJViBjbGFzcz1zaWRlYmFyX2NvbnRlbnQ+PEEgDQpocmVmPSJo
dHRwOi8vYmx1ZWRhc2gubmV0L3NwYWNlcy8lRTUlOEElQjIlRTclODglODYlRTQlQkYlODMlRTkl
OTQlODAlRUYlQkMlOEMlRTYlOUUlQUElRTYlOTQlQUYlRTQlQjglQkElRTclQTQlQkMiPue+juWb
veiSmeWkp+aLv+W3nuaXoOe6v+eUteW5v+aSreeUteWPsO+8jOS4uuS6huWQuOW8leabtOWkmuea
hOS6uuS9v+eUqOWNq+aYn+Wkqee6v+e9kee7nO+8jOern+eEtuaDs+WHuuS4gOS4quWNgeWIhuWI
uua/gOeahOS/g+mUgOaJi+auteOAgumaj+i1oOeahOekvOWTgeWYm+WPr+S7peiHquW3semAieaL
qe+8jOS9huaYr+mDveaYr+S4gOagt+eahOWKsueIhu+8jOS9oOaYr+aDs+adpeaKiumaj+i6q+aQ
uuW4pueahOaJi+aequ+8jOi/mOaYr+adpeS4qumVv+adhueMjuaequ+8nyANCjwvQT4NCjxESVYg
c3R5bGU9IkhFSUdIVDogMTBweDsgQ0xFQVI6IGJvdGgiPjwvRElWPjwvRElWPg0KPERJViBjbGFz
cz1zaWRlYmFyX3RpdGxlPjxBIA0KaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC9zcGFjZXMvJUU4
JUIwJTgxJUU1JTgxJUI3JUU4JUI1JUIwJUU0JUJBJTg2JUU2JTg4JTkxJUU0JUJCJUFDJUU3JTlB
JTg0JUU3JTlEJUExJUU3JTlDJUEwJUVGJUJDJTlGIj7lv4PnkIbvvJrosIHlgbfotbDkuobmiJHk
u6znmoTnnaHnnKDvvJ88L0E+IA0KPC9ESVY+DQo8RElWIGNsYXNzPXNpZGViYXJfY29udGVudD48
QSANCmhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvc3BhY2VzLyVFOCVCMCU4MSVFNSU4MSVCNyVF
OCVCNSVCMCVFNCVCQSU4NiVFNiU4OCU5MSVFNCVCQiVBQyVFNyU5QSU4NCVFNyU5RCVBMSVFNyU5
QyVBMCVFRiVCQyU5RiI+5Lq65Lus5bCx54ix5Zyo5Y2n5a6k6YeM5L2/55So5LuW5Lus55qE55S1
5a2Q6K6+5aSH77yM6LCB6IO96LSj5oCq5LuW5Lus5ZGi77yf6L+Z5Lqb6K6p5Lq65qyy572i5LiN
6IO955qE5bCP5Lic6KW/4oCU4oCU5omL5py65ZWm77yMbXAz5ZWm77yMUFNQ5ZWm4oCU4oCU5bCG
5paw6Ze777yM55S15a2Q5Lmm77yM5bCP5ri45oiP562J57uf57uf5pS25YWl5ZuK5Lit44CC5piv
5LiN5piv5pma5LiK552h6KeJ5YmN5pyA5ZCO5LiA55y855yL5Yiw55qE5piv5a6D5Lus77yM55m9
5aSp552h6YaS552B5byA56ys5LiA55y855yL5Yiw55qE6L+Y5piv5a6D5Lus77yfPC9BPiANCg0K
PERJViBzdHlsZT0iSEVJR0hUOiAxMHB4OyBDTEVBUjogYm90aCI+PC9ESVY+PC9ESVY+DQo8RElW
IGNsYXNzPXNpZGViYXJfdGl0bGU+PEEgDQpocmVmPSJodHRwOi8vYmx1ZWRhc2gubmV0L3NwYWNl
cy8lRTUlOTMlQUQlRTYlQjMlQTMlRTclOUElODQlRTclOEUlOUIlRTUlODglQTklRTQlQkElOUEi
Pua0i+iRse+8muWTreazo+eahOeOm+WIqeS6mjwvQT4gDQo8L0RJVj4NCjxESVYgY2xhc3M9c2lk
ZWJhcl9jb250ZW50PjxBIA0KaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC9zcGFjZXMvJUU1JTkz
JUFEJUU2JUIzJUEzJUU3JTlBJTg0JUU3JThFJTlCJUU1JTg4JUE5JUU0JUJBJTlBIj7lnKPlg4/l
gbblsJTmtYHms6rmiJbogIXms6PooYDnmoTkuovmg4XlgJLmmK/lkKzor7Tov4fvvIwgDQrkvYZT
dC4gQWxwaG9uc3Vz5pWZ5aCC55qE5Zyj5q+N546b5Yip5Lqa5YOP5omn552A5Zyw5ZOt5rOj5LqG
5LiA5Liq5aSa5pif5pyf77yM5LiA5pa56Z2i5ZC45byV5LqG5peg5pWw55qE5Lq66am76Laz6KeC
55yL77yM5LiA5pa56Z2i6K6p5pWZ5aCC55qE54mn5biI5Lus5oSP5Lmx5b+D54Om44CCPC9BPiAN
CjxESVYgc3R5bGU9IkhFSUdIVDogMTBweDsgQ0xFQVI6IGJvdGgiPjwvRElWPjwvRElWPg0KPERJ
ViBjbGFzcz1zaWRlYmFyX3RpdGxlPjxBIA0KaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC9zcGFj
ZXMvJUU2JUIwJUI0JUU2JTlBJTk2JUU2JThBJTk3JUU1JTg2JUJCLSVFNiU5OCU4RSVFNSVCMCVC
QyVFOCU4QiU4RiVFOCVCRSVCRSVFNSVCNyU5RSVFNyU5QSU4NCVFNiU5NiVCMCVFNyU4MiVCOSVF
NSVBRCU5MCI+6Laj6Ze777ya5rC05pqW5oqX5Ya7LeaYjuWwvOiLj+i+vuW3nueahOaWsOeCueWt
kDwvQT4gDQo8L0RJVj4NCjxESVYgY2xhc3M9c2lkZWJhcl9jb250ZW50PjxBIA0KaHJlZj0iaHR0
cDovL2JsdWVkYXNoLm5ldC9zcGFjZXMvJUU2JUIwJUI0JUU2JTlBJTk2JUU2JThBJTk3JUU1JTg2
JUJCLSVFNiU5OCU4RSVFNSVCMCVCQyVFOCU4QiU4RiVFOCVCRSVCRSVFNSVCNyU5RSVFNyU5QSU4
NCVFNiU5NiVCMCVFNyU4MiVCOSVFNSVBRCU5MCI+5bel56iL5biIUm9nZXIgDQpIYW5zb27oh6rl
iLbkuobkuIDlpZflnLDng63kvpvmmpbns7vnu5/vvIzmiorng63ph4/ku47msLTph4zmj5Dlj5bl
h7rmnaXnlKjkuo7oh6rlrrbkvpvmmpbluqbov4flr5LlhqzvvIzooqvmj5Dlj5bng63ph4/nmoTm
sLTlj5jmiJDlhrDlkI7lj4jlj6/ku6Xpm5XliLvmiJDoibrmnK/lk4HjgILku5blrrbnjrDlnKjn
moTlpKflhrDlsbHlsLHmnIkyMOexs+mrmH5+5b2T5piO5bC86IuP6L6+5bee55qE5bGF5rCR5Li6
5a+S5Yas5Y+r6Ium5LiN6L+t55qE5pe25YCZ77yMUm9nZXLljbTpgI3pgaXoh6rlvpfjgII8L0E+
IA0KDQo8RElWIHN0eWxlPSJIRUlHSFQ6IDEwcHg7IENMRUFSOiBib3RoIj48L0RJVj48L0RJVj4N
CjxESVYgY2xhc3M9c2lkZWJhcl90aXRsZT48QSANCmhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQv
c3BhY2VzLyVFNiU5NyVCNiVFOSU5NyVCNCVFNyU5QSU4NCVFNyU4MSVCMCVFNyU4MyVBQyI+55+t
56+H77ya5pe26Ze055qE54Gw54OsPC9BPiANCjwvRElWPg0KPERJViBjbGFzcz1zaWRlYmFyX2Nv
bnRlbnQ+PEEgDQpocmVmPSJodHRwOi8vYmx1ZWRhc2gubmV0L3NwYWNlcy8lRTYlOTclQjYlRTkl
OTclQjQlRTclOUElODQlRTclODElQjAlRTclODMlQUMiPumCo+aYr+S4gOenjeayiea3gOWcqOaX
tumXtOmHjOiusOW/huWSjOaDheaAgOOAguaXtumXtOeahOeBsOeDrOmHjO+8jOe7iOeptuS8mumH
iuaUvuWHuumbtuaYn+WFieiKku+8jOmSu+efs+iIrOiAgOecvOOAgjwvQT4gDQoNCjxESVYgc3R5
bGU9IkhFSUdIVDogMTBweDsgQ0xFQVI6IGJvdGgiPjwvRElWPjwvRElWPg0KPERJViBjbGFzcz1z
aWRlYmFyX3RpdGxlPjxBIA0KaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC9zcGFjZXMvJUU1JUE1
JUIzJUU2JTk2JTk3JUU3JTg5JTlCJUU1JUEzJUFCJUU3JTlBJTg0JUU3JTlDJTlGJUU1JUFFJTlF
JUU3JTk0JTlGJUU2JUI0JUJCIj7ok53ngrnvvJrlpbPmlpfniZvlo6vnmoTnnJ/lrp7nlJ/mtLs8
L0E+IA0KPC9ESVY+DQo8RElWIGNsYXNzPXNpZGViYXJfY29udGVudD48QSANCmhyZWY9Imh0dHA6
Ly9ibHVlZGFzaC5uZXQvc3BhY2VzLyVFNSVBNSVCMyVFNiU5NiU5NyVFNyU4OSU5QiVFNSVBMyVB
QiVFNyU5QSU4NCVFNyU5QyU5RiVFNSVBRSU5RSVFNyU5NCU5RiVFNiVCNCVCQiI+5ryC5Lqu55qE
5aWz5Lq677yM6Lqr56m/5Y2O5Li955qE5paX54mb5pyN6aWw77yM57Sn5o+h5Yip5YmR5ZKM6Iqx
5qCH77yM6Iux5ae/6aOS54i95Zyw56uZ5Zyo6YKj77yM5a+56Z2i5piv5LiA5aS05Yeg55m+5YWs
5pak6YeN55qE5YWs54mb77yM6IO95Za35Ye654Gr55qE55y8552b5ZKM6ZSL5Yip55qE54qE6KeS
4oCm4oCm55yL5Yiw6L+Z5bmF5Zy65pmv77yM5L2g5LiA5a6a6KeJ5b6X6ZyH5pK844CB5r+A5Yqo
5LiN5bey44CC5Y+v5piv77yM5aWz5paX54mb5aOr55qE55Sf5rS76L+c6L+c5rKh5pyJ55yL6LW3
5p2l6L+Z5LmI6aOO5YWJ77yM5aW55Lus55qE6L6b6Ium5ZKM5Y+X5Lyk44CB5Zyo6KGM5Lia5Lit
5Y+X5Yiw55qE5o6S5oyk5ZKM6K+v6Kej77yM5Lul5Y+K5Zyo55Sf5rS75Lit6YGH5Yiw55qE5ZCE
56eN5bC05bCs4oCm4oCm5L2G5piv77yM5a+554Ot54ix5paX54mb5LqL5Lia55qE5aW55Lus5p2l
6K+077yM5ZSv5pyJ5YC85b6X5LqM5a2X5omN5piv5aW55Lus55yf5a6e55qE5b+D5aOw44CCIA0K
PC9BPg0KPERJViBzdHlsZT0iSEVJR0hUOiAxMHB4OyBDTEVBUjogYm90aCI+PC9ESVY+PC9ESVY+
PC9ESVY+PC9ESVY+DQo8RElWIHN0eWxlPSJIRUlHSFQ6IDMwcHg7IENMRUFSOiBib3RoIj48L0RJ
Vj4NCjxUQUJMRSBpZD1iYWNrX3RvX3RvcCBjbGFzcz1iYWNrX3RvX3RvcD4NCiAgPFRCT0RZPg0K
ICA8VFI+DQogICAgPFREIHN0eWxlPSJURVhULUFMSUdOOiBjZW50ZXIiPjxBIA0KICAgICAgb25j
bGljaz0id2luZG93LnNjcm9sbFRvKDAsMCk7IHJldHVybiBmYWxzZTsiIA0KICAgICAgaHJlZj0i
aHR0cDovL2JsdWVkYXNoLm5ldC9zcGFjZXMvSkJvc3MlMjBBUzclRTQlQjglQUQlRTclOUElODQl
RTYlOTYlQjAlRTYlQTYlODIlRTUlQkYlQjUlRUYlQkMlOEQlRTUlOUYlOUYjIj5e6L+U5Zue6aG1
6aaWPC9BPjwvVEQ+PC9UUj48L1RCT0RZPjwvVEFCTEU+DQo8RElWIGlkPWJhY2tfdG9fdG9wMiBj
bGFzcz1iYWNrX3RvX3RvcD48QSANCm9uY2xpY2s9IndpbmRvdy5zY3JvbGxUbygwLDApOyByZXR1
cm4gZmFsc2U7IiANCmhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvc3BhY2VzL0pCb3NzJTIwQVM3
JUU0JUI4JUFEJUU3JTlBJTg0JUU2JTk2JUIwJUU2JUE2JTgyJUU1JUJGJUI1JUVGJUJDJThEJUU1
JTlGJTlGIyI+Xui/lOWbnumhtemmljwvQT48L0RJVj4NCjxESVYgaWQ9d3JhcHBlci1mb290ZXI+
DQo8RElWIGlkPWNvbnRhaW5lci1mb290ZXI+PFNQQU4gY2xhc3M9Zm9vdGVyPjxBIA0KaHJlZj0i
aHR0cDovL2JsdWVkYXNoLm5ldC9pbmZvcy9jb3B5cmlnaHQiPueJiOadg+WjsOaYjjwvQT4gfCA8
QSANCmhyZWY9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvaW5mb3Mvam9pbl91cyI+5Yqg5YWl5oiR5Lus
PC9BPiB8IDxBIA0KaHJlZj0iaHR0cDovL2JsdWVkYXNoLm5ldC9pbmZvcy9hYm91dF91cyI+5YWz
5LqO5oiR5LusPC9BPiA8QlI+PEEgDQpocmVmPSJodHRwOi8vd3d3Lm1paWJlaWFuLmdvdi5jbi8i
IHRhcmdldD1fYmxhbms+5LqsSUNQ5aSHMTAwMjE3Mjblj7c8L0E+IENvcHlyaWdodCANCjIwMDkt
MjAxMTxCUj48L1NQQU4+PC9ESVY+PC9ESVY+PC9ESVY+DQo8U0NSSVBUIHR5cGU9dGV4dC9qYXZh
c2NyaXB0IA0Kc3JjPSJodHRwOi8vYmx1ZWRhc2gubmV0L2phdmFzY3JpcHRzL2pxdWVyeS5qcz8x
MzIzMTkwMTE0Ij48L1NDUklQVD4NCg0KPFNDUklQVCB0eXBlPXRleHQvamF2YXNjcmlwdD4KICAg
ICAgICAkaiA9IGpRdWVyeS5ub0NvbmZsaWN0KCk7CiAgICA8L1NDUklQVD4NCg0KPFNDUklQVCB0
eXBlPXRleHQvamF2YXNjcmlwdD4KICAgIGJhY2tfdG9fdG9wX2ludGlhbF90b3AgPSAkaigiI2Jh
Y2tfdG9fdG9wIikucG9zaXRpb24oKS50b3A7CiAgICBiYWNrX3RvX3RvcF9wb3NpdGlvbl9jaGFu
Z2VkID0gZmFsc2U7CiAgICAkaigiI2JhY2tfdG9fdG9wIikuaGlkZSgpOwogICAgJGooIiNiYWNr
X3RvX3RvcDIiKS5oaWRlKCk7CiAgICAkaihmdW5jdGlvbigpIHsKICAgICAgICBwb3NpdGlvbkZv
b3RlcigpOwogICAgICAgIGZ1bmN0aW9uIHBvc2l0aW9uRm9vdGVyKCkgewogICAgICAgICAgICBp
ZiAoJGood2luZG93KS5zY3JvbGxUb3AoKSA+ICRqKHdpbmRvdykuaGVpZ2h0KCkgLyAyKSB7CiAg
ICAgICAgICAgICAgICBpZiAoYmFja190b190b3BfcG9zaXRpb25fY2hhbmdlZCA9PSBmYWxzZSB8
fCAkaigiI2JhY2tfdG9fdG9wIikucG9zaXRpb24oKS50b3AgPCBiYWNrX3RvX3RvcF9pbnRpYWxf
dG9wKSB7CiAgICAgICAgICAgICAgICAgICAgJGooIiNiYWNrX3RvX3RvcCIpLmNzcyh7cG9zaXRp
b246ICJhYnNvbHV0ZSIsdG9wOigkaih3aW5kb3cpLnNjcm9sbFRvcCgpICsgJGood2luZG93KS5o
ZWlnaHQoKSAtICRqKCIjYmFja190b190b3AiKS5oZWlnaHQoKSAtICRqKCcjd3JhcHBlci1mb290
ZXInKS5oZWlnaHQoKSAqIDIpICsgInB4IixyaWdodDokaih3aW5kb3cpLndpZHRoKCkgLSAkaigi
I21haW5fYW5jaG9yIikucG9zaXRpb24oKS5sZWZ0ICsgMTAgKyAicHgifSkuc2hvdygpOwogICAg
ICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAg
ICAgICAgICAgICAkaigiI2JhY2tfdG9fdG9wIikuaGlkZSgpOwogICAgICAgICAgICAgICAgJGoo
IiNiYWNrX3RvX3RvcDIiKS5oaWRlKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAg
ICRqKHdpbmRvdykKICAgICAgICAgICAgICAgIC5zY3JvbGwocG9zaXRpb25Gb290ZXIpCiAgICAg
ICAgICAgICAgICAucmVzaXplKHBvc2l0aW9uRm9vdGVyKQogICAgfSk7CjwvU0NSSVBUPg0KDQo8
U0NSSVBUIHR5cGU9dGV4dC9qYXZhc2NyaXB0IA0Kc3JjPSJodHRwOi8vYmx1ZWRhc2gubmV0L2ph
dmFzY3JpcHRzL3Byb3RvdHlwZS5qcz8xMzIzMTkwMTE0Ij48L1NDUklQVD4NCg0KPFNDUklQVCB0
eXBlPXRleHQvamF2YXNjcmlwdCANCnNyYz0iaHR0cDovL2JsdWVkYXNoLm5ldC9qYXZhc2NyaXB0
cy9lZmZlY3RzLmpzPzEzMjMxOTAxMTQiPjwvU0NSSVBUPg0KDQo8U0NSSVBUIHR5cGU9dGV4dC9q
YXZhc2NyaXB0IA0Kc3JjPSJodHRwOi8vYmx1ZWRhc2gubmV0L2phdmFzY3JpcHRzL2RyYWdkcm9w
LmpzPzEzMjMxOTAxMTQiPjwvU0NSSVBUPg0KDQo8U0NSSVBUIHR5cGU9dGV4dC9qYXZhc2NyaXB0
IA0Kc3JjPSJodHRwOi8vYmx1ZWRhc2gubmV0L2phdmFzY3JpcHRzL2NvbnRyb2xzLmpzPzEzMjMx
OTAxMTQiPjwvU0NSSVBUPg0KDQo8U0NSSVBUIHR5cGU9dGV4dC9qYXZhc2NyaXB0IA0Kc3JjPSJo
dHRwOi8vYmx1ZWRhc2gubmV0L2phdmFzY3JpcHRzL2FwcGxpY2F0aW9uLmpzPzEzMjMxOTAxMTQi
PjwvU0NSSVBUPg0KDQo8U0NSSVBUIHR5cGU9dGV4dC9qYXZhc2NyaXB0IA0Kc3JjPSJodHRwOi8v
Ymx1ZWRhc2gubmV0L2phdmFzY3JpcHRzL3N5bnRheEhpZ2hsaWdodGVyL3NjcmlwdHMvc2hDb3Jl
LmpzPzEzMjMxOTAxMTQiPjwvU0NSSVBUPg0KDQo8U0NSSVBUIHR5cGU9dGV4dC9qYXZhc2NyaXB0
IA0Kc3JjPSJodHRwOi8vYmx1ZWRhc2gubmV0L2phdmFzY3JpcHRzL3N5bnRheEhpZ2hsaWdodGVy
L3NjcmlwdHMvc2hCcnVzaEphdmEuanM/MTMyMzE5MDExNCI+PC9TQ1JJUFQ+DQoNCjxTQ1JJUFQg
dHlwZT10ZXh0L2phdmFzY3JpcHQgDQpzcmM9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvamF2YXNjcmlw
dHMvc3ludGF4SGlnaGxpZ2h0ZXIvc2NyaXB0cy9zaEJydXNoWG1sLmpzPzEzMjMxOTAxMTQiPjwv
U0NSSVBUPg0KDQo8U0NSSVBUIHR5cGU9dGV4dC9qYXZhc2NyaXB0IA0Kc3JjPSJodHRwOi8vYmx1
ZWRhc2gubmV0L2phdmFzY3JpcHRzL3N5bnRheEhpZ2hsaWdodGVyL3NjcmlwdHMvc2hCcnVzaEJh
c2guanM/MTMyMzE5MDExNCI+PC9TQ1JJUFQ+DQoNCjxTQ1JJUFQgdHlwZT10ZXh0L2phdmFzY3Jp
cHQgDQpzcmM9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvamF2YXNjcmlwdHMvc3ludGF4SGlnaGxpZ2h0
ZXIvc2NyaXB0cy9zaEJydXNoUnVieS5qcz8xMzIzMTkwMTE0Ij48L1NDUklQVD4NCg0KPFNDUklQ
VCB0eXBlPXRleHQvamF2YXNjcmlwdCANCnNyYz0iaHR0cDovL2JsdWVkYXNoLm5ldC9qYXZhc2Ny
aXB0cy9zeW50YXhIaWdobGlnaHRlci9zY3JpcHRzL3NoQnJ1c2hQZXJsLmpzPzEzMjMxOTAxMTQi
PjwvU0NSSVBUPg0KDQo8U0NSSVBUIHR5cGU9dGV4dC9qYXZhc2NyaXB0IA0Kc3JjPSJodHRwOi8v
Ymx1ZWRhc2gubmV0L2phdmFzY3JpcHRzL3N5bnRheEhpZ2hsaWdodGVyL3NjcmlwdHMvc2hCcnVz
aEpTY3JpcHQuanM/MTMyMzE5MDExNCI+PC9TQ1JJUFQ+DQoNCjxTQ1JJUFQgdHlwZT10ZXh0L2ph
dmFzY3JpcHQgDQpzcmM9Imh0dHA6Ly9ibHVlZGFzaC5uZXQvamF2YXNjcmlwdHMvc3ludGF4SGln
aGxpZ2h0ZXIvc2NyaXB0cy9zaEJydXNoU3FsLmpzPzEzMjMxOTAxMTQiPjwvU0NSSVBUPg0KDQo8
U0NSSVBUIHR5cGU9dGV4dC9qYXZhc2NyaXB0IA0Kc3JjPSJodHRwOi8vYmx1ZWRhc2gubmV0L2ph
dmFzY3JpcHRzL3N5bnRheEhpZ2hsaWdodGVyL3NjcmlwdHMvc2hCcnVzaENwcC5qcz8xMzIzMTkw
MTE0Ij48L1NDUklQVD4NCg0KPFNDUklQVCB0eXBlPXRleHQvamF2YXNjcmlwdD4KICAgICAgICBT
eW50YXhIaWdobGlnaHRlci5jb25maWcuY2xpcGJvYXJkU3dmID0gJy9qYXZhc2NyaXB0cy9zeW50
YXhIaWdobGlnaHRlci9zY3JpcHRzL2NsaXBib2FyZC5zd2YnOwogICAgICAgIFN5bnRheEhpZ2hs
aWdodGVyLmFsbCgpOwogICAgPC9TQ1JJUFQ+DQoNCjxTQ1JJUFQgdHlwZT10ZXh0L2phdmFzY3Jp
cHQ+CiAgICB2YXIgZ2FKc0hvc3QgPSAoKCJodHRwczoiID09IGRvY3VtZW50LmxvY2F0aW9uLnBy
b3RvY29sKSA/ICJodHRwczovL3NzbC4iIDogImh0dHA6Ly93d3cuIik7CiAgICBkb2N1bWVudC53
cml0ZSh1bmVzY2FwZSgiJTNDc2NyaXB0IHNyYz0nIiArIGdhSnNIb3N0ICsgImdvb2dsZS1hbmFs
eXRpY3MuY29tL2dhLmpzJyB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnJTNFJTNDL3NjcmlwdCUzRSIp
KTsKPC9TQ1JJUFQ+DQoNCjxTQ1JJUFQgdHlwZT10ZXh0L2phdmFzY3JpcHQ+CiAgICB0cnkgewog
ICAgICAgIHZhciBwYWdlVHJhY2tlciA9IF9nYXQuX2dldFRyYWNrZXIoIlVBLTExMDI2ODE5LTEi
KTsKICAgICAgICBwYWdlVHJhY2tlci5fdHJhY2tQYWdldmlldygpOwogICAgfSBjYXRjaChlcnIp
IHsKICAgIH0KPC9TQ1JJUFQ+DQo8L0JPRFk+PC9IVE1MPg0K

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://bluedash.net/images/themes/light-blue.jpg?1323190114

/9j/4QAYRXhpZgAASUkqAAgAAAAAAAAAAAAAAP/sABFEdWNreQABAAQAAABkAAD/4QO5aHR0cDov
L25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENl
aGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4
OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjAtYzA2MCA2MS4xMzQ3NzcsIDIwMTAvMDIvMTItMTc6
MzI6MDAgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5
OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHht
bG5zOnhtcFJpZ2h0cz0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3JpZ2h0cy8iIHhtbG5z
OnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0
cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1sbnM6eG1wPSJo
dHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bXBSaWdodHM6TWFya2VkPSJGYWxzZSIgeG1w
TU06T3JpZ2luYWxEb2N1bWVudElEPSJ1dWlkOjcwNzQxMjE1RkYyNURGMTFCNUYwOUE3MUM2QjA0
NTdDIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjIyRDJCMDI2NkRFRTExREZBRjIzQkYyRjg2
M0MwOThBIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjIyRDJCMDI1NkRFRTExREZBRjIzQkYy
Rjg2M0MwOThBIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZG93cyI+
IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjFFNkYzQ0NGNkRF
RDExREY5MjgzREJCMzZBQ0Y4OUE4IiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOjFFNkYzQ0Qw
NkRFRDExREY5MjgzREJCMzZBQ0Y4OUE4Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+
IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+/+4ADkFkb2JlAGTAAAAAAf/bAIQAAQEB
AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgICAwMDAwMD
AwMDAwEBAQEBAQECAQECAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
AwMDAwMDAwMDAwMD/8AAEQgACwALAwERAAIRAQMRAf/EAIEAAQEBAAAAAAAAAAAAAAAAAAcACQEA
AgMAAAAAAAAAAAAAAAAAAAQDBQcQAAADBgQDCQEAAAAAAAAAAAUVBwECAwQUFhIGFxgAEyUiIyRl
JoaWJ0hoEQABAgMHAQgDAAAAAAAAAAASARECAxQAMSITBAUVIVGRMlKDJERkYpJj/9oADAMBAAIR
AxEAPwDaZdF0W0GW1YgcHWFVAoJC1UUINCwsMUHNsiHBwdI5uFpWSkJCTlhaFLSclJysN2FChQ3X
XIbjrHXWMdYxjNm2ra9smbZpo49NIimRSJaqqy4FVVCF1VVRVVVtk25bluMvcZ8MGonQwwz40REm
RIiIkSoiIhdzNdZU1jVzSUz1TUgy2r3KY3rmatuLezaJ9VmdQd2n0upxc8v8Ni5PY4ruO27kAp5G
XXC2XCw0RizeE8Q3FiZ+tna7X0J5046N3OJyqxJ3vHCXl6PaWLSXVxUzTawZaj53MLj3tXDXXOJ1
Z9Z/pM7qMVUWdP5+Om7nBwbbyHHSArwp4GGiFhhuLGPYXVmfq9jX0PIzyojzo3esJ3XxDhftHDe1
kb6z0y/OdBtx/rcjI93XySzLk9w3F5Fwt76u+YVb9RypP1IfTy/6Wn9nR/DGi+yw1XeD+of4W//Z

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://bluedash.net/images/themes/sky-blue.jpg?1323190114

/9j/4QAYRXhpZgAASUkqAAgAAAAAAAAAAAAAAP/sABFEdWNreQABAAQAAABkAAD/4QO5aHR0cDov
L25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENl
aGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4
OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjAtYzA2MCA2MS4xMzQ3NzcsIDIwMTAvMDIvMTItMTc6
MzI6MDAgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5
OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHht
bG5zOnhtcFJpZ2h0cz0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3JpZ2h0cy8iIHhtbG5z
OnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0
cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1sbnM6eG1wPSJo
dHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bXBSaWdodHM6TWFya2VkPSJGYWxzZSIgeG1w
TU06T3JpZ2luYWxEb2N1bWVudElEPSJ1dWlkOjcwNzQxMjE1RkYyNURGMTFCNUYwOUE3MUM2QjA0
NTdDIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjM0MTZGN0YyNkRFRTExREY5RUEzRDhDMkFE
RTczNjRFIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjM0MTZGN0YxNkRFRTExREY5RUEzRDhD
MkFERTczNjRFIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZG93cyI+
IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjFFNkYzQ0NGNkRF
RDExREY5MjgzREJCMzZBQ0Y4OUE4IiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOjFFNkYzQ0Qw
NkRFRDExREY5MjgzREJCMzZBQ0Y4OUE4Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+
IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+/+4ADkFkb2JlAGTAAAAAAf/bAIQAAQEB
AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgICAwMDAwMD
AwMDAwEBAQEBAQECAQECAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
AwMDAwMDAwMDAwMD/8AAEQgACwALAwERAAIRAQMRAf/EAIYAAQEBAAAAAAAAAAAAAAAAAAcBCAEA
AgMBAAAAAAAAAAAAAAAABgcAAQkKEAAAAgcFBQkAAAAAAAAAAAAFFgIDFBUHFwgAAQQGGBITJCUZ
ESMmZoaWJ0hoEQAAAwYFAgUFAQAAAAAAAAACAxQBEhMEBRcAFQYWBxEkIiOUZWaEhSZGJ0f/2gAM
AwEAAhEDEQA/AN31MVMVIZfqPqAAQGoGNwIBgkbYrBAMChEV89hgSEBQbnsewQcGBYdgx5Tg8AHY
DBqEFShQpQQVqlaNyCN1yN3ZbbLinini2pcXabqFR01QJifmKBTzDDTKfKDMMMHKEiGYMYiRCGMY
hNEIQmtaITWta1rW450Ob+b+aKTzTrClUrV+qJamS2qKqUSSVVZ8sooouemAFllFgmGALLLAFgQA
CxgQhYxgWMYxmG3UDHmRD5nbF176Ijc9JkZzeRq6j5ENLc+WowEfkzbtNLp4TbZ+7sA2146uGhyC
iIt/p4aGVcT7JVwHIbsJV3MPpDUed0ieLDQu9y3anMd0aizC16qLmc5EVXFQqX4z0dF2cbrES9u/
C8GLUDImfUbnzoke83YkvY3dR41vI5DbcZyH4HMTTtNrl5S07xk4fd2nG1w7c0BFv1FksjDT7JTu
JinICvuoLvSEp7hx2N5j2K5gtTdnVGY2vzDcdSiqrjKoi059Sh7JQ91jJO1feT+U5hb+G5NfUV16
R/3kWi5r094S9OHqs2+WbBf51vn90Vb2+Ixo20fTrE/0CD3TDF/m1tf88RW5+dp0++/VoVf3TNPZ
cf/Z

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://bluedash.net/images/themes/pink.jpg?1323190114

/9j/4QP0RXhpZgAATU0AKgAAAAgADAEAAAMAAAABAAsAAAEBAAMAAAABAAsAAAECAAMAAAADAAAA
ngEGAAMAAAABAAIAAAESAAMAAAABAAEAAAEVAAMAAAABAAMAAAEaAAUAAAABAAAApAEbAAUAAAAB
AAAArAEoAAMAAAABAAIAAAExAAIAAAAcAAAAtAEyAAIAAAAUAAAA0IdpAAQAAAABAAAA5AAAARwA
CAAIAAgAACcQAAAnEAAAJxAAACcQQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzADIwMTA6MDk6
MDMgMTQ6MzI6NTIAAASQAAAHAAAABDAyMjGgAQADAAAAAf//AACgAgAEAAAAAQAAAAugAwAEAAAA
AQAAAAsAAAAAAAAABgEDAAMAAAABAAYAAAEaAAUAAAABAAABagEbAAUAAAABAAABcgEoAAMAAAAB
AAIAAAIBAAQAAAABAAABegICAAQAAAABAAACcgAAAAAAAABIAAAAAQAAAEgAAAAB/9j/7QAMQWRv
YmVfQ00AAv/uAA5BZG9iZQBkgAAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTExUTExgR
DAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4ODg4U
EQwMDAwMEREMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIAAsACwMBIgAC
EQEDEQH/3QAEAAH/xAE/AAABBQEBAQEBAQAAAAAAAAADAAECBAUGBwgJCgsBAAEFAQEBAQEBAAAA
AAAAAAEAAgMEBQYHCAkKCxAAAQQBAwIEAgUHBggFAwwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFC
IyQVUsFiMzRygtFDByWSU/Dh8WNzNRaisoMmRJNUZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE
1OT0pbXF1eX1VmZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3EQACAgECBAQDBAUGBwcGBTUBAAIRAyEx
EgRBUWFxIhMFMoGRFKGxQiPBUtHwMyRi4XKCkkNTFWNzNPElBhaisoMHJjXC0kSTVKMXZEVVNnRl
4vKzhMPTdePzRpSkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2JzdHV2d3h5ent8f/2gAMAwEAAhED
EQA/AOzysrJbk3Nbc8APcAA4wBJ80X7TkfZ59V8+huncefW27v8AN9qWT9n+0Wz6E73Tu9aefztv
t/zUT9B6H+Bj0f8AhYj1f87Zu/656n/BKckUNP8Ao/uuhOceGHo/9J/5uX9Z/9n/7QquUGhvdG9z
aG9wIDMuMAA4QklNBAQAAAAAAA8cAVoAAxslRxwCAAAChPYAOEJJTQQlAAAAAAAQ2cQ2PV6pJ7je
9qPxFpPrWjhCSU0EOgAAAAAAkwAAABAAAAABAAAAAAALcHJpbnRPdXRwdXQAAAAFAAAAAENsclNl
bnVtAAAAAENsclMAAAAAUkdCQwAAAABJbnRlZW51bQAAAABJbnRlAAAAAENscm0AAAAATXBCbGJv
b2wBAAAAD3ByaW50U2l4dGVlbkJpdGJvb2wAAAAAC3ByaW50ZXJOYW1lVEVYVAAAAAEAAAA4QklN
BDsAAAAAAbIAAAAQAAAAAQAAAAAAEnByaW50T3V0cHV0T3B0aW9ucwAAABIAAAAAQ3B0bmJvb2wA
AAAAAENsYnJib29sAAAAAABSZ3NNYm9vbAAAAAAAQ3JuQ2Jvb2wAAAAAAENudENib29sAAAAAABM
YmxzYm9vbAAAAAAATmd0dmJvb2wAAAAAAEVtbERib29sAAAAAABJbnRyYm9vbAAAAAAAQmNrZ09i
amMAAAABAAAAAAAAUkdCQwAAAAMAAAAAUmQgIGRvdWJAb+AAAAAAAAAAAABHcm4gZG91YkBv4AAA
AAAAAAAAAEJsICBkb3ViQG/gAAAAAAAAAAAAQnJkVFVudEYjUmx0AAAAAAAAAAAAAAAAQmxkIFVu
dEYjUmx0AAAAAAAAAAAAAAAAUnNsdFVudEYjUHhsP/AAAAAAAAAAAAAKdmVjdG9yRGF0YWJvb2wB
AAAAAFBnUHNlbnVtAAAAAFBnUHMAAAAAUGdQQwAAAABMZWZ0VW50RiNSbHQAAAAAAAAAAAAAAABU
b3AgVW50RiNSbHQAAAAAAAAAAAAAAABTY2wgVW50RiNQcmNAWQAAAAAAADhCSU0D7QAAAAAAEAAB
AAAAAQACAAEAAAABAAI4QklNBCYAAAAAAA4AAAAAAAAAAAAAP4AAADhCSU0EDQAAAAAABAAAAB44
QklNBBkAAAAAAAQAAAAeOEJJTQPzAAAAAAAJAAAAAAAAAAABADhCSU0nEAAAAAAACgABAAAAAAAA
AAI4QklNA/UAAAAAAEgAL2ZmAAEAbGZmAAYAAAAAAAEAL2ZmAAEAoZmaAAYAAAAAAAEAMgAAAAEA
WgAAAAYAAAAAAAEANQAAAAEALQAAAAYAAAAAAAE4QklNA/gAAAAAAHAAAP//////////////////
//////////8D6AAAAAD/////////////////////////////A+gAAAAA////////////////////
/////////wPoAAAAAP////////////////////////////8D6AAAOEJJTQQIAAAAAAAQAAAAAQAA
AkAAAAJAAAAAADhCSU0EHgAAAAAABAAAAAA4QklNBBoAAAAAAzcAAAAGAAAAAAAAAAAAAAALAAAA
CwAAAAEAMQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAACwAAAAsAAAAAAAAAAAAA
AAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAQAAAAAAAG51bGwAAAACAAAABmJvdW5kc09i
amMAAAABAAAAAAAAUmN0MQAAAAQAAAAAVG9wIGxvbmcAAAAAAAAAAExlZnRsb25nAAAAAAAAAABC
dG9tbG9uZwAAAAsAAAAAUmdodGxvbmcAAAALAAAABnNsaWNlc1ZsTHMAAAABT2JqYwAAAAEAAAAA
AAVzbGljZQAAABIAAAAHc2xpY2VJRGxvbmcAAAAAAAAAB2dyb3VwSURsb25nAAAAAAAAAAZvcmln
aW5lbnVtAAAADEVTbGljZU9yaWdpbgAAAA1hdXRvR2VuZXJhdGVkAAAAAFR5cGVlbnVtAAAACkVT
bGljZVR5cGUAAAAASW1nIAAAAAZib3VuZHNPYmpjAAAAAQAAAAAAAFJjdDEAAAAEAAAAAFRvcCBs
b25nAAAAAAAAAABMZWZ0bG9uZwAAAAAAAAAAQnRvbWxvbmcAAAALAAAAAFJnaHRsb25nAAAACwAA
AAN1cmxURVhUAAAAAQAAAAAAAG51bGxURVhUAAAAAQAAAAAAAE1zZ2VURVhUAAAAAQAAAAAABmFs
dFRhZ1RFWFQAAAABAAAAAAAOY2VsbFRleHRJc0hUTUxib29sAQAAAAhjZWxsVGV4dFRFWFQAAAAB
AAAAAAAJaG9yekFsaWduZW51bQAAAA9FU2xpY2VIb3J6QWxpZ24AAAAHZGVmYXVsdAAAAAl2ZXJ0
QWxpZ25lbnVtAAAAD0VTbGljZVZlcnRBbGlnbgAAAAdkZWZhdWx0AAAAC2JnQ29sb3JUeXBlZW51
bQAAABFFU2xpY2VCR0NvbG9yVHlwZQAAAABOb25lAAAACXRvcE91dHNldGxvbmcAAAAAAAAACmxl
ZnRPdXRzZXRsb25nAAAAAAAAAAxib3R0b21PdXRzZXRsb25nAAAAAAAAAAtyaWdodE91dHNldGxv
bmcAAAAAADhCSU0EKAAAAAAADAAAAAI/8AAAAAAAADhCSU0EEQAAAAAAAQEAOEJJTQQUAAAAAAAE
AAAAAThCSU0EDAAAAAACjgAAAAEAAAALAAAACwAAACQAAAGMAAACcgAYAAH/2P/tAAxBZG9iZV9D
TQAC/+4ADkFkb2JlAGSAAAAAAf/bAIQADAgICAkIDAkJDBELCgsRFQ8MDA8VGBMTFRMTGBEMDAwM
DAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAENCwsNDg0QDg4QFA4ODhQUDg4ODhQRDAwM
DAwREQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgACwALAwEiAAIRAQMR
Af/dAAQAAf/EAT8AAAEFAQEBAQEBAAAAAAAAAAMAAQIEBQYHCAkKCwEAAQUBAQEBAQEAAAAAAAAA
AQACAwQFBgcICQoLEAABBAEDAgQCBQcGCAUDDDMBAAIRAwQhEjEFQVFhEyJxgTIGFJGhsUIjJBVS
wWIzNHKC0UMHJZJT8OHxY3M1FqKygyZEk1RkRcKjdDYX0lXiZfKzhMPTdePzRieUpIW0lcTU5PSl
tcXV5fVWZnaGlqa2xtbm9jdHV2d3h5ent8fX5/cRAAICAQIEBAMEBQYHBwYFNQEAAhEDITESBEFR
YXEiEwUygZEUobFCI8FS0fAzJGLhcoKSQ1MVY3M08SUGFqKygwcmNcLSRJNUoxdkRVU2dGXi8rOE
w9N14/NGlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vYnN0dXZ3eHl6e3x//aAAwDAQACEQMRAD8A
7PKysluTc1tzwA9wADjAEnzRftOR9nn1Xz6G6dx59bbu/wA32pZP2f7RbPoTvdO71p5/O2+3/NRP
0Hof4GPR/wCFiPV/ztm7/rnqf8EpyRQ0/wCj+66E5x4Yej/0n/m5f1n/2ThCSU0EIQAAAAAAVQAA
AAEBAAAADwBBAGQAbwBiAGUAIABQAGgAbwB0AG8AcwBoAG8AcAAAABMAQQBkAG8AYgBlACAAUABo
AG8AdABvAHMAaABvAHAAIABDAFMANQAAAAEAOEJJTQQGAAAAAAAHAAgAAAABAQD/4Q0WaHR0cDov
L25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENl
aGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4
OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjAtYzA2MCA2MS4xMzQ3NzcsIDIwMTAvMDIvMTItMTc6
MzI6MDAgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5
OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHht
bG5zOmNycz0iaHR0cDovL25zLmFkb2JlLmNvbS9jYW1lcmEtcmF3LXNldHRpbmdzLzEuMC8iIHht
bG5zOnBob3Rvc2hvcD0iaHR0cDovL25zLmFkb2JlLmNvbS9waG90b3Nob3AvMS4wLyIgeG1sbnM6
eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczpkYz0iaHR0cDovL3B1cmwu
b3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hh
cC8xLjAvbW0vIiB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBl
L1Jlc291cmNlRXZlbnQjIiBjcnM6QWxyZWFkeUFwcGxpZWQ9IlRydWUiIHBob3Rvc2hvcDpDb2xv
ck1vZGU9IjMiIHhtcDpDcmVhdGVEYXRlPSIyMDEwLTA5LTAzVDE0OjMxOjQ1KzA4OjAwIiB4bXA6
TW9kaWZ5RGF0ZT0iMjAxMC0wOS0wM1QxNDozMjo1MiswODowMCIgeG1wOk1ldGFkYXRhRGF0ZT0i
MjAxMC0wOS0wM1QxNDozMjo1MiswODowMCIgZGM6Zm9ybWF0PSJpbWFnZS9qcGVnIiB4bXBNTTpJ
bnN0YW5jZUlEPSJ4bXAuaWlkOjE1NzZGNjEzMjVCN0RGMTFCMzlBQkUwQzYzNzE2RkJFIiB4bXBN
TTpEb2N1bWVudElEPSJ4bXAuZGlkOjE1NzZGNjEzMjVCN0RGMTFCMzlBQkUwQzYzNzE2RkJFIiB4
bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MTU3NkY2MTMyNUI3REYxMUIzOUFCRTBD
NjM3MTZGQkUiPiA8eG1wTU06SGlzdG9yeT4gPHJkZjpTZXE+IDxyZGY6bGkgc3RFdnQ6YWN0aW9u
PSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDoxNTc2RjYxMzI1QjdERjExQjM5QUJF
MEM2MzcxNkZCRSIgc3RFdnQ6d2hlbj0iMjAxMC0wOS0wM1QxNDozMjo1MiswODowMCIgc3RFdnQ6
c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiBzdEV2dDpjaGFuZ2Vk
PSIvIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0b3J5PiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9y
ZGY6UkRGPiA8L3g6eG1wbWV0YT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICA8P3hwYWNrZXQgZW5kPSJ3Ij8+/+4ADkFkb2JlAGRAAAAAAf/bAIQA
AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgICAwMD
AwMDAwMDAwEBAQEBAQEBAQEBAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
AwMDAwMDAwMDAwMDAwMD/8AAEQgACwALAwERAAIRAQMRAf/dAAQAAv/EAaIAAAAGAgMBAAAAAAAA
AAAAAAcIBgUECQMKAgEACwEAAAYDAQEBAAAAAAAAAAAABgUEAwcCCAEJAAoLEAACAQMEAQMDAgMD
AwIGCXUBAgMEEQUSBiEHEyIACDEUQTIjFQlRQhZhJDMXUnGBGGKRJUOhsfAmNHIKGcHRNSfhUzaC
8ZKiRFRzRUY3R2MoVVZXGrLC0uLyZIN0k4Rlo7PD0+MpOGbzdSo5OkhJSlhZWmdoaWp2d3h5eoWG
h4iJipSVlpeYmZqkpaanqKmqtLW2t7i5usTFxsfIycrU1dbX2Nna5OXm5+jp6vT19vf4+foRAAIB
AwIEBAMFBAQEBgYFbQECAxEEIRIFMQYAIhNBUQcyYRRxCEKBI5EVUqFiFjMJsSTB0UNy8BfhgjQl
klMYY0TxorImNRlUNkVkJwpzg5NGdMLS4vJVZXVWN4SFo7PD0+PzKRqUpLTE1OT0laW1xdXl9ShH
V2Y4doaWprbG1ub2Z3eHl6e3x9fn90hYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6
ytrq+v/aAAwDAQACEQMRAD8A2Yu0e0ezMf2Z2JQUHYm+qGhod9buo6Kio93Z+mpKSkps/kIaalpa
aHIJDT09PCgREQBUUAAAD3PWz7PtEu0bVLLtVs0jW0RJMSEklFJJJWpJOSTx66Rcjcjck3fJPJ13
d8nbVLdS7VaO7vaQM7u0EZZmYxkszEksxJJJJJr0uv8ASL2D/cD7z+/e8vvP9Bf8X+7/ALz5v7n+
Lf7Mx/Af4p5/vvL/ABH+B/5F57+T7T9nV4/T7Lv3Vtf7z8P92weH+8dNPDSmn6DXppT4dffThq7u
Oegr/U7lH+tv039Vdt+n/rT4Wj6aHT4X9W/H8LTop4fj/raKafF/Uprz1//Q2nOxf7gf6Qd9/ef6
C/vP75bn+7/i/wDszH8W+5/jdd5/4p/Af9wf8R8t/P8AZf5J5NXh/b0+5p2r95/uvbfD/ePh+BHT
T9BppoFNOvv0+mvup8Wa9Z8cnf1t/qjyr9N/Wn6f9222jwv6t+Fp8FNPheP+v4dKaPG/V008Tvr0
sf8Afk/3J/5o39r/AKG//Agv4b/Df9mC/wDPv/d7+L/+Rb+Lf9Wz2g/3YfvD/ifr+v8A+XLVq+i/
3nXp/wCbfh/8O6Dn/Im/rN/zsfj/ANY/+kB4nifuD/nD9R4P/UL9L/y+9f/Z

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://bluedash.net/system/photos/2576/medium/Screen%20shot%202011-07-17%20at%2011.42.50%20AM.jpg

/9j/4AAQSkZJRgABAQEASABIAAD/4QCARXhpZgAATU0AKgAAAAgABQESAAMAAAABAAEAAAEaAAUA
AAABAAAASgEbAAUAAAABAAAAUgEoAAMAAAABAAIAAIdpAAQAAAABAAAAWgAAAAAAAABIAAAAAQAA
AEgAAAABAAKgAgAEAAAAAQAAAgigAwAEAAAAAQAAAcQAAAAA/+IZ/ElDQ19QUk9GSUxFAAEBAAAZ
7GFwcGwCEAAAbW50clJHQiBYWVogB9sABgAZAAEADwAYYWNzcEFQUEwAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAARZGVzYwAAAVAAAABiZHNjbQAAAbQAAAJCY3BydAAAA/gAAADQd3RwdAAA
BMgAAAAUclhZWgAABNwAAAAUZ1hZWgAABPAAAAAUYlhZWgAABQQAAAAUclRSQwAABRgAAAgMYWFy
ZwAADSQAAAAgdmNndAAADUQAAAYSbmRpbgAAE1gAAAY+Y2hhZAAAGZgAAAAsbW1vZAAAGcQAAAAo
YlRSQwAABRgAAAgMZ1RSQwAABRgAAAgMYWFiZwAADSQAAAAgYWFnZwAADSQAAAAgZGVzYwAAAAAA
AAAIRGlzcGxheQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG1sdWMAAAAAAAAAEgAAAAxubE5MAAAA
FgAAAOhkYURLAAAAHAAAAP5wbFBMAAAAEgAAARplblVTAAAAEgAAASxuYk5PAAAAEgAAAT5mckZS
AAAAFgAAAVBwdEJSAAAAGAAAAWZwdFBUAAAAFgAAAX56aENOAAAADAAAAZRlc0VTAAAAEgAAAaBq
YUpQAAAADgAAAbJydVJVAAAAJAAAAcBzdlNFAAAAEAAAAeR6aFRXAAAADgAAAfRkZURFAAAAEAAA
AgJmaUZJAAAAEAAAAhJpdElUAAAAFAAAAiJrb0tSAAAADAAAAjYASwBsAGUAdQByAGUAbgAtAEwA
QwBEAEwAQwBEAC0AZgBhAHIAdgBlAHMAawDmAHIAbQBLAG8AbABvAHIAIABMAEMARABDAG8AbABv
AHIAIABMAEMARABGAGEAcgBnAGUALQBMAEMARABMAEMARAAgAGMAbwB1AGwAZQB1AHIATABDAEQA
IABDAG8AbABvAHIAaQBkAG8ATABDAEQAIABhACAAQwBvAHIAZQBzX2mCcgAgAEwAQwBEAEwAQwBE
ACAAYwBvAGwAbwByMKsw6TD8ACAATABDAEQEJgQyBDUEQgQ9BD4EOQAgBBYEGgAtBDQEOARBBD8E
OwQ1BDkARgDkAHIAZwAtAEwAQwBEX2mCcm2yZnaYb3k6VmgARgBhAHIAYgAtAEwAQwBEAFYA5ABy
AGkALQBMAEMARABMAEMARAAgAGMAbwBsAG8AcgBpzuy37AAgAEwAQwBEAAB0ZXh0AAAAAENvcHly
aWdodCBBcHBsZSwgSW5jLiwgMjAxMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNSAAEAAAABFs9YWVogAAAAAAAAadYA
ADaxAAAB2FhZWiAAAAAAAABnVAAAuuIAAAlMWFlaIAAAAAAAACWsAAAObgAAyAljdXJ2AAAAAAAA
BAAAAAAFAAoADwAUABkAHgAjACgALQAyADYAOwBAAEUASgBPAFQAWQBeAGMAaABtAHIAdwB8AIEA
hgCLAJAAlQCaAJ8AowCoAK0AsgC3ALwAwQDGAMsA0ADVANsA4ADlAOsA8AD2APsBAQEHAQ0BEwEZ
AR8BJQErATIBOAE+AUUBTAFSAVkBYAFnAW4BdQF8AYMBiwGSAZoBoQGpAbEBuQHBAckB0QHZAeEB
6QHyAfoCAwIMAhQCHQImAi8COAJBAksCVAJdAmcCcQJ6AoQCjgKYAqICrAK2AsECywLVAuAC6wL1
AwADCwMWAyEDLQM4A0MDTwNaA2YDcgN+A4oDlgOiA64DugPHA9MD4APsA/kEBgQTBCAELQQ7BEgE
VQRjBHEEfgSMBJoEqAS2BMQE0wThBPAE/gUNBRwFKwU6BUkFWAVnBXcFhgWWBaYFtQXFBdUF5QX2
BgYGFgYnBjcGSAZZBmoGewaMBp0GrwbABtEG4wb1BwcHGQcrBz0HTwdhB3QHhgeZB6wHvwfSB+UH
+AgLCB8IMghGCFoIbgiCCJYIqgi+CNII5wj7CRAJJQk6CU8JZAl5CY8JpAm6Cc8J5Qn7ChEKJwo9
ClQKagqBCpgKrgrFCtwK8wsLCyILOQtRC2kLgAuYC7ALyAvhC/kMEgwqDEMMXAx1DI4MpwzADNkM
8w0NDSYNQA1aDXQNjg2pDcMN3g34DhMOLg5JDmQOfw6bDrYO0g7uDwkPJQ9BD14Peg+WD7MPzw/s
EAkQJhBDEGEQfhCbELkQ1xD1ERMRMRFPEW0RjBGqEckR6BIHEiYSRRJkEoQSoxLDEuMTAxMjE0MT
YxODE6QTxRPlFAYUJxRJFGoUixStFM4U8BUSFTQVVhV4FZsVvRXgFgMWJhZJFmwWjxayFtYW+hcd
F0EXZReJF64X0hf3GBsYQBhlGIoYrxjVGPoZIBlFGWsZkRm3Gd0aBBoqGlEadxqeGsUa7BsUGzsb
YxuKG7Ib2hwCHCocUhx7HKMczBz1HR4dRx1wHZkdwx3sHhYeQB5qHpQevh7pHxMfPh9pH5Qfvx/q
IBUgQSBsIJggxCDwIRwhSCF1IaEhziH7IiciVSKCIq8i3SMKIzgjZiOUI8Ij8CQfJE0kfCSrJNol
CSU4JWgllyXHJfcmJyZXJocmtyboJxgnSSd6J6sn3CgNKD8ocSiiKNQpBik4KWspnSnQKgIqNSpo
KpsqzysCKzYraSudK9EsBSw5LG4soizXLQwtQS12Last4S4WLkwugi63Lu4vJC9aL5Evxy/+MDUw
bDCkMNsxEjFKMYIxujHyMioyYzKbMtQzDTNGM38zuDPxNCs0ZTSeNNg1EzVNNYc1wjX9Njc2cjau
Nuk3JDdgN5w31zgUOFA4jDjIOQU5Qjl/Obw5+To2OnQ6sjrvOy07azuqO+g8JzxlPKQ84z0iPWE9
oT3gPiA+YD6gPuA/IT9hP6I/4kAjQGRApkDnQSlBakGsQe5CMEJyQrVC90M6Q31DwEQDREdEikTO
RRJFVUWaRd5GIkZnRqtG8Ec1R3tHwEgFSEtIkUjXSR1JY0mpSfBKN0p9SsRLDEtTS5pL4kwqTHJM
uk0CTUpNk03cTiVObk63TwBPSU+TT91QJ1BxULtRBlFQUZtR5lIxUnxSx1MTU19TqlP2VEJUj1Tb
VShVdVXCVg9WXFapVvdXRFeSV+BYL1h9WMtZGllpWbhaB1pWWqZa9VtFW5Vb5Vw1XIZc1l0nXXhd
yV4aXmxevV8PX2Ffs2AFYFdgqmD8YU9homH1YklinGLwY0Njl2PrZEBklGTpZT1lkmXnZj1mkmbo
Zz1nk2fpaD9olmjsaUNpmmnxakhqn2r3a09rp2v/bFdsr20IbWBtuW4SbmtuxG8eb3hv0XArcIZw
4HE6cZVx8HJLcqZzAXNdc7h0FHRwdMx1KHWFdeF2Pnabdvh3VnezeBF4bnjMeSp5iXnnekZ6pXsE
e2N7wnwhfIF84X1BfaF+AX5ifsJ/I3+Ef+WAR4CogQqBa4HNgjCCkoL0g1eDuoQdhICE44VHhauG
DoZyhteHO4efiASIaYjOiTOJmYn+imSKyoswi5aL/IxjjMqNMY2Yjf+OZo7OjzaPnpAGkG6Q1pE/
kaiSEZJ6kuOTTZO2lCCUipT0lV+VyZY0lp+XCpd1l+CYTJi4mSSZkJn8mmia1ZtCm6+cHJyJnPed
ZJ3SnkCerp8dn4uf+qBpoNihR6G2oiailqMGo3aj5qRWpMelOKWpphqmi6b9p26n4KhSqMSpN6mp
qhyqj6sCq3Wr6axcrNCtRK24ri2uoa8Wr4uwALB1sOqxYLHWskuywrM4s660JbSctRO1irYBtnm2
8Ldot+C4WbjRuUq5wro7urW7LrunvCG8m70VvY++Cr6Evv+/er/1wHDA7MFnwePCX8Lbw1jD1MRR
xM7FS8XIxkbGw8dBx7/IPci8yTrJuco4yrfLNsu2zDXMtc01zbXONs62zzfPuNA50LrRPNG+0j/S
wdNE08bUSdTL1U7V0dZV1tjXXNfg2GTY6Nls2fHadtr724DcBdyK3RDdlt4c3qLfKd+v4DbgveFE
4cziU+Lb42Pj6+Rz5PzlhOYN5pbnH+ep6DLovOlG6dDqW+rl63Dr++yG7RHtnO4o7rTvQO/M8Fjw
5fFy8f/yjPMZ86f0NPTC9VD13vZt9vv3ivgZ+Kj5OPnH+lf65/t3/Af8mP0p/br+S/7c/23//3Bh
cmEAAAAAAAMAAAACZmYAAPKnAAANWQAAE9AAAAoOdmNndAAAAAAAAAAAAAMBAAACAAAAVgEuAesC
xANzBCUE6gWhBl8HIQfbCKIJagoyCvwLzwyfDXQOTg8pEAYQ4hHFEqYTiRRvFVYWRRdXGG0Zhhqg
G7oc0h3sHwkgJCFBImAjfSSbJbkm2if6KRsqPitiLIMtqS7PL/MxGDI/M2M0izWxNtE37jkNOio7
RjxiPX4+mj+0QM5B50L+RBhFLkZER1dIa0l8So5LnkyuTb1OzE/aUOZR9FMBVAxVF1YcVx9YI1kn
WixbMlw6XUNeS19VYGNhb2J+Y41kn2WxZsVn2mjwaghrIGw5bVNub2+KcKVxwXLec/t1GHY1d1R4
cXmQeq97z3zvfhB/M4BVgXiCnIPBhOaGDIcziFqJgoqpi9OM/I4mj0+QeZGkks2T75UPljGXVZh4
mZyawZvnnQ2eNZ9coIOhqqLRo/elHKZBp2Woh6moqser5Kz/rhivMLBHsVyycrOJtJ61sLa8t8O4
xrnDuru7rbyavYG+Y79AwBfA6sG5woHDR8QJxMrFhsZBxvvHtMhrySLJ2sqRy0zMDMzRzZbOWs8e
z+LQpNFm0ijS6dOq1GrVKtXr1qvXa9gs2O3Zr9px2zTb+Ny83YHeRt8N39TgmuFe4iLi6eO15Ifl
X+Y95yPoEOkF6gLrCuwb7TfuW++H8Lrx9PM09Hj1vvcH+FH5nPrm/C79df66//8AAABWASMBsAJZ
AxEDsgRbBQoFrQZYBwcHrwhhCRgJywqEC0IMBQzDDYUOSQ8OD9gQohFsEjcTBxPdFMwVxhbAF70Y
uBmzGrAbrBynHaQeox+jIKIhoSKiI6QkpyWpJq0nsSi0KboqwSvFLMot0i7YL90w3jHdMtwz2jTX
NdU20zfPOMo5xTrBO7s8tD2tPqQ/mkCPQYNCd0NqRF1FTkZARzFIIEkQSgBK8EvcTMVNrE6TT3tQ
YlFJUjBTGVQBVOlV0la7V6VYj1l6WmVbT1w8XSdeE18BX+5g22HJYrdjpWSTZYRmgWeCaINpg2qC
a4Nsgm2DboNvgnCCcYJygnOCdIF1gHaAd394f3l+en17fHx8fXt+en95gHiBeIKPg6WEvIXUhuuI
A4kaijKLSIxgjXeOjI+kkLqR0JLmk/yVEZYnlz2YUZlmmnybkZyknbqez5/joPeiDKMhpDalSqZe
p3Koh6mbqq6rwazUreeu+rAMsR6yL7NBtFK1Y7Zzt4S4lLmlurW7xLzTveO+6r/QwK3BisJnw0TE
IMT8xdjGs8eOyGnJQ8odyvbLz8ynzX/OVs8t0ATQ2tGx0obTXNQx1QXV29ax14rYadlL2jLbH9wT
3Q/eE98h4DvhYOKT49TlKOaM6ADpiesi7M3uifBR8ij0C/X49+/56vvt/fP//wAAACsAxAFLAdgC
WwLtA2sD+ASCBRgFogY1BssHYQf9CJsJPgngCocLMgvfDIsNPA3sDp0PUhALEMURjhJfEzEUBBTU
FaUWeBdNGB8Y9RnKGqEbeBxPHSgeAR7aH7MgjyFqIkYjIyP+JNoluCaWJ3QoUCkoKfwq0SulLHkt
TS4hLvEvwTCRMWAyLjL5M8I0izVTNhg22zefOGE5IjnhOp87XjwbPNc9kz5PPw0/0kCaQWNCLELz
Q7tEhEVMRhRG20ejSGtJMkn5SsBLh0xPTRZN3E6iT2lQLlD0UbpSf1NFVApUzlWRVlRXF1faWJ5Z
YlooWu5btlyAXUpeFl7kX7NghGFXYixjAmPaZLRlkGZtZ0toK2kLae1q0Gu0bJZtd25YbzpwG3D9
cd9ywXOjdIZ1aXZNdzF4Fnj7eeJ6ynuyfJt9hX5wf1yASYE2giODEoQBhPGF5oblh+mI7onyivaL
+oz+jgKPBpAJkQ2SEJMUlBeVGpYelyGYJJknmiqbLZwxnTSeN587oD6hQaJLo2OkgaWfpr6n2qj4
qharNKxRrW2uiq+nsMSx4LL8tBe1M7ZPt2q4hbmhury71rzxvgy/JsBAwV3Ce8OXxK7Fxsbdx/TJ
D8ovy1XMhc2+zwbQX9HH00vU4tac2Hfaetym3wnhrOSX59Hrde+P9ED5rP//AABuZGluAAAAAAAA
BjYAAKU/AABWZgAAU6IAAKO8AAAlOAAADaUAAFANAABUOQACVHoAAd64AAFZmQADAQAAAgAAAAEA
BAAIABAAGQAlADMARABWAGsAggCaALUA0QDvAQ8BMQFUAXoBoQHKAfUCGwJCAmoCkwK+AuoDGANH
A3cDqQPcBBAERgR9BLYE8AUrBWgFpgXlBiUGaAarBu8HNQd9B8YIEAhcCKkI9wlICZwJ8gpJCqIK
/QtaC7gMGAx6DN4NRA2sDhYOgQ7vD18P0hBGEL0RNhGxEi4SrhMvE7MUORTCFUsV2BZnFvgXkBgq
GMUZYhoBGqEbQhvlHIodMB3WHn8fKB/TIH4hKyHZIogjOSPqJJ0lUSYHJr4ndigwKOwpqSpnKycr
6iytLXMuOS8CL8wwmDFkMjMzAzPUNKY1ejZQNyY3/jjXObI6jjtrPEo9Kj4MPu4/00C4QaBCiUN0
RGBFTUZDRz5IOUk0SjFLMEwwTTFOMk82UDtRQVJJU1NUX1VtVn1XkFilWbxa11v1XRZeOl9jYI5h
vmLyZChlY2agZ99pHmpja61tAG5bb79xLXKldCp1u3dZeQZ6w3yQfmyAXIJbhGeGhIisit2NGI9W
kZuT0pX4mCCaT5yGnsShCKNRpaKn96pTrLKvFbF8s+O2T7i7uym9mcAKwnzE9cd+yf/Mcc7S0SPT
YdWP16zZudu03aLfgOFU4x7k3+aa6E/p/+us7VjvBPCu8lj0BPWx92H5FPrJ/IP+Qf//AAAAAQAF
AAsAFAAgAC8AQQBWAG0AhwCjAMEA4gEFASsBUgF8AakB1wIGAjECXQKLAroC7AMfA1QDiwPEA/4E
OgR3BLcE+AU7BX8FxQYNBlYGogbvBz0HjQfgCDQIiQjhCTsJmQn5ClsKwAsnC48L+gxoDNgNSg2+
DjYOrw8sD6sQLRCyEToRxBJREuETcxQIFKEVOxXYFngXHRfIGHYZJRnYGo0bRRv+HLsdeh47Hv4f
xCCMIVYiIyLxI8MkliVrJkMnHSf6KNkpuyqeK3csTy0qLgcu6C/JMK4xlDJ9M2k0VzVHNjk3Ljgm
OSA6HDsaPBs9Hz4lPy1AN0FEQlRDZkR6RY9GkEeUSJhJnkqnS7FMvk3MTt1P8VEFUhxTN1RRVXBW
kFeyWNZZ/VsnXFFdf16vX+FhFWJLY4Vkv2X7ZztofGm/awRsTG2VbuFwMHGBctN0KHWAdtt4N3mW
evh8XH3DfyyAmIIGg3eE64Zhh9mJVIrRjFCN1I9ZkOCSaZQ9liaYE5oDm/md8p/vofKj+aYEqBWq
KqxErmSwh7KwtN+3EblIu4S9xcALwlTEnsbfyRbLRc1oz33RhNN/1WjXQ9kN2sncdd4U36LhJOKb
5AflZua+6A3pU+qV687tBO4272LwjPGw8tTz8/US9i33R/hh+Xv6kvup/L/91v7q//8AAAACAAgA
EgAhADMASgBkAIIAogDGAOwBFQFBAXABogHWAgwCPwJ1Aq0C6AMmA2UDqAPsBDMEfATIBRYFZgW5
Bg4GZQa/BxsHegfbCD4IpAkNCXsJ7gpjCtwLWAvXDFsM4g1tDfwOkA8pD8YQaREREb0SbxMmE+EU
ohVnFjIW/RfCGIoZVRolGvgbzhypHYceaR9PIDghJiIXIwwkBiUDJgUnCigUKSEqMytLLGktiS6t
L9Qw/DImM1E0fjWrNtk4CDk3OmU7lTzFPfU/JkBYQYtCwEP2RSxGaEeqSO1KM0t9TMlOGE9qUL5S
FFNtVMdWJFeCWOFaQ1ulXQleb1/WYT5iqWQWZYNm82hlacdrIWx9bdtvPHChcgdzb3Tbdkl3unkt
eqN8G32WfxOAk4IVg5qFIoasiDeJxotWjOqOgJAZkbKTQZS7ljWXspkwmrOcNp28n0OgzaJao+ml
eqcNqKOqO6vWrXOvErCzslez/rWmt1C4/bqtvF6+Er/JwYLDPMT0xqzIbMo2zAHNzs+d0WnTM9T1
1q7YXdoE25zdJt6k4Bfhd+LM5BjlUOaD56Xov+nL6s/ryOy97aHuhu9Y8Cjw9PGx8m7zJfPQ9Hv1
JPW99lb28PeB+An4kfka+Zv6EvqK+wH7efvl/E38tf0d/YX96f5B/pr+8/9N/6b//wAAc2YzMgAA
AAAAAQxCAAAF3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGxtbW9kAAAAAAAABhAAAJzHAAAA
AMbEvcQAAAAAAAAAAAAAAAAAAAAA/9sAQwACAQEBAQECAQEBAgICAgIEAwICAgIFBAQDBAYFBgYG
BQYGBgcJCAYHCQcGBggLCAkKCgoKCgYICwwLCgwJCgoK/9sAQwECAgICAgIFAwMFCgcGBwoKCgoK
CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK/8AAEQgBXgGTAwEi
AAIRAQMRAf/EAB4AAQABBAMBAQAAAAAAAAAAAAAHAQIICQMFBgQK/8QAVBAAAQMDAwMCAwUFAwYI
CwkAAQIDBAAFBgcIEQkSIRMxFEFRChUiYXEjMkKBkRZioSQzUpKx8BclNFNyk8HhGCYnQ3WCsrO1
0fEZOkVUZWeDw8T/xAAYAQEBAQEBAAAAAAAAAAAAAAAAAQIDBP/EADERAQEAAgAEAwcDBAIDAAAA
AAABAhEDEiExQVHBImGRobHR8BNxgQRCUuEjojIzQ//aAAwDAQACEQMRAD8A3+UpSgUpSgUpSgUp
SgUpSgUpSgUpSgUpSgUpSgUpSgUpyPrVO4UFaVaV/wC/NO//AH5oLqVTuFCoAUFaVQHmq0ClKUCl
KUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKoVA
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

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://bluedash.net/system/photos/2578/medium/Untitled.jpg

/9j/4AAQSkZJRgABAQEASABIAAD/4QCMRXhpZgAATU0AKgAAAAgABgEGAAMAAAABAAIAAAESAAMA
AAABAAEAAAEaAAUAAAABAAAAVgEbAAUAAAABAAAAXgEoAAMAAAABAAIAAIdpAAQAAAABAAAAZgAA
AAAAAABIAAAAAQAAAEgAAAABAAKgAgAEAAAAAQAAAU+gAwAEAAAAAQAAALQAAAAA/+IZ/ElDQ19Q
Uk9GSUxFAAEBAAAZ7GFwcGwCEAAAbW50clJHQiBYWVogB9sABgAZAAEADwAYYWNzcEFQUEwAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARZGVzYwAAAVAAAABiZHNjbQAAAbQAAAJCY3BydAAA
A/gAAADQd3RwdAAABMgAAAAUclhZWgAABNwAAAAUZ1hZWgAABPAAAAAUYlhZWgAABQQAAAAUclRS
QwAABRgAAAgMYWFyZwAADSQAAAAgdmNndAAADUQAAAYSbmRpbgAAE1gAAAY+Y2hhZAAAGZgAAAAs
bW1vZAAAGcQAAAAoYlRSQwAABRgAAAgMZ1RSQwAABRgAAAgMYWFiZwAADSQAAAAgYWFnZwAADSQA
AAAgZGVzYwAAAAAAAAAIRGlzcGxheQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG1sdWMAAAAAAAAA
EgAAAAxubE5MAAAAFgAAAOhkYURLAAAAHAAAAP5wbFBMAAAAEgAAARplblVTAAAAEgAAASxuYk5P
AAAAEgAAAT5mckZSAAAAFgAAAVBwdEJSAAAAGAAAAWZwdFBUAAAAFgAAAX56aENOAAAADAAAAZRl
c0VTAAAAEgAAAaBqYUpQAAAADgAAAbJydVJVAAAAJAAAAcBzdlNFAAAAEAAAAeR6aFRXAAAADgAA
AfRkZURFAAAAEAAAAgJmaUZJAAAAEAAAAhJpdElUAAAAFAAAAiJrb0tSAAAADAAAAjYASwBsAGUA
dQByAGUAbgAtAEwAQwBEAEwAQwBEAC0AZgBhAHIAdgBlAHMAawDmAHIAbQBLAG8AbABvAHIAIABM
AEMARABDAG8AbABvAHIAIABMAEMARABGAGEAcgBnAGUALQBMAEMARABMAEMARAAgAGMAbwB1AGwA
ZQB1AHIATABDAEQAIABDAG8AbABvAHIAaQBkAG8ATABDAEQAIABhACAAQwBvAHIAZQBzX2mCcgAg
AEwAQwBEAEwAQwBEACAAYwBvAGwAbwByMKsw6TD8ACAATABDAEQEJgQyBDUEQgQ9BD4EOQAgBBYE
GgAtBDQEOARBBD8EOwQ1BDkARgDkAHIAZwAtAEwAQwBEX2mCcm2yZnaYb3k6VmgARgBhAHIAYgAt
AEwAQwBEAFYA5AByAGkALQBMAEMARABMAEMARAAgAGMAbwBsAG8AcgBpzuy37AAgAEwAQwBEAAB0
ZXh0AAAAAENvcHlyaWdodCBBcHBsZSwgSW5jLiwgMjAxMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNSAAEAAAABFs9Y
WVogAAAAAAAAadYAADaxAAAB2FhZWiAAAAAAAABnVAAAuuIAAAlMWFlaIAAAAAAAACWsAAAObgAA
yAljdXJ2AAAAAAAABAAAAAAFAAoADwAUABkAHgAjACgALQAyADYAOwBAAEUASgBPAFQAWQBeAGMA
aABtAHIAdwB8AIEAhgCLAJAAlQCaAJ8AowCoAK0AsgC3ALwAwQDGAMsA0ADVANsA4ADlAOsA8AD2
APsBAQEHAQ0BEwEZAR8BJQErATIBOAE+AUUBTAFSAVkBYAFnAW4BdQF8AYMBiwGSAZoBoQGpAbEB
uQHBAckB0QHZAeEB6QHyAfoCAwIMAhQCHQImAi8COAJBAksCVAJdAmcCcQJ6AoQCjgKYAqICrAK2
AsECywLVAuAC6wL1AwADCwMWAyEDLQM4A0MDTwNaA2YDcgN+A4oDlgOiA64DugPHA9MD4APsA/kE
BgQTBCAELQQ7BEgEVQRjBHEEfgSMBJoEqAS2BMQE0wThBPAE/gUNBRwFKwU6BUkFWAVnBXcFhgWW
BaYFtQXFBdUF5QX2BgYGFgYnBjcGSAZZBmoGewaMBp0GrwbABtEG4wb1BwcHGQcrBz0HTwdhB3QH
hgeZB6wHvwfSB+UH+AgLCB8IMghGCFoIbgiCCJYIqgi+CNII5wj7CRAJJQk6CU8JZAl5CY8JpAm6
Cc8J5Qn7ChEKJwo9ClQKagqBCpgKrgrFCtwK8wsLCyILOQtRC2kLgAuYC7ALyAvhC/kMEgwqDEMM
XAx1DI4MpwzADNkM8w0NDSYNQA1aDXQNjg2pDcMN3g34DhMOLg5JDmQOfw6bDrYO0g7uDwkPJQ9B
D14Peg+WD7MPzw/sEAkQJhBDEGEQfhCbELkQ1xD1ERMRMRFPEW0RjBGqEckR6BIHEiYSRRJkEoQS
oxLDEuMTAxMjE0MTYxODE6QTxRPlFAYUJxRJFGoUixStFM4U8BUSFTQVVhV4FZsVvRXgFgMWJhZJ
FmwWjxayFtYW+hcdF0EXZReJF64X0hf3GBsYQBhlGIoYrxjVGPoZIBlFGWsZkRm3Gd0aBBoqGlEa
dxqeGsUa7BsUGzsbYxuKG7Ib2hwCHCocUhx7HKMczBz1HR4dRx1wHZkdwx3sHhYeQB5qHpQevh7p
HxMfPh9pH5Qfvx/qIBUgQSBsIJggxCDwIRwhSCF1IaEhziH7IiciVSKCIq8i3SMKIzgjZiOUI8Ij
8CQfJE0kfCSrJNolCSU4JWgllyXHJfcmJyZXJocmtyboJxgnSSd6J6sn3CgNKD8ocSiiKNQpBik4
KWspnSnQKgIqNSpoKpsqzysCKzYraSudK9EsBSw5LG4soizXLQwtQS12Last4S4WLkwugi63Lu4v
JC9aL5Evxy/+MDUwbDCkMNsxEjFKMYIxujHyMioyYzKbMtQzDTNGM38zuDPxNCs0ZTSeNNg1EzVN
NYc1wjX9Njc2cjauNuk3JDdgN5w31zgUOFA4jDjIOQU5Qjl/Obw5+To2OnQ6sjrvOy07azuqO+g8
JzxlPKQ84z0iPWE9oT3gPiA+YD6gPuA/IT9hP6I/4kAjQGRApkDnQSlBakGsQe5CMEJyQrVC90M6
Q31DwEQDREdEikTORRJFVUWaRd5GIkZnRqtG8Ec1R3tHwEgFSEtIkUjXSR1JY0mpSfBKN0p9SsRL
DEtTS5pL4kwqTHJMuk0CTUpNk03cTiVObk63TwBPSU+TT91QJ1BxULtRBlFQUZtR5lIxUnxSx1MT
U19TqlP2VEJUj1TbVShVdVXCVg9WXFapVvdXRFeSV+BYL1h9WMtZGllpWbhaB1pWWqZa9VtFW5Vb
5Vw1XIZc1l0nXXhdyV4aXmxevV8PX2Ffs2AFYFdgqmD8YU9homH1YklinGLwY0Njl2PrZEBklGTp
ZT1lkmXnZj1mkmboZz1nk2fpaD9olmjsaUNpmmnxakhqn2r3a09rp2v/bFdsr20IbWBtuW4Sbmtu
xG8eb3hv0XArcIZw4HE6cZVx8HJLcqZzAXNdc7h0FHRwdMx1KHWFdeF2Pnabdvh3VnezeBF4bnjM
eSp5iXnnekZ6pXsEe2N7wnwhfIF84X1BfaF+AX5ifsJ/I3+Ef+WAR4CogQqBa4HNgjCCkoL0g1eD
uoQdhICE44VHhauGDoZyhteHO4efiASIaYjOiTOJmYn+imSKyoswi5aL/IxjjMqNMY2Yjf+OZo7O
jzaPnpAGkG6Q1pE/kaiSEZJ6kuOTTZO2lCCUipT0lV+VyZY0lp+XCpd1l+CYTJi4mSSZkJn8mmia
1ZtCm6+cHJyJnPedZJ3SnkCerp8dn4uf+qBpoNihR6G2oiailqMGo3aj5qRWpMelOKWpphqmi6b9
p26n4KhSqMSpN6mpqhyqj6sCq3Wr6axcrNCtRK24ri2uoa8Wr4uwALB1sOqxYLHWskuywrM4s660
JbSctRO1irYBtnm28Ldot+C4WbjRuUq5wro7urW7LrunvCG8m70VvY++Cr6Evv+/er/1wHDA7MFn
wePCX8Lbw1jD1MRRxM7FS8XIxkbGw8dBx7/IPci8yTrJuco4yrfLNsu2zDXMtc01zbXONs62zzfP
uNA50LrRPNG+0j/SwdNE08bUSdTL1U7V0dZV1tjXXNfg2GTY6Nls2fHadtr724DcBdyK3RDdlt4c
3qLfKd+v4DbgveFE4cziU+Lb42Pj6+Rz5PzlhOYN5pbnH+ep6DLovOlG6dDqW+rl63Dr++yG7RHt
nO4o7rTvQO/M8Fjw5fFy8f/yjPMZ86f0NPTC9VD13vZt9vv3ivgZ+Kj5OPnH+lf65/t3/Af8mP0p
/br+S/7c/23//3BhcmEAAAAAAAMAAAACZmYAAPKnAAANWQAAE9AAAAoOdmNndAAAAAAAAAAAAAMB
AAACAAAAVgEuAesCxANzBCUE6gWhBl8HIQfbCKIJagoyCvwLzwyfDXQOTg8pEAYQ4hHFEqYTiRRv
FVYWRRdXGG0ZhhqgG7oc0h3sHwkgJCFBImAjfSSbJbkm2if6KRsqPitiLIMtqS7PL/MxGDI/M2M0
izWxNtE37jkNOio7RjxiPX4+mj+0QM5B50L+RBhFLkZER1dIa0l8So5LnkyuTb1OzE/aUOZR9FMB
VAxVF1YcVx9YI1knWixbMlw6XUNeS19VYGNhb2J+Y41kn2WxZsVn2mjwaghrIGw5bVNub2+KcKVx
wXLec/t1GHY1d1R4cXmQeq97z3zvfhB/M4BVgXiCnIPBhOaGDIcziFqJgoqpi9OM/I4mj0+QeZGk
ks2T75UPljGXVZh4mZyawZvnnQ2eNZ9coIOhqqLRo/elHKZBp2Woh6moqser5Kz/rhivMLBHsVyy
crOJtJ61sLa8t8O4xrnDuru7rbyavYG+Y79AwBfA6sG5woHDR8QJxMrFhsZBxvvHtMhrySLJ2sqR
y0zMDMzRzZbOWs8ez+LQpNFm0ijS6dOq1GrVKtXr1qvXa9gs2O3Zr9px2zTb+Ny83YHeRt8N39Tg
muFe4iLi6eO15IflX+Y95yPoEOkF6gLrCuwb7TfuW++H8Lrx9PM09Hj1vvcH+FH5nPrm/C79df66
//8AAABWASMBsAJZAxEDsgRbBQoFrQZYBwcHrwhhCRgJywqEC0IMBQzDDYUOSQ8OD9gQohFsEjcT
BxPdFMwVxhbAF70YuBmzGrAbrBynHaQeox+jIKIhoSKiI6QkpyWpJq0nsSi0KboqwSvFLMot0i7Y
L90w3jHdMtwz2jTXNdU20zfPOMo5xTrBO7s8tD2tPqQ/mkCPQYNCd0NqRF1FTkZARzFIIEkQSgBK
8EvcTMVNrE6TT3tQYlFJUjBTGVQBVOlV0la7V6VYj1l6WmVbT1w8XSdeE18BX+5g22HJYrdjpWST
ZYRmgWeCaINpg2qCa4Nsgm2DboNvgnCCcYJygnOCdIF1gHaAd394f3l+en17fHx8fXt+en95gHiB
eIKPg6WEvIXUhuuIA4kaijKLSIxgjXeOjI+kkLqR0JLmk/yVEZYnlz2YUZlmmnybkZyknbqez5/j
oPeiDKMhpDalSqZep3Koh6mbqq6rwazUreeu+rAMsR6yL7NBtFK1Y7Zzt4S4lLmlurW7xLzTveO+
6r/QwK3BisJnw0TEIMT8xdjGs8eOyGnJQ8odyvbLz8ynzX/OVs8t0ATQ2tGx0obTXNQx1QXV29ax
14rYadlL2jLbH9wT3Q/eE98h4DvhYOKT49TlKOaM6ADpiesi7M3uifBR8ij0C/X49+/56vvt/fP/
/wAAACsAxAFLAdgCWwLtA2sD+ASCBRgFogY1BssHYQf9CJsJPgngCocLMgvfDIsNPA3sDp0PUhAL
EMURjhJfEzEUBBTUFaUWeBdNGB8Y9RnKGqEbeBxPHSgeAR7aH7MgjyFqIkYjIyP+JNoluCaWJ3Qo
UCkoKfwq0SulLHktTS4hLvEvwTCRMWAyLjL5M8I0izVTNhg22zefOGE5IjnhOp87XjwbPNc9kz5P
Pw0/0kCaQWNCLELzQ7tEhEVMRhRG20ejSGtJMkn5SsBLh0xPTRZN3E6iT2lQLlD0UbpSf1NFVApU
zlWRVlRXF1faWJ5ZYlooWu5btlyAXUpeFl7kX7NghGFXYixjAmPaZLRlkGZtZ0toK2kLae1q0Gu0
bJZtd25YbzpwG3D9cd9ywXOjdIZ1aXZNdzF4Fnj7eeJ6ynuyfJt9hX5wf1yASYE2giODEoQBhPGF
5oblh+mI7onyivaL+oz+jgKPBpAJkQ2SEJMUlBeVGpYelyGYJJknmiqbLZwxnTSeN587oD6hQaJL
o2OkgaWfpr6n2qj4qharNKxRrW2uiq+nsMSx4LL8tBe1M7ZPt2q4hbmhury71rzxvgy/JsBAwV3C
e8OXxK7Fxsbdx/TJD8ovy1XMhc2+zwbQX9HH00vU4tac2Hfaetym3wnhrOSX59Hrde+P9ED5rP//
AABuZGluAAAAAAAABjYAAKU/AABWZgAAU6IAAKO8AAAlOAAADaUAAFANAABUOQACVHoAAd64AAFZ
mQADAQAAAgAAAAEABAAIABAAGQAlADMARABWAGsAggCaALUA0QDvAQ8BMQFUAXoBoQHKAfUCGwJC
AmoCkwK+AuoDGANHA3cDqQPcBBAERgR9BLYE8AUrBWgFpgXlBiUGaAarBu8HNQd9B8YIEAhcCKkI
9wlICZwJ8gpJCqIK/QtaC7gMGAx6DN4NRA2sDhYOgQ7vD18P0hBGEL0RNhGxEi4SrhMvE7MUORTC
FUsV2BZnFvgXkBgqGMUZYhoBGqEbQhvlHIodMB3WHn8fKB/TIH4hKyHZIogjOSPqJJ0lUSYHJr4n
digwKOwpqSpnKycr6iytLXMuOS8CL8wwmDFkMjMzAzPUNKY1ejZQNyY3/jjXObI6jjtrPEo9Kj4M
Pu4/00C4QaBCiUN0RGBFTUZDRz5IOUk0SjFLMEwwTTFOMk82UDtRQVJJU1NUX1VtVn1XkFilWbxa
11v1XRZeOl9jYI5hvmLyZChlY2agZ99pHmpja61tAG5bb79xLXKldCp1u3dZeQZ6w3yQfmyAXIJb
hGeGhIisit2NGI9WkZuT0pX4mCCaT5yGnsShCKNRpaKn96pTrLKvFbF8s+O2T7i7uym9mcAKwnzE
9cd+yf/Mcc7S0SPTYdWP16zZudu03aLfgOFU4x7k3+aa6E/p/+us7VjvBPCu8lj0BPWx92H5FPrJ
/IP+Qf//AAAAAQAFAAsAFAAgAC8AQQBWAG0AhwCjAMEA4gEFASsBUgF8AakB1wIGAjECXQKLAroC
7AMfA1QDiwPEA/4EOgR3BLcE+AU7BX8FxQYNBlYGogbvBz0HjQfgCDQIiQjhCTsJmQn5ClsKwAsn
C48L+gxoDNgNSg2+DjYOrw8sD6sQLRCyEToRxBJREuETcxQIFKEVOxXYFngXHRfIGHYZJRnYGo0b
RRv+HLsdeh47Hv4fxCCMIVYiIyLxI8MkliVrJkMnHSf6KNkpuyqeK3csTy0qLgcu6C/JMK4xlDJ9
M2k0VzVHNjk3LjgmOSA6HDsaPBs9Hz4lPy1AN0FEQlRDZkR6RY9GkEeUSJhJnkqnS7FMvk3MTt1P
8VEFUhxTN1RRVXBWkFeyWNZZ/VsnXFFdf16vX+FhFWJLY4Vkv2X7ZztofGm/awRsTG2VbuFwMHGB
ctN0KHWAdtt4N3mWevh8XH3DfyyAmIIGg3eE64Zhh9mJVIrRjFCN1I9ZkOCSaZQ9liaYE5oDm/md
8p/vofKj+aYEqBWqKqxErmSwh7KwtN+3EblIu4S9xcALwlTEnsbfyRbLRc1oz33RhNN/1WjXQ9kN
2sncdd4U36LhJOKb5AflZua+6A3pU+qV687tBO4272LwjPGw8tTz8/US9i33R/hh+Xv6kvup/L/9
1v7q//8AAAACAAgAEgAhADMASgBkAIIAogDGAOwBFQFBAXABogHWAgwCPwJ1Aq0C6AMmA2UDqAPs
BDMEfATIBRYFZgW5Bg4GZQa/BxsHegfbCD4IpAkNCXsJ7gpjCtwLWAvXDFsM4g1tDfwOkA8pD8YQ
aREREb0SbxMmE+EUohVnFjIW/RfCGIoZVRolGvgbzhypHYceaR9PIDghJiIXIwwkBiUDJgUnCigU
KSEqMytLLGktiS6tL9Qw/DImM1E0fjWrNtk4CDk3OmU7lTzFPfU/JkBYQYtCwEP2RSxGaEeqSO1K
M0t9TMlOGE9qUL5SFFNtVMdWJFeCWOFaQ1ulXQleb1/WYT5iqWQWZYNm82hlacdrIWx9bdtvPHCh
cgdzb3Tbdkl3unkteqN8G32WfxOAk4IVg5qFIoasiDeJxotWjOqOgJAZkbKTQZS7ljWXspkwmrOc
Np28n0OgzaJao+mleqcNqKOqO6vWrXOvErCzslez/rWmt1C4/bqtvF6+Er/JwYLDPMT0xqzIbMo2
zAHNzs+d0WnTM9T11q7YXdoE25zdJt6k4Bfhd+LM5BjlUOaD56Xov+nL6s/ryOy97aHuhu9Y8Cjw
9PGx8m7zJfPQ9Hv1JPW99lb28PeB+An4kfka+Zv6EvqK+wH7efvl/E38tf0d/YX96f5B/pr+8/9N
/6b//wAAc2YzMgAAAAAAAQxCAAAF3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGxtbW9kAAAA
AAAABhAAAJzHAAAAAMbEvcQAAAAAAAAAAAAAAAAAAAAA/9sAQwACAgICAgECAgICAwICAwMGBAMD
AwMHBQUEBggHCQgIBwgICQoNCwkKDAoICAsPCwwNDg4PDgkLEBEQDhENDg4O/9sAQwECAwMDAwMH
BAQHDgkICQ4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4O
/8AAEQgAtAFPAwEiAAIRAQMRAf/EAB0AAQACAwEBAQEAAAAAAAAAAAAHCAUGCQQCAwH/xABMEAAA
BgICAQIDBQUEBQURAAABAgMEBQYABxESCBMhFCIxCRUXQVgWIzKV1SQzUWFCcYGhtRglQ3W0GSY0
NzhEUldkdneRpbGzwdH/xAAXAQEBAQEAAAAAAAAAAAAAAAAAAgED/8QAKhEBAQABAwMBCAMBAQAA
AAAAAAERAiExEkFRcQNhgZGhscHhItHwMhP/2gAMAwEAAhEDEQA/AO/mfwQ5EMc+3OeN25QYsHDx
0qVBqgkZRZQ4+xClDkRH/IAARybiTNZzcPX9QD8se3A++a2vaa42pkdYl5tklBPDtSM353BQRXM6
UIk2AhvoIqnVTKTj+ITlAPrmycfKP55uL3Z2lj6xjGaoxjGAxjGAxjGAxjGAxjGAxjGAxjGAxjGA
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
KACh1jmOibuJgHkOpzD9Oeffn8sYwP/Z

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://bluedash.net/system/photos/2581/medium/dep.jpg

/9j/4AAQSkZJRgABAQEASABIAAD/4QCMRXhpZgAATU0AKgAAAAgABgEGAAMAAAABAAIAAAESAAMA
AAABAAEAAAEaAAUAAAABAAAAVgEbAAUAAAABAAAAXgEoAAMAAAABAAIAAIdpAAQAAAABAAAAZgAA
AAAAAABIAAAAAQAAAEgAAAABAAKgAgAEAAAAAQAAA9KgAwAEAAAAAQAAAp4AAAAA/+IZ/ElDQ19Q
Uk9GSUxFAAEBAAAZ7GFwcGwCEAAAbW50clJHQiBYWVogB9sABgAZAAEADwAYYWNzcEFQUEwAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARZGVzYwAAAVAAAABiZHNjbQAAAbQAAAJCY3BydAAA
A/gAAADQd3RwdAAABMgAAAAUclhZWgAABNwAAAAUZ1hZWgAABPAAAAAUYlhZWgAABQQAAAAUclRS
QwAABRgAAAgMYWFyZwAADSQAAAAgdmNndAAADUQAAAYSbmRpbgAAE1gAAAY+Y2hhZAAAGZgAAAAs
bW1vZAAAGcQAAAAoYlRSQwAABRgAAAgMZ1RSQwAABRgAAAgMYWFiZwAADSQAAAAgYWFnZwAADSQA
AAAgZGVzYwAAAAAAAAAIRGlzcGxheQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG1sdWMAAAAAAAAA
EgAAAAxubE5MAAAAFgAAAOhkYURLAAAAHAAAAP5wbFBMAAAAEgAAARplblVTAAAAEgAAASxuYk5P
AAAAEgAAAT5mckZSAAAAFgAAAVBwdEJSAAAAGAAAAWZwdFBUAAAAFgAAAX56aENOAAAADAAAAZRl
c0VTAAAAEgAAAaBqYUpQAAAADgAAAbJydVJVAAAAJAAAAcBzdlNFAAAAEAAAAeR6aFRXAAAADgAA
AfRkZURFAAAAEAAAAgJmaUZJAAAAEAAAAhJpdElUAAAAFAAAAiJrb0tSAAAADAAAAjYASwBsAGUA
dQByAGUAbgAtAEwAQwBEAEwAQwBEAC0AZgBhAHIAdgBlAHMAawDmAHIAbQBLAG8AbABvAHIAIABM
AEMARABDAG8AbABvAHIAIABMAEMARABGAGEAcgBnAGUALQBMAEMARABMAEMARAAgAGMAbwB1AGwA
ZQB1AHIATABDAEQAIABDAG8AbABvAHIAaQBkAG8ATABDAEQAIABhACAAQwBvAHIAZQBzX2mCcgAg
AEwAQwBEAEwAQwBEACAAYwBvAGwAbwByMKsw6TD8ACAATABDAEQEJgQyBDUEQgQ9BD4EOQAgBBYE
GgAtBDQEOARBBD8EOwQ1BDkARgDkAHIAZwAtAEwAQwBEX2mCcm2yZnaYb3k6VmgARgBhAHIAYgAt
AEwAQwBEAFYA5AByAGkALQBMAEMARABMAEMARAAgAGMAbwBsAG8AcgBpzuy37AAgAEwAQwBEAAB0
ZXh0AAAAAENvcHlyaWdodCBBcHBsZSwgSW5jLiwgMjAxMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNSAAEAAAABFs9Y
WVogAAAAAAAAadYAADaxAAAB2FhZWiAAAAAAAABnVAAAuuIAAAlMWFlaIAAAAAAAACWsAAAObgAA
yAljdXJ2AAAAAAAABAAAAAAFAAoADwAUABkAHgAjACgALQAyADYAOwBAAEUASgBPAFQAWQBeAGMA
aABtAHIAdwB8AIEAhgCLAJAAlQCaAJ8AowCoAK0AsgC3ALwAwQDGAMsA0ADVANsA4ADlAOsA8AD2
APsBAQEHAQ0BEwEZAR8BJQErATIBOAE+AUUBTAFSAVkBYAFnAW4BdQF8AYMBiwGSAZoBoQGpAbEB
uQHBAckB0QHZAeEB6QHyAfoCAwIMAhQCHQImAi8COAJBAksCVAJdAmcCcQJ6AoQCjgKYAqICrAK2
AsECywLVAuAC6wL1AwADCwMWAyEDLQM4A0MDTwNaA2YDcgN+A4oDlgOiA64DugPHA9MD4APsA/kE
BgQTBCAELQQ7BEgEVQRjBHEEfgSMBJoEqAS2BMQE0wThBPAE/gUNBRwFKwU6BUkFWAVnBXcFhgWW
BaYFtQXFBdUF5QX2BgYGFgYnBjcGSAZZBmoGewaMBp0GrwbABtEG4wb1BwcHGQcrBz0HTwdhB3QH
hgeZB6wHvwfSB+UH+AgLCB8IMghGCFoIbgiCCJYIqgi+CNII5wj7CRAJJQk6CU8JZAl5CY8JpAm6
Cc8J5Qn7ChEKJwo9ClQKagqBCpgKrgrFCtwK8wsLCyILOQtRC2kLgAuYC7ALyAvhC/kMEgwqDEMM
XAx1DI4MpwzADNkM8w0NDSYNQA1aDXQNjg2pDcMN3g34DhMOLg5JDmQOfw6bDrYO0g7uDwkPJQ9B
D14Peg+WD7MPzw/sEAkQJhBDEGEQfhCbELkQ1xD1ERMRMRFPEW0RjBGqEckR6BIHEiYSRRJkEoQS
oxLDEuMTAxMjE0MTYxODE6QTxRPlFAYUJxRJFGoUixStFM4U8BUSFTQVVhV4FZsVvRXgFgMWJhZJ
FmwWjxayFtYW+hcdF0EXZReJF64X0hf3GBsYQBhlGIoYrxjVGPoZIBlFGWsZkRm3Gd0aBBoqGlEa
dxqeGsUa7BsUGzsbYxuKG7Ib2hwCHCocUhx7HKMczBz1HR4dRx1wHZkdwx3sHhYeQB5qHpQevh7p
HxMfPh9pH5Qfvx/qIBUgQSBsIJggxCDwIRwhSCF1IaEhziH7IiciVSKCIq8i3SMKIzgjZiOUI8Ij
8CQfJE0kfCSrJNolCSU4JWgllyXHJfcmJyZXJocmtyboJxgnSSd6J6sn3CgNKD8ocSiiKNQpBik4
KWspnSnQKgIqNSpoKpsqzysCKzYraSudK9EsBSw5LG4soizXLQwtQS12Last4S4WLkwugi63Lu4v
JC9aL5Evxy/+MDUwbDCkMNsxEjFKMYIxujHyMioyYzKbMtQzDTNGM38zuDPxNCs0ZTSeNNg1EzVN
NYc1wjX9Njc2cjauNuk3JDdgN5w31zgUOFA4jDjIOQU5Qjl/Obw5+To2OnQ6sjrvOy07azuqO+g8
JzxlPKQ84z0iPWE9oT3gPiA+YD6gPuA/IT9hP6I/4kAjQGRApkDnQSlBakGsQe5CMEJyQrVC90M6
Q31DwEQDREdEikTORRJFVUWaRd5GIkZnRqtG8Ec1R3tHwEgFSEtIkUjXSR1JY0mpSfBKN0p9SsRL
DEtTS5pL4kwqTHJMuk0CTUpNk03cTiVObk63TwBPSU+TT91QJ1BxULtRBlFQUZtR5lIxUnxSx1MT
U19TqlP2VEJUj1TbVShVdVXCVg9WXFapVvdXRFeSV+BYL1h9WMtZGllpWbhaB1pWWqZa9VtFW5Vb
5Vw1XIZc1l0nXXhdyV4aXmxevV8PX2Ffs2AFYFdgqmD8YU9homH1YklinGLwY0Njl2PrZEBklGTp
ZT1lkmXnZj1mkmboZz1nk2fpaD9olmjsaUNpmmnxakhqn2r3a09rp2v/bFdsr20IbWBtuW4Sbmtu
xG8eb3hv0XArcIZw4HE6cZVx8HJLcqZzAXNdc7h0FHRwdMx1KHWFdeF2Pnabdvh3VnezeBF4bnjM
eSp5iXnnekZ6pXsEe2N7wnwhfIF84X1BfaF+AX5ifsJ/I3+Ef+WAR4CogQqBa4HNgjCCkoL0g1eD
uoQdhICE44VHhauGDoZyhteHO4efiASIaYjOiTOJmYn+imSKyoswi5aL/IxjjMqNMY2Yjf+OZo7O
jzaPnpAGkG6Q1pE/kaiSEZJ6kuOTTZO2lCCUipT0lV+VyZY0lp+XCpd1l+CYTJi4mSSZkJn8mmia
1ZtCm6+cHJyJnPedZJ3SnkCerp8dn4uf+qBpoNihR6G2oiailqMGo3aj5qRWpMelOKWpphqmi6b9
p26n4KhSqMSpN6mpqhyqj6sCq3Wr6axcrNCtRK24ri2uoa8Wr4uwALB1sOqxYLHWskuywrM4s660
JbSctRO1irYBtnm28Ldot+C4WbjRuUq5wro7urW7LrunvCG8m70VvY++Cr6Evv+/er/1wHDA7MFn
wePCX8Lbw1jD1MRRxM7FS8XIxkbGw8dBx7/IPci8yTrJuco4yrfLNsu2zDXMtc01zbXONs62zzfP
uNA50LrRPNG+0j/SwdNE08bUSdTL1U7V0dZV1tjXXNfg2GTY6Nls2fHadtr724DcBdyK3RDdlt4c
3qLfKd+v4DbgveFE4cziU+Lb42Pj6+Rz5PzlhOYN5pbnH+ep6DLovOlG6dDqW+rl63Dr++yG7RHt
nO4o7rTvQO/M8Fjw5fFy8f/yjPMZ86f0NPTC9VD13vZt9vv3ivgZ+Kj5OPnH+lf65/t3/Af8mP0p
/br+S/7c/23//3BhcmEAAAAAAAMAAAACZmYAAPKnAAANWQAAE9AAAAoOdmNndAAAAAAAAAAAAAMB
AAACAAAAVgEuAesCxANzBCUE6gWhBl8HIQfbCKIJagoyCvwLzwyfDXQOTg8pEAYQ4hHFEqYTiRRv
FVYWRRdXGG0ZhhqgG7oc0h3sHwkgJCFBImAjfSSbJbkm2if6KRsqPitiLIMtqS7PL/MxGDI/M2M0
izWxNtE37jkNOio7RjxiPX4+mj+0QM5B50L+RBhFLkZER1dIa0l8So5LnkyuTb1OzE/aUOZR9FMB
VAxVF1YcVx9YI1knWixbMlw6XUNeS19VYGNhb2J+Y41kn2WxZsVn2mjwaghrIGw5bVNub2+KcKVx
wXLec/t1GHY1d1R4cXmQeq97z3zvfhB/M4BVgXiCnIPBhOaGDIcziFqJgoqpi9OM/I4mj0+QeZGk
ks2T75UPljGXVZh4mZyawZvnnQ2eNZ9coIOhqqLRo/elHKZBp2Woh6moqser5Kz/rhivMLBHsVyy
crOJtJ61sLa8t8O4xrnDuru7rbyavYG+Y79AwBfA6sG5woHDR8QJxMrFhsZBxvvHtMhrySLJ2sqR
y0zMDMzRzZbOWs8ez+LQpNFm0ijS6dOq1GrVKtXr1qvXa9gs2O3Zr9px2zTb+Ny83YHeRt8N39Tg
muFe4iLi6eO15IflX+Y95yPoEOkF6gLrCuwb7TfuW++H8Lrx9PM09Hj1vvcH+FH5nPrm/C79df66
//8AAABWASMBsAJZAxEDsgRbBQoFrQZYBwcHrwhhCRgJywqEC0IMBQzDDYUOSQ8OD9gQohFsEjcT
BxPdFMwVxhbAF70YuBmzGrAbrBynHaQeox+jIKIhoSKiI6QkpyWpJq0nsSi0KboqwSvFLMot0i7Y
L90w3jHdMtwz2jTXNdU20zfPOMo5xTrBO7s8tD2tPqQ/mkCPQYNCd0NqRF1FTkZARzFIIEkQSgBK
8EvcTMVNrE6TT3tQYlFJUjBTGVQBVOlV0la7V6VYj1l6WmVbT1w8XSdeE18BX+5g22HJYrdjpWST
ZYRmgWeCaINpg2qCa4Nsgm2DboNvgnCCcYJygnOCdIF1gHaAd394f3l+en17fHx8fXt+en95gHiB
eIKPg6WEvIXUhuuIA4kaijKLSIxgjXeOjI+kkLqR0JLmk/yVEZYnlz2YUZlmmnybkZyknbqez5/j
oPeiDKMhpDalSqZep3Koh6mbqq6rwazUreeu+rAMsR6yL7NBtFK1Y7Zzt4S4lLmlurW7xLzTveO+
6r/QwK3BisJnw0TEIMT8xdjGs8eOyGnJQ8odyvbLz8ynzX/OVs8t0ATQ2tGx0obTXNQx1QXV29ax
14rYadlL2jLbH9wT3Q/eE98h4DvhYOKT49TlKOaM6ADpiesi7M3uifBR8ij0C/X49+/56vvt/fP/
/wAAACsAxAFLAdgCWwLtA2sD+ASCBRgFogY1BssHYQf9CJsJPgngCocLMgvfDIsNPA3sDp0PUhAL
EMURjhJfEzEUBBTUFaUWeBdNGB8Y9RnKGqEbeBxPHSgeAR7aH7MgjyFqIkYjIyP+JNoluCaWJ3Qo
UCkoKfwq0SulLHktTS4hLvEvwTCRMWAyLjL5M8I0izVTNhg22zefOGE5IjnhOp87XjwbPNc9kz5P
Pw0/0kCaQWNCLELzQ7tEhEVMRhRG20ejSGtJMkn5SsBLh0xPTRZN3E6iT2lQLlD0UbpSf1NFVApU
zlWRVlRXF1faWJ5ZYlooWu5btlyAXUpeFl7kX7NghGFXYixjAmPaZLRlkGZtZ0toK2kLae1q0Gu0
bJZtd25YbzpwG3D9cd9ywXOjdIZ1aXZNdzF4Fnj7eeJ6ynuyfJt9hX5wf1yASYE2giODEoQBhPGF
5oblh+mI7onyivaL+oz+jgKPBpAJkQ2SEJMUlBeVGpYelyGYJJknmiqbLZwxnTSeN587oD6hQaJL
o2OkgaWfpr6n2qj4qharNKxRrW2uiq+nsMSx4LL8tBe1M7ZPt2q4hbmhury71rzxvgy/JsBAwV3C
e8OXxK7Fxsbdx/TJD8ovy1XMhc2+zwbQX9HH00vU4tac2Hfaetym3wnhrOSX59Hrde+P9ED5rP//
AABuZGluAAAAAAAABjYAAKU/AABWZgAAU6IAAKO8AAAlOAAADaUAAFANAABUOQACVHoAAd64AAFZ
mQADAQAAAgAAAAEABAAIABAAGQAlADMARABWAGsAggCaALUA0QDvAQ8BMQFUAXoBoQHKAfUCGwJC
AmoCkwK+AuoDGANHA3cDqQPcBBAERgR9BLYE8AUrBWgFpgXlBiUGaAarBu8HNQd9B8YIEAhcCKkI
9wlICZwJ8gpJCqIK/QtaC7gMGAx6DN4NRA2sDhYOgQ7vD18P0hBGEL0RNhGxEi4SrhMvE7MUORTC
FUsV2BZnFvgXkBgqGMUZYhoBGqEbQhvlHIodMB3WHn8fKB/TIH4hKyHZIogjOSPqJJ0lUSYHJr4n
digwKOwpqSpnKycr6iytLXMuOS8CL8wwmDFkMjMzAzPUNKY1ejZQNyY3/jjXObI6jjtrPEo9Kj4M
Pu4/00C4QaBCiUN0RGBFTUZDRz5IOUk0SjFLMEwwTTFOMk82UDtRQVJJU1NUX1VtVn1XkFilWbxa
11v1XRZeOl9jYI5hvmLyZChlY2agZ99pHmpja61tAG5bb79xLXKldCp1u3dZeQZ6w3yQfmyAXIJb
hGeGhIisit2NGI9WkZuT0pX4mCCaT5yGnsShCKNRpaKn96pTrLKvFbF8s+O2T7i7uym9mcAKwnzE
9cd+yf/Mcc7S0SPTYdWP16zZudu03aLfgOFU4x7k3+aa6E/p/+us7VjvBPCu8lj0BPWx92H5FPrJ
/IP+Qf//AAAAAQAFAAsAFAAgAC8AQQBWAG0AhwCjAMEA4gEFASsBUgF8AakB1wIGAjECXQKLAroC
7AMfA1QDiwPEA/4EOgR3BLcE+AU7BX8FxQYNBlYGogbvBz0HjQfgCDQIiQjhCTsJmQn5ClsKwAsn
C48L+gxoDNgNSg2+DjYOrw8sD6sQLRCyEToRxBJREuETcxQIFKEVOxXYFngXHRfIGHYZJRnYGo0b
RRv+HLsdeh47Hv4fxCCMIVYiIyLxI8MkliVrJkMnHSf6KNkpuyqeK3csTy0qLgcu6C/JMK4xlDJ9
M2k0VzVHNjk3LjgmOSA6HDsaPBs9Hz4lPy1AN0FEQlRDZkR6RY9GkEeUSJhJnkqnS7FMvk3MTt1P
8VEFUhxTN1RRVXBWkFeyWNZZ/VsnXFFdf16vX+FhFWJLY4Vkv2X7ZztofGm/awRsTG2VbuFwMHGB
ctN0KHWAdtt4N3mWevh8XH3DfyyAmIIGg3eE64Zhh9mJVIrRjFCN1I9ZkOCSaZQ9liaYE5oDm/md
8p/vofKj+aYEqBWqKqxErmSwh7KwtN+3EblIu4S9xcALwlTEnsbfyRbLRc1oz33RhNN/1WjXQ9kN
2sncdd4U36LhJOKb5AflZua+6A3pU+qV687tBO4272LwjPGw8tTz8/US9i33R/hh+Xv6kvup/L/9
1v7q//8AAAACAAgAEgAhADMASgBkAIIAogDGAOwBFQFBAXABogHWAgwCPwJ1Aq0C6AMmA2UDqAPs
BDMEfATIBRYFZgW5Bg4GZQa/BxsHegfbCD4IpAkNCXsJ7gpjCtwLWAvXDFsM4g1tDfwOkA8pD8YQ
aREREb0SbxMmE+EUohVnFjIW/RfCGIoZVRolGvgbzhypHYceaR9PIDghJiIXIwwkBiUDJgUnCigU
KSEqMytLLGktiS6tL9Qw/DImM1E0fjWrNtk4CDk3OmU7lTzFPfU/JkBYQYtCwEP2RSxGaEeqSO1K
M0t9TMlOGE9qUL5SFFNtVMdWJFeCWOFaQ1ulXQleb1/WYT5iqWQWZYNm82hlacdrIWx9bdtvPHCh
cgdzb3Tbdkl3unkteqN8G32WfxOAk4IVg5qFIoasiDeJxotWjOqOgJAZkbKTQZS7ljWXspkwmrOc
Np28n0OgzaJao+mleqcNqKOqO6vWrXOvErCzslez/rWmt1C4/bqtvF6+Er/JwYLDPMT0xqzIbMo2
zAHNzs+d0WnTM9T11q7YXdoE25zdJt6k4Bfhd+LM5BjlUOaD56Xov+nL6s/ryOy97aHuhu9Y8Cjw
9PGx8m7zJfPQ9Hv1JPW99lb28PeB+An4kfka+Zv6EvqK+wH7efvl/E38tf0d/YX96f5B/pr+8/9N
/6b//wAAc2YzMgAAAAAAAQxCAAAF3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGxtbW9kAAAA
AAAABhAAAJzHAAAAAMbEvcQAAAAAAAAAAAAAAAAAAAAA/9sAQwACAQEBAQECAQEBAgICAgIEAwIC
AgIFBAQDBAYFBgYGBQYGBgcJCAYHCQcGBggLCAkKCgoKCgYICwwLCgwJCgoK/9sAQwECAgICAgIF
AwMFCgcGBwoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK
/8AAEQgBXgH/AwEiAAIRAQMRAf/EAB4AAQACAgMBAQEAAAAAAAAAAAAFBgQHAQIIAwkK/8QAZhAA
AQMCAwMEDgQJBgkIBwkBAQIDBAAFBgcREhMhCBUWMRQXIlFSVVaRkpOV0dLTCUFTYSMyM1RxlJay
4SRXY3SBsyU1NkJDc6Gi8BgZJkdidaPVREVkZXKxwzc4RkhmdoOlwbT/xAAaAQEBAQEBAQEAAAAA
AAAAAAAAAQIDBAUG/8QAMxEBAQEAAQEGBAQFAwUAAAAAAAERAiEDBBIxQVEUYYGRInGx8AUTMkKh
IzNSYsHR4fH/2gAMAwEAAhEDEQA/AP2EzMxJjVb1ts+E7yqG7OfcXKmpZS44EICTsNhwFIUra/GI
OgSdB9YxsH4wxvBw5fG8UTOcZlo21RXy0GlPp3RWlCwgBO0CNCUgagg6A1IojzMTXFuw263MSn90
uR/KZW5S2lBSkq2tlR2tVpAAH1niKko+AsdQ46modhtKWwdVhF6Omp753PWfvoKRhjEObNvvlnm4
ixcbjFub26lxVQWm20FYKkrYKAFAJ04hZXqOOoNZWLbvmjecUTomFcWOWuLAZbS0liG06px1SQsr
cLqVao47ISnZ6idrvTWG8KYlukmW5acKW1py3T3oSiu8kaLRs7WwN0dEnaHVp+ivvfcF4oiQZF9v
OHba41GjLckFm8bThaSCpQA3SQrgD3JNBk4RxNcbxhiBdLtsIlPxkqkJaJCNviCU6/UdNR9xFSPO
n9IfSNQVtXc7vcG7Jh6Ey672MXtH5QYQhtKkp69lXHVQAGnf4itN4W+kK5ImMs/3+S5YeUngJePm
rgzBYw5IxA+w7OkOtb1DcVbsRLUolHH8EtWhIHWQKD0Dzp/SH0jTnT+kPpGq3cLzJtBmx7pFCJEB
0NvMsvhxKlFKFJ2V6DUELTxIGmp16qysQt3vCMcTMVzMOWxohRDtxxShhPclIVxW0BwKkg97aHfF
BNc6f0h9I050/pD6RqEmm92lmFLukeEY1w17DkwLkJCV9wXAeCE9yUgkKGoOn3iu9piYqxGy7LsF
thuR2pK2C5Lum5UpaCArRIbVw1OmpI106u+Exzmftv8AeNDcyP8APPpGohNuxk9aF3qFDssmMhlb
odjYjDgUEg67JDOh/FI6+sVXMQ5jNYQdjx8YXDDtqfkw25QYn4qQhTbK+CXHNGSGkE6jbWUpJBAJ
0Na4cOXK5xmpefHhN5L1zmftv94050/pD6RqNRhnNR8AtYPgr2kBSdnESDqD1H8l1ffXc4Qza+vB
EIa9X/SFPyqyvmz+dP6Q+kac5n7b/eNYHQ/Nv6sEQ/u/6QJ4/wDhV1ThbNZQ1RgyCTrs9ziFHX3v
yVBI85n7b/eNOcz9t/vGsA4SzaKtOhMLq8oU/K+6ukrDWaUFhcqbhG3stITqtx3EaEpSO+SWuFB9
MTYkk2jDVyvEV1O9h22RIb3hJTtIaUsajUcNQNfurUjPLCvamI8dzLLZltw2Dcm5eJY0fdvrft7R
2eKgpGxPbcJ17jTZV4VbZVhLNdWjasEwCFcCFX9BB4dWm648Nax3cvcwpXCTlnZXQdpA3t1ZXrqA
FJ4sfWEgEfWEgHqGjcq9FcwNyjrLjfE9ww61Zn4aLc65vpci6xlJLKH5TC17KFlSFhcVw7pQC9gh
emgVs9IecOLLrYmpcaLbIUlWDJF9kLnqd3MXbWRDQvRST3SEuKXxB7g6EVNwcncVW62SLPb8orIz
ElOPLlMt3ZoB5bpXvVLO51UpW2sEk66KI6jpWSjLTHra5DicsbQTKYbYkbV5bUHWmwQ22oFnQpSF
EBPV3R4caIoWF+Urcr5jOy22dNsTFsuFugrlHsoh1KpFrcnrlpWXNkRmy2WTqD3RJKwRsmSyzz4u
WMsaXLDt+lWmM1+FNtbbeUh6MtE+TDTGkbSztPLEffpCQk7JUAkhO2bW3lrj9nZDOVtkRsRzHSEX
JgbLROpaGjHBBPEo/FJ46a13awDmIp52WxlzZ9t14OPOovDO044kbIUpQY1UoDuQo8QOFBU7XnPe
rzku7jBjEVhN9aamqCIJD7Dqo8pbJ3bS5LZUDspHdOpAU4NTxAMLjblK4xsGXuGseWexQH2rlBjS
bgWlOSQ4461HWmM0hC0uNFwuuBLriSBuk6pO8BrYJyqxr2Cq2OZR4f7FUCFRjOj7o6kEgo7H2eJA
J4cSAesCvq7l7mLIfalSctbOtxhwOMPLuzKlNLCdApJLGqVAcARoQOGulSb+g07iDlV5q2RvEzb2
Grcy5YHw7JechPuogtET9iOsIe/lDi+xGPwrZCUiWVFBDZ1msO8pzFV555cds9uDyYTi7RaUuOCR
ElC4JgNRph2j3Tri0uDRKCEpUNFabVbCTlljZ6PsoyqsK2lyRKKRcI5Qp7r32m40Ln17f4331zKy
6x2/J3svLWzKfVJblFary0Frda/EdUdzqpSNeCjrs/VpWtopV35W+HbO27Jdw5KdZauU+KFpu0VD
ikQl7uS4WlL2m17Q/BR1fhXgdUgaGu45V9lbQuRPwfcokdN1ixRLkzmN3uHpEmOmUvYUpTaA7FcT
skbZ22yQkE7NzVl1jpyWXFZZWNTzryZClKurBWtxHBLpO41K06gBfWn6iK+j2XuYr5QX8tbS5u3Q
40XLqyrYWCSFDVjgoFRII4gqOnWal6jWMzlo2JuN0gRYZbduhw35c5nftPvuslnbj7JaWQy5tBW8
aXqpsaE9dSuJ+UrdomD5OJMN4VX2V0djPQbVci5vV3WZIUxDiKDQUSk7txxZSCrdgKA+qry1l/mK
ylxpnLW0IDy1reSi7sgOKWNFqUAx3RUOCieKh1618YmXGOrGVvQMsrNDC1Nle5vLTY1QnYRoAyAn
ZT3I000B0HXU9SdK1vE5b+F0WOHdLjhO4Fa7MiTcG2JrCVxpXY8hx2NuXFpcGwqI+2pxQCEEJCiN
Tsy155Tbgwnb8TYbw72TLOIX4FzsXO0ZTwaZRK3jjTwc3akbUY7LvFKtlSQCoECy3TJa+T3LpNu+
UNicXdYnY91fdvLYU+wAe4UrdAhOhOoBGuup1qRh4Dx+YrK7dlzZUshoBjcXdkIDfEgJ2WNAnuid
Bw7o981TynRr6LyujIQ4pnLS4SSby/EjIiXuLtKYQ7CaQ+4HFp3alrnMAN8TptK10A1jL1ywL8zE
Ycw/gl2ZKut6gwrVbyVLU0HYyFu71TRIUUuK0BToNnjoa2u3gDMdt5x5nLi0BxZBcWm7tBSyNANS
GNTpspA16tkadQ07owNme2QWsvrYCg7Sdm9tgpI+saM8D99XoNUo5atnEm5XNWHVu21ppldvbRd4
qXindznXlvKLmyyvdwzsR1aOFR2fr1TJP8sXDkS/Kt0/Bt1jW5EgoVepM+MhpDe9kMh1be3vEJ3k
ZaSCNUg7RA00q/Kyzx64hxpeVVjUl94POpVcWCHHQdQ4objulg8Qo6kHjrX2XgLM5ZUpzLq2KKtd
Sq8tnXUknXVnjxJP6ST9ZqTp5rs9GtIPLGtF0szWIrRhObMQ/HVsW5mawl1Djbk4OlTq1hGwEQVq
A2Qruk8OOgn8f8pKx4Qwuu9RLTcVvukNw+cmFW+MpxUZ2QkmTJ2GVJCGla7KlanZSOKgatEbLfMS
E0GIWV9mYbHU2xdGUJHDTqSwB1Ej+09+u0vAOZk+N2DPy4tchnVJ3Mi8NOIJSdR3KmSOBAI4cNKl
2kyNY2bln2mfapC1YKubkqE9DiPPPS2IUWRLdZK3Al2QtKW0JKToVE7SVII69K+tv5X8F18tqwtO
mdmS0Ktsdh5ph/cPdjIjt7txzaefU6+ErS3wbTos8Ou+XbJ3FV9cQ7esnrDLWh9p5KpFxZUStoKD
ZVqx3ewFKCQrUDXgKzTgHMwympy8urYp6O4pcd83doraWRoVJVudUkgAEggkDQ1dS9fJrlnll2O7
xo1xwdl/ertDloSY0tM6NGQ4VKdQAA64FaB1h9snTQFlR48AezfLIsFwkzolgwBfpq4bsZppRdZY
Q+66wHykLcUEp2UEHXU7Q1Keoa32z5V48w/ao1jsmV9qjQ4bQbisIvSNG0gkgDVknrUo9fWonrJr
6jLvMVElU9OWVnD6kJQp8XRkLUlPBKSrcakDUgDXQa8KfkdNUvDvKihXjEcSzTcLOxI9yxELXb5y
rq0sd1DjyWi62nVTa3N+Epb6jsk7XUDsrnRX2n+8aiRlvmGZaLh2sLN2Qg6okc6M7xB2djUK3GoO
yAnUHq4dXCsrodm35DQ/2gT8miTfVm86f0h9I050/pD6RrB6IZu+REH9oE/Jr4z8P5m2uE9crnhS
2x40dpTsh9/EiEIaQkaqUpRa0SABqSeAFFSnOn9IfSNOdP6Q+kag7m1jLDqormJ8NNxY8x0tMSY1
yRITvNhSwlQCUkapQrQjUcNDpqKwbpikW9mQ8002tMOIZU+RJmNxo0Jga6uvvukIaTwOmupOh4aA
mgtXOn9IfSNOcz9t/vGoDC7eM8bWKNijB1qsl2tk1veQ7jbMVsyGH0a6bSHG2ylQ1B4gms7ozmmZ
PYZwdA3uxtbvpGja2erXTda6UEjzmftv94050/pD6RrAOEc2yNTgmFp/+4U/Krq3hfNR7aDODYCt
lRSrZxCg6HvfkqCR50/pD6Rpzp/SH0jWAMHZuacMEQv2gT8mueiGbvkRB/aBPyaDO50/pD6Rpzp/
SH0jWD0Qzd8iIP7QJ+TTohm75EQf2gT8mgzudP6Q+kac6f0h9I1g9EM3fIiD+0Cfk06IZu+REH9o
E/JoM7nT+kPpGnOn9IfSNYPRDN3yIg/tAn5NOiGbvkRB/aBPyaDO50/pD6Rrs1eHWVhxmQpKtOsK
NRjuFs2WGy6cAMOhPWiPfW1LP6ApCQT9xUKjYV9ZnMF1O8aIWpt1p5BQ404k6KQtJ4pUCNCKCtnG
gwxiWNcXHwyhyA+1vFrCU7RWyoDU/XoknT7q0tccqsZzOXfYuWBO5XOIbpYbRZLnBj5a3Wa2m221
cqOGg9ESxsIJ1Gqi+lbnE6OadzWwsysS4qw5ZYYwZaYE26XO9xLbERdnnURmlPKVq87ukqWpKEpU
dlIBUdBqkaqFQteZGfTVxVIxVgTB7dsgYxjYeuRt1wnKkPKeWwjsxjeMhCG0mS0dy4SshLn4Qdzq
FxxJjE44wBi/BUHF7VtfvF4lBqcmToWSVMqDidlQVw2OBBHH66k7ZmDJseXD2EZ+YkrEMrm95ns+
4vtKkPlSCkDRHX16DXaUfrJqncpPNPFOTWUUnMDBmFId6uDN1tkVu3zUyt2puTOYjuLPYjLzuqEO
qWNEFOqRtlCNpQ0lyaeXZnxnNm/h3L/GmReH7Jbru28qZcYIv+9jlFuVKGz2XbmWuLqQ33a09yeG
q9EUHqqViiNZbsEXJYRGmWaREfK3NhKgpTe0jU/WU7X/AAK/MrL/AOiSicmLlYYAxRlNiq44otkH
MC1Ygm4kudnt6UW2JFfdUqMZG/L7TiUhOuykpkBxtOyktEj9HseY5w/lvg64Y5xY8+i3W1pLkoxY
a5DmilpbSENNgqcUVrSAlIJJNUFfLN5O7K19l4rkx0s4hNkdelWR5tDcsLLSwSpPFCHUqaW4naCH
E7KtOBIbLuuJ3b3bb9fGUlwOyQttTfdBQQ0yCQR16bJHDvGtC8t/k1W3lbZ55e5q2/E2HLcjDayz
iGdJDL02REFzt8xtDCX2H46igRX9EvIKCp1OoUNdmZtvLxyalMzblKh32PAjLIhuptDzsmYgojOI
WiK2guBK0SQoa6aJTqQARpMOcsnINOGcSY0i3u5yrXhOEmbeZkLDsh5IjF9bCnmwlG06hDrTiFlI
7ktqJGg1q5chfVcMqLJgjKfLTBeQ2WL7y7HhKEuNb0SJokOoaS04NVrSANSpw9QSkagJSAAB9r9j
p9FovOBhju7YadkXJ1Td1scphmdFSpaFh1gyGnWwogEAqbWnQnh9YlMOXdjE9ngXq3sSGWbjHaeY
amxVMPJS4ApIcbUNptWhGqSNR1HjWqbPy1srpFki4nxTHlWe3XQuuWNa3m5kmTDacebcmvR45UuG
wksLUVOnUDrAUFJGdkPTWLyP7FceStyd2spL1nNcMSPMRZXcTbhHXFhbbshzdxA3HZWlCt6FLDm2
S5rskJ0TWbmvyOk5iZoZj4kueLbjdcL5k2K2qlWe1YxjQ21Pxrc3GZZc2n0qCG1oK9NkoUHFAgnr
7x+W/wAnabc2bNBxbOdlyHUJZZTYpA2mluNNNSdSjQR3HHmkId6lFfVoCR1wryyMpMZZe4ixxYYs
6RIwphZN6vlqTCILQMZMhUZEhSQy46kLQlQCu5Kweo617/4f/EO8/wAO7Xl2nY5tmdZ6bLs9rLJZ
Xi793Dsf4h2c7PtNyXel/wAX3l9ljxbyPseHLOx4Xyz5VaLNcLTlPAweqU3jZ+EJO6h3Npxx3sYk
lQclRVNOhW21unFJ0VptY8PJrlQ2fMqx2/D+ePY1gbxHdL5c7o7nRMlNtoeuNufbhLZeQVyD2Im4
Q0tnZYRtiSCHCltNXwny68h8R4diXi5Ln2+TIsbt2ctwt3ZJajIkPsJJeaG7JdVGeLSSUqcCCAAr
RJ6TOXryd4t7RBRc58i3uwkOMXaLZHnESJK1shMRlsI3jzgQ8Fr2RogJUDqrhXi5c+XPtOXO+fK7
fz3f1erjw48eE4TykyflmN53bBeIcV4klv3vFVsahXPE+HYkpLuLG5CmbFamRMVo4pQW4t+eXWlE
hK1trClAfVri7clbHt9v4mDEuW9qjN5k3q820w8WOrVa2J1ytk1FyYSI7aROQmFLYLY0T/hBZ3+y
XEOdn+ULl50YaxfbW5b8B7FSrAiS/b1xmy+2p0SHUqdSNtlpLEhSnEgg7lSU6nSte4W+kKypxvds
OWvB2Br1cVYmk3Rm3hgxlKC4inktpUlKlBK5JZO6bUpKyVhOilhaEyW+jfk3rhDKvMex8p+fyhpe
M8Aby5IKpqWsWuqddafZtcddvKiwNqPE7ClyWCdN47L2ShjaddV3tGW+L7fk3mNlPPYy+XDxbiTE
VwtzELHaUqZbmyWnYxBft7rTToK5DitWnUocbb2Q4FqKKPk1n3Y84lNxo2GXrZJcsiLl2O9JZf3a
ey34jzC1NgbD7L7Cm3G1AFJVp1hQF/3SPAb9Ae6s2TPpiSfrqmYw5JOIsT4ZyesDGcthgz8AczRb
td4uKg4wI0RFsXIchRnmVKjPuKgLYQtp1tQbfdUpSt+tsUbD30e2Ora9ZHrdygbBZnIeMkzGX42I
Yz6rJbGU2/RbATDaDlxkqgq30pvsdSkyXQ4Xt4vXdu5b+yT6A91N0z4CPQHurRnTFFy75Nua+Dct
VZcWfNPB+G5KI90uNpnWHEIeiW68iwxrRDkaOJStRdfM25O/gyEurTqXFgrX95uQfKKxDiNITymk
YdsL7EBmZHi503WbKRDQbeH4CHlobO92o858XEFMhzs0MKCEJ2hcd2jq3aPQHupu0H/Ro/tQPdS7
fMyZig3bIjlhO2qXZWOVraZ7Llms7I7IzRuER52ZHt8qK643IYb247QfcizFDZcdkuRlJccS25sJ
72rITlQZd4queJbLypLXd4j+HL63Cs1uxUiFHVeJ82e92a/HW2UOa9lR3iUuIU0uKpCCtKtFXvYR
9mj0B7q53bf2aPRHup5zqZI1tjrk08oDCWY92zLyfz8ssm33iFacLnCMLGjtrfjYet8qGYi0XEFZ
ae2E3JTy22gvZuTgQpxTTYqZ5PWXHKzwVmTcr7mln5ab7Fi2pi1Fy75lyHot7Qu32htbzcINlqNu
HmbksP8AB+S46d4G0r2hb90j7NHoCud0jwG/QHupOkXl1UXBvJMzcwjKtmHVcrp97D8XDse1EM5p
T2ZERsO2N2TutgJB2+w7o22rVKmG5SEoKUqUEVjHPIZ5QmM8uVYMPLehpnu2FyCu/wBzxrOnzGlS
GbMJgbdW4haWnHrfIWGwoI0dSNju16bh3bf2aPRHurjdt/U2j0B7qzx45mF5W39/Jqy48kflCWfG
aJ+FOUhZptosNiRZ7MHs17nb5NxtmtrPYGrTbhteyqC6tcplx52QVISvRJOzZLfycuUvaL5Ex0jl
ut3S+xWWlPM3HMGe3a5khHcKK4TSt0htbXApSOClqWO7CFpuO6Z8BHoD3VxukeA36A91W9bpOkxr
jD/Js5WtwwBbrfjPli2qNf4DT6jcbTmHMS5KdQbkqCJD6W0OyGmlS4oU26VhQjHa29dFXPlQZL52
5zR7dYbNyoMPz7Sq+OSZsOXeuZURGxLhPx1FMNLnOIZQxKb3D5QhxUlKlH8GKk92gf6NHoD3Vzu2
/s0eiPdV85ieutTWnk+8s5MCzZfYn5VjV1Qhqa7e8UTsyyYjq3JDAW32ElgKkokR0SEiO8rdxTJU
ttxZQ2hOTbuT/wAr/ATdsgYO5U1vYYYuFqtclFtxs5Iju2pbm4lviLJ3bUBcO3rUiOI5WXpDLLzi
ddU1s/doHHdo9AU3aOrdo9Ae6k6TF87rXV75L/KxasV5kYV5ezqLpc7S+ylNwzFlPMIdcKlrDQKN
I+pSy2l1A2mUbRQNSsOSJ5Nuf712tl9vHK3Vd2Yl1ssmTZ7nmlLQlxmA7Y1hG3HabSHVdi3dTjgQ
A+ZbaXBskhu67pHgN+gPdXG7R17tHoD3U3rou3JMi4syqyqVg/O3OO0X65s3uc7CuTmJ1TpK4Tjx
WwJL72xvHwk6KLbbbfBISgaHXaPTzAvljafaLXxV553SPAb9Ae6m6R4DfoD3U3R6G6eYF8sbT7Ra
+KnTzAvljafaLXxV553SPAb9Ae6m6R4DfoD3UHoXp7gTywtXtFr4q56eYF8sbT7Ra+KvPO7b+zR6
I91N239mj0R7qD0N08wL5Y2n2i18VOnmBfLG0+0WvirzzukeA36A91cbtA/0aPQHuoPQ/TzAvlja
faLXxU6eYF8sbT7Ra+KvPO7b+zR6I91N239mj0R7qD0N08wL5Y2n2i18VaO5bGAbbnvh2x2yI7hz
F1ghS5XSTAVzxibWxeWnoymm1mQ1taKYWrbCFpKTtFXBaEGordt/Zo9Ee6m7b+zR6I91BYHmGcK5
HYHwBJuOFzcrS6yiRb8IEiDFQiM+ndsIUtSw0jaQgKWdVaAkAq0Fexbgq05pYEuuAJuJbdZ5z18t
d6tMq+ROyLdKfgutupiS29pO8ZUpobSNoEhZKeKdK5SNn8QBOvXsgDWudVAFO0dPrFBh8nvJ7E2D
cyrrc80M0LVbozWLHsTW4ZeYr7Ast0cmRUMPQZVuUsq0YcjpfC9oh1b6lnQlxFWi94OvicS3mbhz
GOCUouN3dnPXk3wsXSZHW5HVzeX0JK4yNhtxreNqPcbvRIIJqC3SPAb9Ae6uC20Pxm0egPdQd79Y
M67JaHJ7Od0W8vsxmkyI1vxk407ck/ycBhOpSI27LbxMhB3jod7oDjpLZZYQxzhzFWHsU4gzwtgj
NtuPX+1MYhbHZEpxltKlu9yUvklJB4p0KEqSriRUNumddN0j0B7qbpo8dyj0B7qkmJnTHoVGPMDg
d1jG0+0Wvirt08wL5Y2n2i18VeeC0yOtpHoD3VzuWfsm/RHuqq9DdPMC+WNp9otfFTp5gXyxtPtF
r4q88bpn7NHqx7q53LP2Tfoj3UHobp5gXyxtPtFr4qdPMC+WNp9otfFXnncs/ZN+iPdTcs/ZN+iP
dQehunmBfLG0+0Wvip08wL5Y2n2i18VeeN0z9mj1Y91N0z9mj1Y91B6CfzDwEyyp53GdpShKdVHn
Bo8P7FVpa/X6PeMVXa/W5hSGJ0wOMJUNkqSltDe2QeIKtja0PHQjXjUOlDaDtIQkEdRSkA1zqrwz
QUHFmJcC49s5w9jXLGZdYBfbeVDnx2HG1ONnaQop3uh0PHjw7+tVux4E5OOGLsi/Ye5OUeHNZuCZ
0eWxb2A4xITpsrbJeO7A2QQhOiBp+LV45pc/NVerNOaXPzVXqzQRGMr5gDMewLwljvKqVerY7IYf
Xb7hFYdaU6y6l5pezvfxkOIQtJ+pSQfqqt4Lyy5NGW+I4WK8Bcl+FZrrASoW+fbrPHbeYCmSwoIO
94atEt//AAnSp/MzB99xJl/eLBh2C2qfMgLaiCSstt7w6aFStDoB1nTj9QrUVi5NmdMHLDtePCDF
U5elzJT0a7uKbdQEtllP4qVo2HQpzRJ0OwlPEE0nuN43LMOwXeE5bLzgK4So7mgdjSo0dxC9FBQ1
Spwg6KSDx6iAfqqFnRcnLpcVXy45ARZEpVwM9Ux/D8FazKOzq/tFWu8Oyklf4xKQSdQKyrVhXFDF
ls8Vc1MNyJGaRcY6IYkpfKUJSQlxRSUakE7QBPddXCtbYmyAzTufKEXmxAmo5qRHVHahJuK23jqw
Uh1KPyY0JKeKgrVRVpoOK/1E6xfbXAyVscFMGycnmDDjBS1JZi4cgNN7StNsgJIGp0Gp+vQa9VY+
DrPk9l/iy/43wllHcId0xOGk3uQA2oPoa2t22G1PFCEJ21dylIHHj1ADU8Dkm51sYMVZxi/se4ld
sR2VGujgDbbDbxUptzYLhUhxxoJ3gJVugVEhKa2XgTKHHdiwvFssrH91twiOvNsRY0eNKSlgPK3O
q5Dbq9d1sApCyE9QPDWr090l1eVZpRgkOqwjegD1KLbIB/t3tVc2rI9cx+5Hk724yZNwbnyX+jcA
rdloKiiQo7WpcBWshfXqtR61HWtYTyezHw1mhesxFR48hi6NPJi216agKjLTrsKWtEcBYeJBIQQW
thO0XeOzL53Za5iY8ssKyYHlwYR37vZsqchxWwhxhcclKE6bWyh5xzrB2m2wBoSU5vkvydb/AIC5
PuJp1suV0yAIctN9VeoYhQY8ZBnkpUZDiWnUh1e0hBJXrqUjXWp6BLyxtomtW3JEMC5Q0RLg3Hss
NAlR0I2EtOJSvRaEoASEkEBIA6hpWurhk7nTPzXtOO3rFbREgyGXHYse/uJ2/wCTIZdB0QjuQpO2
jgsrACHNEgVX8G8lTNmy2O+WC7T2dm9SYaGZfZ5kdiR23kqWooWNVOBO2RskEnQa6FWl6y4Nt3SD
ktdXnXbzyfYchx8umQqTh6Coulx3fOFWqu6KnAHCTrqvuuvjXxRZMiGg+G+TnbG+ymmW5Oxhm3pL
qGdjdJUQrUhG7Rs+DsJ000FaovnJbzwWjD7WHcQhDUG0li4t88uxCZHZLr6FIDaVIXsq3XdEJVrs
kE7HDeOHcHP2NqahzeumXc35ZKtpRTvCDs8QOrTqHCmSSj5yMS4Fk21izuZYShFjXBE+PHaix20t
SkO75L6Qh0bLgcJXtDiSTrrtHXCu92ymVL6U3XJND8uMH1pmKskJbyd8Sp4hW3rqsqUVcdVFRJ4k
62Hmlz81V6s1hYitLvMcoJjL1LCh+Ie9QYGEr7lnhRAm4IyodtiH4LLCTboMZlPY6CtbTYSlwBKQ
XXFaADVTilHUkmpvtrwtNeil40/+Bj5tYWGLYXMN25SGVKHYDHFKdeptIquZqZY4/wAV3WwXfAmK
V2d60PyHH1d0OyEuJbSG1J3awpOiV6ggHiNCONLRb+2zA8lrv6DHza5Ga0M9WFLwderRtj5taPXk
zyurLbodrs2ar8qQ+mO1LuUm7FxEYtRpKVOqQ7FJUlbxjLKUd0rQoJQBvDdl5eZmTm5Ee7S3tZCr
dBU+3cSopiIeU/LfBCG/wi9oNABCVbKR9Q1Nyp6r2c1Ip1/6I3nq1/Js9Xf/ACvVTtpwwQeiN50V
+Lq2zx/R+FrUWKcg84r5dJMmz4kj25hWKZVxhNi8zVmMh0Rdh4dwNVtll8BgktESlcRs6GTw/lHm
7Ax7fMV3qXb5MS9tSEP29F6mpAS6UqbQj8EA32OEllCkBJWh1S1bKkhJzPJWye2nE0J6I3nufxju
2eH6fwvCuRmnGAGmEL1xGo/BM8R3/wArWq38mM5ZuDsF2B6dAYuGGH4K5V0ZvUpSpSWm0h5KiqPt
K3hHAk8eBWFDaQqu3zks54XM3eRDzRksuT32XIaX7s+6G3vw5XIdUllG2W98gNIQlH5BBUeAFVN6
a3sM1Ix6sI3r8XX8kz1d/wDK9VcHNeEOvCl4GvVqhj5taMunJazwk3u4zLdms8mJLuSno0eXcJO2
0sl0icpbSBtOtlxISwAEFLaUqV3INWy8Zb5+zZMy54exe1bTPZmuiI7IOkSUuR+BJ0ZcDiBFShsJ
BSGnCpzRz8WitjdtmB5LXf0GPm07a8E66YUvHAcdEMcP/FrUz+UXKqNtlFrOVpMpy2rZioSlOwy7
+DLayoxNVKBC0Lc0G0lRKUoUe5+N+yX5U96uTtwbzXtUdUeU5ItI3Dy247io8htGiNyCEp3raSlS
nNsoLuoUAgp1G4BmrDP4uE7x1/U2x82nbXgeS149Wx82tXX7JbOjGeD5GFLtj563ypFrh25++MOu
KdLYccekvNhndaPKVuGgr8GdlC1fXobzhez5gRrDbomL4dukz2ozTdylw33Qh1wJSHHUJU0NNo7a
gk9XAa/WGYJjtsQfJS7+gx82pPCmMbbiwSEQo0lh6KpIfjymwlSQoHZI2VEEHQ9R+o1Gi1L11EVf
oGu+XUJbWLr00WVamNFISE8SAp4E/o4jz0FmKVK6kH7qEFKtCkgg6aGvrc7ZLl22TEjsrS49Gcbb
UUKAClIIB4DXrI6uNaPw/wAnzlRWFu0QXM8pkqHbIdvYLCLq4yXEsSojjqVFMXRYW0iU0FEbQSpC
VbW0opDdg2lnRCdT3hQIcI292SBxJ0rUmXmXXKolYXEPNjFbj67s7ERKabuKN7bWd4wqSdWozYUp
SW3gkIWd2HtnVzXbTOYjyvzWxFLgXy3z+bp5xTc5sp1d1fAhxHorsWO200hKm3igbh7YXspC0K0I
UomlmVJdX/cvbRTuVaga7Oyda4DbhAVu1aE8Dp1/dWjnOTZyhXsuo+B28YQo+5uTstst3+4qLC1w
+x0rDpbDi90+OzkoJ2VOOKbIASFm/R8E5tpzDmYwftVqdjXDDUa3S4hxBM2C+iQ6pb6G+x9hBLS0
p1SEkqGh4AGkz9/kv7/yuhZfBUksqBTxUnZOqf096hZe01LK+Cdo9yeA7/6PvrRR5MPKAewnZsPN
5lOwnrZeHZTDzN6fcajtOTFvfk+x0FxxtkpbRosN8SA2lI7r4jknZ/IDQgZyzYS2sS9lwnlXB58w
4/8AJ9t5Sd2kPyXNy5w7hsB5eoO2rSTrRvotuoVoptQIGpBTpoO/TXhrp/ZWnsKZF8ofDWDXcNxM
dMx7glEqXAuBmyJTTM0wo8VtS98nbUHHey5ak7KkNrcToFlPHNuWVnKxuN1lJt+cQtluebaEdtL6
ZEhhIDGqQ4qEAXAUv7TxBDoeR+Da3fGjah4jqNChe3sbJ172nGtTycs+WUp9xULOC2Ng3CO8ytbZ
JQkRkocTsiLsqZD4Lm60C3QspU6nQa/PBuS3KSw1bJWE77mK1PssmBFgQ48NakLgIMhtUl7bW2HF
uBvf6KC9TvEjZGwDTNG3O7PUmudFeAaNtYhVMAfssZtguK1U3JWpSU93s6JLYBP5Phrw2lcTsjay
+xnfrjr9A+6p0ERf71Bw3aX71cwsMsJG0G0bSlEkJCUj6ySQB+mq+M2IBSFDCt44/wDYY+bUpmtD
WrBjjSmVArnRAkFJGp7IQdPv4An+w1Fs2pxTSSY6/wAUf5hqjntrwfJa8egx82uTmnFTxVhC8p/S
0yP/AKtcOWhwtqT2GtWqSCnZI2uHVrpwrQmAOThnpha24lizGLcxIv0dpluTBu6lbpG9Up4FKkDQ
rbOxtJIOqirUaDQN9qzUiIOw5hK8pPeLbA/+rRGacRX4mELyf0Ns/NqpZc5bYzwtlxHwlKuDcKdF
eWETGmFTUqaKtpI0dIOoSQjiSe4CuO1VS5QOQeZ2ZmL8PXzCU9lmNZUhyS2/McYMlW3qUJCARrqE
L1Xon8GBrqdUvWDbYzTibO0nCF5I14kNs6f3tcHNaEDs9FLx6DHza0bP5MmbdyveIrq5eg2m587L
trSritQb7KdZSlC1aFaNWg+TsEoQFpCdFKUBZ8qMjszcI2iXar1mJdWC48y8JLC2pi5DpaJfUrsl
tYQN6rQbIQVBAJSPrTLBswZpRVILgwjeikdag2zoP7d7XXtrwfJS8a//AAMfNrWt2ySzCl5vWjH7
VxVJh2ptpiSmU4w29P12dqQAiPsNFrZ0DZ4ubxzZU13O1Z8wMKY9xHl1ItVggQ493kBslLjyy03s
OBwgK2RtE7CU8dB3ZOvDiM6rJ21IZ6sIXjr+ptn5tcjNOITwwheePDUNs/NrR2NOT9nxe8OWixRm
7S87bWV9kTI91ei793soyUFCdlKkJJUpCiXCUaJcQCoaV9P+Txmw3m1fMxRDjLh3CJKTEtnO5XsO
utOo0IcTsFHdIABHDTU/ijWddTY3avNKK3oHcH3od7aaZH/1a69teF1jCd4H37DHza0DduSdnFDw
ZHsGGcUIels3svyHFzXIaX4xgIjrTtNhSiVLU9olYICSonQr1rbOWmW9/wALQGnMQynZMw2mLEfK
5K39FMqe47SkjXUOJGvX3IGg0FWfv7LcWbtrwPJa8erY+bTtrwjwGFbx6DHza7c0K/N1+rNE2lQW
kmOr8Yf5hFBjQM6LPc21uwsL3lSUOqbKi0wNVJJB0/C8RqCK+5zXgg6HCt49Bj5tVmwYduN4wXMt
9suD8J2Q9JDMxhhKyjV1ehAWCNCOGumoB1HEA1K4OwhdcO4ZhWS8XSRcJEaMhtyW61snUJA2dUpG
0BpoFKG0ocVEkmg9Xdo/KP8Am5s36imnaPyj/m5s36imrVSgqvaOyh/m5s/6kmuO0dlEevLiz/qS
atdKCqjI/KEf9XFn/Uk1wcjcoT/1c2f9STVrpQVTtHZRfzc2f9RTXPaPyj/m5s36imrVSgqvaPyj
/m5s36imnaPyj/m5s36imrVSgqnaOyi/m5s/6imnaOyi14Zc2f8AUk1a6UFVOR+UJ49rmz/qSado
/KEf9XFn/Uk1aqUFV7R+Uf8ANzZv1FNdXMjcoXE7K8trMoHrBgpq2UoKixkPkzFbDMXLCxtIB1CG
rehI8wFfTtHZQ/zc2f8AUk1aqUFU7R2UX1Zb2j9STQZHZQj/AKuLP+pJq10oKr2jsof5ubP+pJp2
jsof5ubP+pJq1UoKp2jsov5ubP8AqSa57R+UWuva5s/6kmrVSgqnaOyi/m5s/wCopoMjsovry4s/
6kmrXSgqvaOyi117XNn/AFJNcdo7KH6subP+pJq10oKocjsof5t7P+pJrntHZQ/zc2f9STVqpQVX
tH5R/wA3Nm/UU18xkTk4l8Sk5Y2QOgEB0QEBQB6xrprpwFW6lBV+0rlR5AWv9VFO0rlR5AWv9VFW
ilBVhkrlRpp2v7X+qiue0rlR5AWv9VFWilBVzktlSRp0Atf6qKdpXKjyAtf6qKtFKCr9pXKjyAtf
6qKdpXKnyAtf6qKtFKCr9pXKjyAtf6qKdpXKjyAtf6qKtFKCrdpbKkf9X9q6/wA1FQNoyqyykwEP
KwJbFErcGpY7zih3/urYyvq/TVYsSFN2xCD1hx3+9WaCJ7UmWA49AbXx/wDZ/wCNcLykyySnbVl/
bQknQKMc6H+3WrEoajSvM2MeQ7mzLzqxtnvlryiZuGL1iq7PrYRbUbttMLmlpiOy+Q2VvqRNYae4
kpbaLiWwC64FBvF7J/J+W4lEnLqyOrb0WgOxEqKNdRtDU8NeI1+4iu6coMpl6BGXlnPD6oo99eaI
fIB5RapcvGMrlGQ2cT3G+sT1XWSJNzcgtRkwOwI6HX0pVI7HMZ7VawgSC6FuJ2lLrYvJZyS5VmWO
LVXPPPPk4rtPRdEJMGTeZE11ual8r3yVKjR0bOwVJK1pcdVqhO2EoO3u8eM9RtMZO5Tka9rq0/qv
8a86/SwYRs+AeQPjrFeWNsRh++RxbxBu9mUqPJjlU5hKthxBCk6pKknQ8QSK9XJ7of21oH6TuzDE
HIkxfaSnXeuQOH6JjRrXd5L2/DfLZ+rn22zsuWe1fhkrNzlTDr5Q2ORx8qpfzKHNrlUBX/3hcd8D
pp0pmfV//JXoPK7CDGX2Y9kxw5A2xabk3JKREQ9rs6/6NakpV19RUnq1CgQCNuYyxpycL6k3WDya
Grhd1rR2XccTq7Ndlkuo3zjjqnipSlNJKEBQUpo7J3izqVfpOU7vx5STs5Y+Jx5dtZt5Y8QdtnlU
a6/8oTHX6elMv5lcJzd5UyxqnlDY6Oo14Yql9/8A1nf181eyMy5PJrvuA5OHMtuTHCstyVAMOHcp
jKZDrQ3iQZC3d53b6mk/jbA2HFKKTsnSp295kZMYngxY2Jsn5l1U29pGZu7TEmLYmOxA0lmCyVhO
yh1DThBCA6hGysbSlrVn/Qz/AGv0X/Vl/reG+2zypzx/5QmOuH/6pl/Mrg5t8qYf/mFx11/XimX8
yvclslcjFhi43Jzk1aPOyWVt2qTCafQprTYWy07vQWtrTeqc4KSVFCNfxq1HmxgHA+LMwJ+IMvcF
iyWiRuzFtm6QgMkNpC9Et6pSkrCiBqSAeJJ1Na4/D8uWXhiW9tJvje8PoXsOR8yeRBCxLm62vE16
OLLqy5dL88uVIU0lxGwguOEqKUg6Aa6CvWJyeyqPVl3aP1QVoT6IvD6cNcj5i2BGyBiq5LA/Spuv
T9fne8TjO35ZOmvtdhbex42+eK12ncqepOXVp1+6JXByfyp2g2curTta6bJicfurBz7y0xBmzgSP
hHDOL37DKbxPZbkbpFIDrTUO5xpbqW9UqTtrbZUhO2lSNVjaBTrXl638gvl12jAq8roXLKBtKlSW
HXlXSehT8Z9UjQltppBaWy08EBLTqEPuBL7umwlo8Oufv5Or1eMnsqFHQZd2jgeP8l/jRWTOUziC
25lxZ1JI0KVQwQapPJYyrz5yuZvsbOjMVq9xZaoHMERF5mT1W5DUYNPN76S21qhSkpUkBG2e6U4t
aldztyrZJelSeSk4jyiynsuFrhKg5a2Zkx7e842GoQSElKCRoB1dVSGAsrMq8R4Nt19nZbWYOyoq
XHAmCnTU1JY2QXMG3ZsdZtcgf+EqsvKD/wCzOyf1BH/+1FYWeWeeUnJpyoveeWeuPYGGcJ4chmVe
b3cnCGozeoSOCQVLUpSkpShIKlKUlKQSQK0RyQ/ph+RFy2cdOZb5O4txLDu/RpzEMBnF2CLhZmrl
aUOtNKnRnpbSGnmgt5oahWv4QcOvSE+nO5FGcXL6+jjxjyf8hEwH8WrnWy7We13SQGWLmuFLbfMR
S1EJQXEpUElRCdoJCikEqH50cpHJz6aPlr4Vzws0zkx5vWHAeJsjTFtmVuM7lYXItsxSq729fYdl
MZSHVQURmFlCnNlWiVBevca4vLJb5414Zc6v2+v+YeBsLQk3LEuM7Rb45liKHp1yZZQXyNQ0FLUB
t6cdnXXT6qzZWILHCkPRpl5iNOx4++fbdkoSptrXTbUCdQn7zwr8V+Wv9Dy9kpj3Lt7KP6N295u5
RIyOvtqlZfWXESZT1jx9cG07V8eRcJQJWsIaQqQhSigs7QAUhAVRMx/o+PpV8ksGt4OkckXEual3
xxyBU5T3S7YexTAULDeRcn5O7kuSXk70MRiy0Ngq3hSEtqVpqNenRnH7rzsfYJtTjTFxxjao65D7
LLCX7k0guOPfkkJBUNpS/wDNA4q+rWtVctn6Qnkq/R54Ww3jXlYZiOYatOK8Rt2O0Tk2qRJQZim1
OAOblCt0gJQolatEgA6mvwbzv5C+cefmeedfJhwryCr9jrN2Pktk1ZsO4nTcIsVnLi5NWaGmY/If
cfTs7QYW3tMh38isEpB1V+n/ANMp9HnmRy48ueTFkBesAz8Z2S05r28ZpT4UhKTDthtT8WRcFKWt
CiEuLCxs6qJ04HiKec2e+H5+2/4en4f0jnJEuPLXmfR8W7NFL+aNuw1z7crIzb3lMRYe6Q9tOStn
cpVunG17BVtbK0nTQ1tezZlZfYjtT1+sGOrNOhR5G4flwrqy6027wGwpaVFIVxHck68a/EXBn0JX
Lg5EPKbvmNMA4XkZ6367clTF1vv2O8RaIt+IcRylOxoVqdaflb0JEBmKzoVJSrw0g9zpGzfRJ/SL
XjIXP3D1t5EmMLOjMPLvAqGsOiw4fsMefeId/hOzxHg2qTuGkNspkFC3Nl9TYUpZCl6FOqTz6v6J
5OZ2XsSzS8RyseWVu32+WuLOnuXVhLMd5B0U04sr2ULB60qII71faTj/AARCskPE0vGVqat1wcbR
Anu3JpLElS/xEtuFWysq0OgSTrpwr8Nc9PoteV1kPj3lAZT8lbkANXLJTEue2BblYbIjD9rviY9n
YtM5u4z7Vb7rLEZ6Sl9xDauygUfhUnTRO0jz9iPkg5ycivKXJq6cuzktRMQ4FwzjXM3m/J7MfMGz
2dYblxoioVzaZ35iPJaJ2lNsbWytJ2Ed0javhnXr6b+nRZH9JF3zFwDh23Rbtf8AHFohRJ0gMQpU
u5stNyHTrohClKAWrgeAJPCvrcsbYRtE1u23XFFujSHpbUVuPInNIWt9zUttBKlAlatDsp6zpwBr
+cDAv0a/K25RPJO5MWZ1yyIx3jjKiTydLphtdnwZYbHdbnYbpIvk98y24V8W21GL7C2VJnsEPI2E
7KkgAK2BnV9CZyrM0svM7sb4i5H2Mb7jyLg7J2HlJesQ3yK7ekrhsR2L2lL8eSlpT7TDaWnXDpxb
1bUfxiskvn64kuz6b+j9/FY+wQLNOxGcYWrm+2PONXKdzi1uYjjZ0cQ65tbLakngQogg9elde2Hg
XmVnEysa2jm9+I5LYnc5s7lxhA1U6le1slAHEqB0A6zX4Wcpv6Gflf4Q7c2XvJU5MV3iZSwuU9hX
FlpwHbH4MpvEVgYtTzUpyLDuTyo84tSVIWqNL7l07OoWEaDvkl9CzmVmFmRkng/NnkdZi3HKOzXP
M64XSxZnN2eHzU9PtcRcAJh2mRuobDlwaWWo7ZUELSSQlBGi5Js/fSE69H7NXHllcm608ouyclGd
mpCTjzEeEl4mstmS26pEq1pdDRkJkBO54rICUFe2ocUgjjW0EKKiNT1/dX4NciX6LflEZHZq8kLO
blSfRnXvHybBljcMM4yaS9b35mGr0ziV9203GUl2SkbuNBUyW1tlRS33IG0gIr95Ea696l4yXJff
9Ut6/Z9aUpRopSlApSlApSlApSlApSlApSlApSlApSlApSlApSlApSlApSlBwvXZ4VRru5mhaZi4
dgwDDuEYKUW3zeA0SConiCjr41eq42RrrQa853zr/mlhftCn4Kc751/zSQv2hT8FbE0HeFNB3hQa
753zr/mlhftCn4K451zq/mkhftCn4K2LoO8KaDvCg10LtnWBp2pYX7Qp+CqPykct8+M+MmLzlVa8
HW2ySbolncXR+cmYhhTbyHNVM6t7wEJKdNtOmoOvDQ790HeFdSk68P8A5VePK8eWxLJZlfmz/wA0
/wArb+drC/7Hj/zCn/NPcrf+dvC/7HD/AMwr9Jt399Nj/jWu/wAZ3j/k4/Ddl7PzZ/5p7lb/AM7e
F/2OH/mFD9E/yt/52cL/ALHj/wAwr9Jtj/jWmx/xrV+M7x/yPhuy9n5s/wDNP8rb+drC/wCx4/8A
MKD6J7lcEa9tjC/7Hj/zCv0m2P8AjWm7++s/F95/5Hw3ZezzryVMn+UByccoWMs71hy14hkt3GTK
Xco0pMBCg6oEJDO07psgAa7Z1PHQdVbI53zr/mlhftCn4K2GEpA00orZT9Qrjy5Xndvm68eM4zI1
3ztnV/NJC/aFPwVzzvnX/NJC/aFPwVsTQd4U0HeFRprrnXOr+aSF+0KfgrnnfOv+aWF+0KfgrYmg
7wpoO8KDWtxl5z3K3yLc9lTESiQwtpSk4hRqkKSU6juPvq35eWWbh7BVtsdyQEvxYiW3UhQIBH3i
prYT3q5oI/pFh4jQ3yH+to99dRfsNcdLzB4/+0t++ono9YAdFWC3/qDfw1QsKZw5fYvzPn5RW/Ku
8MXizqkKvXZmGmm48BlKtI7y39dhxEoaqY3RWpQSvbS2W1gE6tqHEGHVfjXuEfuMpHvob/hxR7q9
wjw/Oke+tFSeWJyVrLje84Hxtcbdhp2z4iFjEzEcSJGZmztkKUhlO2p7YAUk71xtttQIUlaknWsh
3liciGOm1LlZ3YEZ57dW3a0vqbbU/slAUoBSAUoBca7tQCfwrZB0WnVOOzodW7OfMNA7QvUHX6v5
S3w/212OIcOk6m+Qjp1ayke+tHYm5WHJyw1JtjwtwnWi4WRi8ycTQ7RHTbbdb31uJYkPuvqbVo5u
H1pQ0lxzdsOOFAQnaqRt/Ke5Idzj3GXFzQwiG7Uyt64KeZS1uWkKQhbp22wS2lbiWysapC9pGu0l
QDw9NVt84gw6V7RvkLXTTUyke+nP+G+s3qF1cf5S3761llbnbycc7blMs+VWJ7DfJVujIeuMeHbS
FxErWpCUuhbSd2vVJ/Bq0WBoSnQgm6psFgV1WC3/AKg38NMkEwu/4bUeN6hcevWU3x/21wq+4aI0
56gka66dkt9ff66iej+H/ENv9nt/DTo/h/xDb/Z7fw0Tql+f8N9RvcI8eAMlv313Yu1jkuBiLdIr
i1nght9BKv7AeNQvR/D/AIht/s9v4aJstnjSo70azQ2lplN7LjURCVDuh1EDUUMiyFpGp7kaHr4d
dYr12scVwsSLpFbWjgULfQCn+wnhX3mktwnXUK0UltRB7x0rXtjwRFmWSFMXBaUp6Ey6tSmkkqUp
CVKUSRxJJJJ+smiryb7hvQJ55hcOr+Uo4f7a5TiGwDrvsP8AWke+vJ/Kk5YeBeSxmS1lniHJW+3p
+VhyLdYlwtSY6YylOz1xnI7i1jRgtR2ZMwuOaIU3GcQklzZSrGtX0gXJQvDjyYcDEoRFD4lynsLI
bjMOoblOtMqfU7uduQ3DkLZIWUOBI1WkqApx/Fchenm9d9JMP+PIf60j306SYf8AHkP9aR768evf
SMcj9jDAxgqPijsF5O7gLODFJVOloUymRCZSpQK5Mcvt71B2QnUhKlkaVnZw8svLDI7E0mVjbLuS
jA1ut9lkXfHCH2kmGu6IkqiJMBxtL7iSY4QopVtoU8jVvZS4pNk1Nj1p0kw/48h/rSPfTpJh/wAe
Q/1pHvrxo/8ASN8lkQ2LnHw9iViLzi1FmzLzhZUJmOQqP2WAshW+cjNymHVtoBC0uJ3a11OTeXLy
Y7d/gufZsVN4gEhEdeDzg1RuweU+Y5RuAopOy/sMqWFlCVvsgq/CJNTLuLszXq/pJh/x5D/Wke+n
STD/AI8h/rSPfXjhX0kPI9SuDETAxgZtxjtPR7YMBumUlL+x2GVta6pEnbG6PUTwWWuGs1lzy1Mi
MyscQMEQcv8AF1vXeMRJs1muF2wy0zFlSewo8pxJcLn4JbZkoZU2dXCsKKErQCtKS3yL0erekVgP
BN8hknq0lI99ZoOvEVQUZfw1FP8Ag5ggkcCwj3VYMvd6MJRmluFW6cebTtHXRKXlpSP0AAD9AoJ6
lKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUC
lKUFROKbWf8AQXH2HM+VXBxTa9Nks3LTvGyy+H/hVblDQa6nz1rbPe/com0v2eJkLYbRKL6nTdpN
4hrfSwneMIQEpTIZOuy4851q13Gzw2takupbinYr5MnJbxxj53NHFuWE+fiJxR0vEhN537TZ1247
agobqOsklcdGy04dCtCiBp8blyVOSJdbyjEUzJFKbgmPFjGfFttzYfXHjxexGmFuN7KlshjRstqJ
QsJTthRSkiIw1mt9IBih6Uqdkbb7C61JLERU5CXWm0KEYqU42iWC+UnfhK0OJBChqNQay8w84uXd
arxDj4PyBsrsd+1xXpr6HHZaIDqnCHQo7xlbygNlO5aQdn8IsuKCUhWpb0kW7EvmHycOS9mqLWnM
DKZ24os1vjwoDS4F0bQI8dW1HbcS3speDS9VN7wLLaipSSCokw2OORvyRcwUXN295W3JuVdTJL8+
ILu262X1KcWlscUJb3y1PhjZLIeJd3e2So9MR5q/SF2xiEu2ZGYZeRIcS/PmfhV9gMqedaEUMJkl
ch0bDTqnUlKd2+dEbTeyftmVnxyu8uMF4YvVxyssb1wvl5REfh29iRKfZccdUGopYS4AlJbGqpYd
WElJJZAPBtk/JOup/KrIrk+ZL393F2XuA7nFu8i3dhS7rKZusuRIaLgdWXFv7e0tbgC1uHu1qSCo
nQVfhiu1/Y3H2JL+VWn+3Py67NcFt3nIGDdEJhpC+aYu6Sh9yMFNbBcmnep7IUW3tdncJZ2gXN6N
nYHJezBzkzLy9XinOLCCLLJkSUKtrQt64i3I6mGlEqZcedUnZdU62laikuJQlZbRtbNL5nSRYelN
r+pm4+xJfyqdKbZ9jcfYcz5VWxKevievv120H3+eoqo9KbZ9jcfYcz5VcsYht8ydHjNNTQtcpvQu
2mS0n8bXipbYSP7TVt0H3+esS66Blrj/AOks/X/2xQV+bmdYHIrrCYNyKi2pI0t6+J0IrAw1mBZr
fh23wJltuSXWILLbqeb1HRSUJBGoPfFV9dpcK1KCB+Mf/nXHNDngDzUEliZvJnGa7g5i3Llu5m7W
1u3XTs/D4d7LiNuLcRHd2gdtsLcWoIPDVaj9ZqowchORpbMOScJW/k3WNu3TFhcqKMJpKXVBLyEq
JPHVKZDyUnXVIcUE6VOc0OeAPNTmhzwB5qJkUO1cj/kUWnF93xezku4s3a0xbabWu1lMKIwwttaN
w0gJ2FlbTa1OalZUn8YAkG4X/K3kr4sxUnHGKMh7Vcruizi1IuE7CqXnUwghxsMAqB7kNvOoH1hL
q0g6KIOZzQ54A81OaHPAHmq7TIrGE+TZyMcFXm74hs2QEJyVe32XJ7lwsKpX5JpltCEB4q2Efydp
RSPxljaOprLsGRfJOwrfYV8sGS7Uc22zC2W6EiykxorHOCLioobPAOKmNMPqX+MpbDRJ1QKnOaHP
AHmpzQ54A81JbPIyI2Zk9yS5lwt10e5P1pL9qS2mAtOFwndJbDYbGg0CgjctbAVqEFtJToRXMXKH
knW/GEPHsHIS2M3iBIafiTmcM7Km3m9rduADhto2iUqI1SdCCCARI80OeAPNTmhzwB5qh1XAZm4c
TppBuXD/AN2qrBwnmFZ7VZkw5luuSXBIfVp2Ao8FPLUDw+5Qqu80OeAPNTmdfgiirr21cPfmVy9n
rp21cPfmVy9nrqlc0OeAPNTmhzwB5qJkXXtq4e/Mrl7PXTtq4e/Mrl7PXVK5oc8AeanNDngDzUMi
69tXD35lcvZ66dtXD35lcvZ66pXNDngDzU5oc8AeahkXXtq4e/Mrl7PXTtq4e/Mrl7PXVK5oc8Ae
anNDngDzUMi69tXD35lcvZ66dtXD35lcvZ66pXNDngDzU5oc8AeahkXXtq4e/Mrl7PXTtq4e/Mrl
7PXVK5oc8AeanNDngDzUMi69tXD35lcvZ66dtXD35lcvZ66pXNDngDzU5oc8AeahkXXtq4e/Mrl7
PXTtq4e/Mrl7PXVK5oc8AeanNDngDzUMi69tXD35lcvZ66dtXD35lcvZ66pXNDngDzU5oc8Aeahk
XXtq4e/Mrl7PXTtq4e/Mrl7PXVK5oc8AeanNDngDzUMi69tXD35lcvZ66dtXD35lcvZ66pXNDngD
zU5oc8AeahkXXtq4e/Mrl7PXTtq4e/Mrl7PXVK5oc8AeanNDngDzUMi69tXD35lcvZ66dtXD35lc
vZ66pXNDngDzU5oc8AeahkXXtq4e/Mrl7PXTtq4e/Mrl7PXVK5oc8AeanNDngDzUMi69tXD35lcv
Z66dtXD35lcvZ66pXNDngDzU5oc8AeahkXXtq4e/Mrl7PXTtq4e/Mrl7PXVK5oc8AeanNDngDzUM
i69tXD35lcvZ66dtXD35lcvZ66pXNDngDzVymzr2gCkdYoZF0OamH/zC5/2W5dO2ph/8wufs5dUD
E+MMP4SyslYgt+Ao13u0W16xIaIIdcmSz3DaCBxO04pOp1Gg2jqNNa07dOWDiNi1SA1yboUW4RMP
hMtibaZI3V17gKJCGF/yfb3rbYSpanVAbRbT3RK9Q9tTD35hc/Zy6dtTD35hc/Zy60pj3PKHgnF1
2i9ALM5Ft0CEuBbF2J7eXHfDR6UZTaVpZZYUdFoS04vRKjp3SRUJd+VdPt4cnN8kwCK0064lt1S+
yHglh1aUBKY2yhe8bIIKiNjugdrRBtmJOvk9DdtTD35hc/Zy6dtTD35hc/Zy60jhPlCKxPjm14bm
8nWBa7dOlFt65yHlOgI7FfcBTsxwgkutBA1XsqSsK2gSEm/XoWO43JpFitjEZKYilOpjNhIUdtIB
On9vnpZitqqOgrVXKX5UmF+TXao0m94auN1lz4Ut+DEhLaQFlgNp2NXFgqUpx5lIQ2FubJWvYKW1
kbVX+L1VjSIEOa409KitOKYc3jCnGwotr0I2kkjgdCRqPqJrPSwnR5xgfSN4MhT2LXjTLC9x37jP
cTanLO/EnR5EZCUl17fNv7JLZVslIOrnEtBwBWk5jzl/5VZc4fsWIsWYExZEbv8Ab+y4TT1taSog
tNutNpUXdh5S0upOrSlobAWXFI2FabrOHbEqK1DNlhlllSVMsmKjZQUnVJA00BB6iOqu8qzWmYpL
ky2RnChpbaC4ylRShQ0UkajgkjgR1EddOg0FfPpHco8O2QXu8Zd4yaQ+8WIDIt0ZapbyAyZCAUPk
NpYEhpTjjhSjZKlJKkpURMSeXNlzCy9k5jSMv8XMwWZ5ht9kQWG0OPJQhS0qfL3Y7ASVlOrzje2p
J2NvVJO5kWa1NQubW7XHTH3Zb3CWUhGwRslOzppppw06tKjcXZdYHx3hCRgLFmFoU6zS0oRJtjzA
3DqUqSoJUkaAjVI4dXDSlzbg05H+kPyVN0hRLrh6+22NcHG0sXG4phtt7C33GUPqT2QVoY1ZeKnl
JCG9lKVlKloSq3cn3lVZfco6dc4uBrXcmE21ll8vTVRyl5txx1sHRl1xTatplfcOhCikoWkFKga2
C5hrD62QwqyQi2mOY4QYqCAySCW9NPxSQDs9WoHCuLBhfDmFmpDGG7DDgIlS3ZUpEOOlvfPuKKlu
K2QNpSiSSTxp0TrkSaOr+2ua4SNBXNJYpWLdvyTX9aZ/fFZVYt2/JNf1pn98VRE9BkE684dZ1/I/
xp0GR4xPqf41PFWyBXRuWw6CGnkq2TorZUDp+nTqoIToMjxifU/xp0GR4xPqf41O79rQEKGhrjfo
A4q+ugg+gyPGJ9T/ABp0GR4xPqf41Kw7rbrgHDBnsvbp5TTu5dSrYcTwUg6E6KH1g8RX1XKZbWGn
HkJUr8VJWAT+ga8aJsQvQZHjE+p/jToMjxifU/xqd3yR3OvH76+D1zgMSmYL85lD0ja7HaU6kKc2
RqrZBOqtBxOnVRUT0GR4xPqf406DI8Yn1P8AGp0PJI1Gnnpvh4SfPQQXQZHjE+p/jToMjxifU/xq
dD6CdAoffpXHZDeum2KCD6DI8Yn1P8adBkeMT6n+NTwdSrilQI+6uwOo1FBX+gyPGJ9T/GnQZHjE
+p/jVgpQV/oMjxifU/xp0GR4xPqf41YKUFf6DI8Yn1P8adBkeMT6n+NWClBX+gyPGJ9T/GnQZHjE
+p/jVgpQV/oMjxifU/xp0GR4xPqf41YKUFf6DI8Yn1P8adBkeMT6n+NWClBX+gyPGJ9T/GnQZHjE
+p/jVgpQV/oMjxifU/xp0GR4xPqf41YKUFf6DI8Yn1P8adBkeMT6n+NWClBX+gyPGJ9T/GnQZHjE
+p/jVgpQV/oMjxifU/xp0GR4xPqf41YKUFf6DI8Yn1P8adBkeMT6n+NWClBX+gyPGJ9T/GnQZHjE
+p/jVgpQV/oMjxifU/xp0GR4xPqf41YKUFf6DI8Yn1P8adBkeMT6n+NWClBX+gyPGJ9T/GnQZAPC
4n1P8asFKCmHJnDxJUJDqdSTohxwDj9wXwrlOTtlSAEz5IA6gJDw0/36uVKCmoydsjY0bnSEjXXR
Ml0ce/8Aj1wMnLIjuUzZA/RId+OrnSgpgybsZPdTJB169ZDvH/fr7wMqrXa1qdgS1JWtOyVrClnT
XXTulGrZSgqfYmLPLp/2Wx7q6hjE52dMwHDtEhGluj90RrqB3yNDr3tD3qkdpJ+uqHhfk45U4NzN
uGbVisz6LpP36mWHZq1xLe7IUFS3orBOxHckqShTy0AFwoB4bS9oLaqHi1KdteOnwCdAo2pjTXzV
x2Pifa06fvfo5tj+6vK+M+QjyjJWd18zcyrz4tuDlXPFsq4TXrC5Jjz79BkKYUiLNfLTiEdiLZCm
glt0OBbjai224tKsDC3Iy5dMtYx5iPlTqtt/uEOPFlxk3qZIchJSt1anUy0pBWA64mQIYSI5KNwV
bok1qSeHd6//ABPV63MbFBOz0+f9mx/dQRsVKOicePHhqdLWx1d/qry/a+Sby7MQWl3EWI+W9fbN
iBxLqbcyxIK40EIcWiMt2O0NxJXuUMOug9y48t4HuFBI+R5FXK8uVlsUjE/K2ulyn2S826Ym3S8U
3DsZ9uM9vS2t5tltallzRQcU2pWykNLLidSZ/dh1yPUwi4rI4Y8eP6LWx7qdiYs8un/ZbHuqrcnH
BWaOXWTtowdnLjtGJMQwi+Jl6Eh94yEKeWprbcf0W4sNlIUrZQkqB2UITspF4209+pelwm2MDsTF
nl0/7LY91OxMWeXT/stj3Vn7aabae/Q6sDsTFnl0/wCy2PdXLEbELUuMqbit2S2JTe2wuAygK7of
Wkajjx4Vnbae/XRShv2Dr/6S1+8KKnFpJA0H1j/51+YODeR5y1cA4kuuPuTpkPccEY7t8rGsm9Yv
ud8idj4qZmSXl2uK1HEhxLjqApC0OPIbS0pCQdda/UEAKANdN0Eg6Jrp2Xa3srcnmxz4TnMr8+b3
hj6Vq74GmxcDYkzJtkKKxiWZhU3qRZFX19TUSAu2xrgpIU0Q5ME1KNjQ7rgtSQU18c4LP9LdhsSb
BltLx3e3Ldiq4yrBiJUy06zI5Nvcajyo4DSCydqalKj+KElG7JKVj9DFNJPDdjzVxukK4BPnrrO9
XZ+CfZz+HmZ4r93gjHGV30jEFWLk5Pm/4YbVeMbX63tYaj2hlN2mm7QV2lD22klYejGUSolK1BP4
RYJAMx9JNyZceZ45w4XxDH5M13zCgsZZ3u2ROarzHg81X2Q7GVDlKddkNFoNlDit4kL2R/mnqr3B
u0n/ADQe9woW0n/NB72tY+J5eKWSTP8Av81vYyyzfP8A8vznvDP0qmR7WJrzmJmHfnbbhXLWeI11
tkOHKtUlDGHlFEhS1uh5EtE9sqKiy4pwq+zPDBtWX/0l2Yku0ZyYctmJZ8212y/ycvrnjZ61ifCf
mYcioKlpYIaSy7NDojJUCU6De6Jr9JlNpHEoGv3113SUqHc9X110+L/6ZtmeTHw8mfiuT5vzrxRi
z6SPANuwxabXmDiy3Jx5mE/g7C1sx4LfIvcW3yokd43d8xEKbLkR5icUanTdOJ2ge5qbveX30qiL
hdb7Zc0sfqDarpJttsKrMWXVRsSst29g6t7Ww/alvPL7oKVsAFSSAg++92PA6vupuB4AqXvWz+mf
ZZ2PvyrwHYrL9LO/PxjCv2I8Wxpk6+w2mlQodrMKLG6QMBUi3PLeVokWtbu00tkfk9TtOcDCvZM/
SK4XzBm5hPXjM6dflZfXvD1ixJBTZpZbcYvUtUFyZGccaS4FwltPJKNFF3Z12dNiv0W3SNNd2K4L
KNeDdT4m+nGfZZ2Mn91ae5CyOUA1ydbW3yl7fdIuKBMl75u83NqXJMffK3K1raSkJ2kaKCFbSkAh
KlKI1rcoTw0NdUo2RqOFdkknjpXDly8fK3M1048fDxk9nNKUqNlKUoFKUoFKUoFKUoFKUoFKUoFK
UoFKUoFKUoFKUoFKUoFKUoFKUoFKUoFKUoFKUoFKUoFKUoNF/wCEfH949syPmVrvlA8pOycnSHAm
4oaxhck3GLPcjIs9zecUXIzSFpZIU6NFOqWltCvxQojbKRxr0B2nYnj131CffWJc+T9he9qC7y41
LPYr0bWTBQv8C8Al1vj/AJiwlIUnqUANeqvscu89zz8OfZ4OPZd4nLr+rz1B5aWRU+CiexmXiVSN
Vh0o5xUlpaUoUEqWDsDb20Bs7WjpUAkkmuqeWxyfHERHWc28QuIn7vsJbbd0UHypIWtKNBqpTSSC
6ANWge60rccXkO5AwrM9hqFlxh5q3SCC/Bbw+wGl6FJGqergUpI0/F2RppoKwIH0fnJ6tmJJOKYu
EIZkSY0WOGXISSxGbjfkgy2CEtEfWocVdRJHCp8T3T5fZf5fbfP7tWYp5XmCcAY3kYRzBlYstccX
mVabTdkXZ+Wi5zYzLDz7LbLDinklDUhLmqkbJS24dQUgHqOWhk2q+uWgY1xVsNW4yy/pctpaApR2
0NflFtbpt1/fAbAbZWdeFbtuXI1yWu94m4gu+DrPJuFyfbenznrI0p6Q42UlC1L/ABtRsp4gjXZG
uulYFn5B/J+stmTYouArM7GD+/WJdobeW65vN5trWslSztH6yRpw6uFOPee6eufZP5XbZ6/dqF/l
t8nlhSnO2/f3IzbSXJNxYRdFxYySgrJdeAKG9hIUVgnVGwva0KSKf8tLJyUbc1ZMVY3uL1znxYkZ
iLBum0FvvbtAO3oNdAp3ZBKi2gqSDwrddt5GeUFrgLtjeHYD7bsh995c22NPLeceededUtS9Ssqc
fdUdftCOquP+RbkhzWLF0Gsph7aV9jKsrRSFJJKTx4gjaVpp1anTSnxPdM659j+V2271+6p5fZg2
bNDCsfGmC8XXyRb5K1pZceuEtleqFFKgULWFJ4jqIB+4VNaT/KG8e2JHzKtWGOTlg3BVoTYMHMsW
uCl1x1MSDAQ2jbWoqWvQHipSiSSeJPXUl2nYXjx71CffW53ruOTc+3/pP5XeP3VD0n+UN49sSPmV
I4N7M6VW8O3m5Op7KTq2/c3nEHr60qWQf7RVr7TsPx496hPvrvBy0jWG4xbs3dnHNzJb0QpoAHU6
dev31jte8dyvZ2cc3PZeHZdvOct/VckK7jU03gAJPUD111UOAOtebrdlBnxhOC4cO4Mms3xy4SDi
LFFvxUz2Te2FuuLa3If2ktFKiyVbaUkIQpCddqvj7Xvek94gnTUGm+R4afPXnbGGWPK8xTh65QLl
ix91ydAdjuRIlwjsxyRBjqQtBCAtBVKS8knX8VXUAda+y8J8seVixaG8R3SJaX5EVCCqdBWtiHts
be0rieyEpD20pKClZPAngKqb016D3qfCHHqpvAPxuH6a0vk7l9nlYsbXG85kTbnNTPw01GEhV2YW
zv2nH0jeNJAO2ptTagtHDVS9rjoBrvBOQ/Kwy0wk7acKuqjyJ7dvcnPW26NFaQ208lxsJec2S+HV
NqW4FBDiEgDQgglerA6gnTaHnrhbzYTtFSf7TXm2wxeWRiHnGS1dLuluPNdi3Ft+REYXJQiU1qII
KNGXN0HxvVktq2k7PUDXe7YB5Y+IUxbVfnuzIKrbHRNZkTYe7C0vpXqRsnfO7Gm0opSkKb1STroZ
PIekAtA4HQfdXG8R3x1152wpl1yscLC0WS33K5JixLi4XHZF5iutHanba3HQpJccYVFJCWxotLu0
ToCnSSw/aOUvZ8a4MsGIMcXKSi8NuSsU71lpabeIzgWG23GmwgB4KQ0QSVEAkHgSGxOrfVK4SdBp
ofNXOo+/zVVKU1H3+amo+/zUClNR9/mpqPv81ApTUff5qaj7/NQKU1H3+amo+/zUClNR9/mpqPv8
1ApTUff5qaj7/NQKU1H3+amo+/zUClNR9/mpqPv81ApTUff5qaj7/NQKU1H3+amo+/zUClNR9/mp
qPv81ApTUff5qaj7/NQKU1H3+amo+/zUClNR9/mpqPv81ApTUff5qaj7/NQKU1H3+amo+/zUClNR
9/mpqPv81ApTUff5qaj7/NQKU1H3+amo+/zUClcbX/ZPmoCFDUUHNKUoBAPA0pSgUpSgUpSgUpSg
ViXT8g1/WWf3xWXWLdvyTX9aZ/fFB91JQRx71YvNMDq3avXK+KvpPKkRHVtkhaWlFJH1HT+Fed8a
crXJDKHF2H8sMyb5ilq73nDce5sS25c1yM4lTyI60laHdd6FFbpbCSotNuKSFbBTUS3HoXmmB9mr
1y/fTmmB9mr1y/fXnQcvXkOluNI/5SsQNS7cicxJVf7mGTHU3vErLh7hPclPcqIUFONoIC3EJVsb
BGPMtMyMIwcd4DxjNutnujG+t9wiYgmbDyNSkkbTgIIUlSSkgFJSQQCCK1lNjYvNMD7NXrl++htF
vB/Jq9cv31T9/YfGd29vS/m039h8Z3b29L+bUVcOZ4HDuV/2vr+KnNMD7NXrl++qfv7D4zu3t6X8
2m/sPjO7e3pfzaC4c0wPs1euX765NngabJQvTvb9fvqnb+w+M7t7el/Noh+wlYCrjddNRr/h+X82
gt4s9vI1CVeuX8Vcm0QAdN2r1y/fWgczeVLk9kZiPBeB8xrligzsZqdTBlQ7q8ttkNux2luOgyUr
KQqU0TukOKSgOOKSlDa1D5Yt5bHJJwfeImHp+cM6VcZsyBGjwLVcLpKdK5jjbbBIb1AB3qVnjtBs
KXslKTWvDdwegzabf9TavXL99OaYH2avXL99ecTy9ORVEQo3jlAJgPIhNSX48q+3ElpLjYcQjbbK
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
1JccdaWvaC0NsIW2FLUrXXhyS75/4/Nn0enejJP+ixj5rZXYYaWhJARjIA9f+LeNeV80HfpQMI5v
4hxDku5HxBhu64ilSLNBvF1iKRao23DbbYDLu7KmHG2XVghwOsLefI2gtCayb1iX6WSE9Hk2leD5
rEm5AzGTY4e8gR9lC0pbBlNh/VxS2lqUtKktNBaNXDxnEvTzenejC9NdzjHzWyvlcMFtXOBItspj
GRaksOMuhKraCUrSUq0P1HQmvqrEN1Kj/J1aa8O5NOkN2+wX5jWVyJOE/foENqDHcxcG2W0obBZt
ZOyBoPq7wr6844k+1xb6i1+6ofpDdvsF+Y06Q3b7BfmNDImOccSfa4t9Ra/dTnHEn2uLfUWv3VD9
Ibt9gvzGnSG7fYL8xoZExzjiT7XFvqLX7qc44k+1xb6i1+6ofpDdvsF+Y06Q3b7BfmNDImBccSkg
B3FvE6fkLX7q+UW93yZGRJjyMWlDidUEsWsaj9BFRiMQ3YLB3KxxH+aa0XylEcrGRi/BN75PyLo7
b7XYbsqdBi3VuPFeuihEVbzLbVKjl6OCmQFDR5ICiC0doKFk2wyPRnOOJPtcW+otfuoLjiQDUu4t
9Ra/dXjnFWIPpXJGJF2mFBgrtdomMOwLza2LW27dVNuOpCnGFyEANOtuILzCvxNyFtKKiGxGSp30
u0XAMzBLrFrU47aUx2bnaXob09p1aFqU83KlSUar36t2rbb/AAcdLa2ip0KSbOMvHxGTce2eccSf
a4t9Ra/dTnHEn2uLfUWv3VD9Ibsnuex1eiadIbt9gvzGpblMiY5xxJ9ri31Fr91OccSfa4t9Ra/d
UP0hu32C/MadIbt9gvzGoZExzjiT7XFvqLX7q+ar1f0yhDU/i3eKaLgHY9r/ABQQCervkVF9Ibt9
gvzGoDMa548n4MxDHwO46zfXcKz2bG6hYbLcxTSgwoKVwSQ7uztHgOs8BQkmrsLniMjaS9i3Tv7i
1e6gueIT1PYsP37m1e6vHuFmvpFYeB7VgS4zbrHjXNiLa50+4SmX7rb3i2mRKuSpiZkpQTttPR0I
21JCX21AIOiRFYBkfSoYCtEaTAsM67tuR7Rt2vGOK4E6ch9LBTc0qlF1bTLDkgb1pYS+6ltRQAgK
SlrXhJNj2wbjiPrL+LPUWv3U5xxJ9ri31Fr91eJbbcPpc7vcYl3uFvgRpLi4L0yHLmQY9v2Y0uSo
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

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://bluedash.net/system/photos/2582/medium/dp2.jpg

/9j/4AAQSkZJRgABAQEASABIAAD/4QCMRXhpZgAATU0AKgAAAAgABgEGAAMAAAABAAIAAAESAAMA
AAABAAEAAAEaAAUAAAABAAAAVgEbAAUAAAABAAAAXgEoAAMAAAABAAIAAIdpAAQAAAABAAAAZgAA
AAAAAABIAAAAAQAAAEgAAAABAAKgAgAEAAAAAQAAA9KgAwAEAAAAAQAAAp4AAAAA/+IZ/ElDQ19Q
Uk9GSUxFAAEBAAAZ7GFwcGwCEAAAbW50clJHQiBYWVogB9sABgAZAAEADwAYYWNzcEFQUEwAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARZGVzYwAAAVAAAABiZHNjbQAAAbQAAAJCY3BydAAA
A/gAAADQd3RwdAAABMgAAAAUclhZWgAABNwAAAAUZ1hZWgAABPAAAAAUYlhZWgAABQQAAAAUclRS
QwAABRgAAAgMYWFyZwAADSQAAAAgdmNndAAADUQAAAYSbmRpbgAAE1gAAAY+Y2hhZAAAGZgAAAAs
bW1vZAAAGcQAAAAoYlRSQwAABRgAAAgMZ1RSQwAABRgAAAgMYWFiZwAADSQAAAAgYWFnZwAADSQA
AAAgZGVzYwAAAAAAAAAIRGlzcGxheQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG1sdWMAAAAAAAAA
EgAAAAxubE5MAAAAFgAAAOhkYURLAAAAHAAAAP5wbFBMAAAAEgAAARplblVTAAAAEgAAASxuYk5P
AAAAEgAAAT5mckZSAAAAFgAAAVBwdEJSAAAAGAAAAWZwdFBUAAAAFgAAAX56aENOAAAADAAAAZRl
c0VTAAAAEgAAAaBqYUpQAAAADgAAAbJydVJVAAAAJAAAAcBzdlNFAAAAEAAAAeR6aFRXAAAADgAA
AfRkZURFAAAAEAAAAgJmaUZJAAAAEAAAAhJpdElUAAAAFAAAAiJrb0tSAAAADAAAAjYASwBsAGUA
dQByAGUAbgAtAEwAQwBEAEwAQwBEAC0AZgBhAHIAdgBlAHMAawDmAHIAbQBLAG8AbABvAHIAIABM
AEMARABDAG8AbABvAHIAIABMAEMARABGAGEAcgBnAGUALQBMAEMARABMAEMARAAgAGMAbwB1AGwA
ZQB1AHIATABDAEQAIABDAG8AbABvAHIAaQBkAG8ATABDAEQAIABhACAAQwBvAHIAZQBzX2mCcgAg
AEwAQwBEAEwAQwBEACAAYwBvAGwAbwByMKsw6TD8ACAATABDAEQEJgQyBDUEQgQ9BD4EOQAgBBYE
GgAtBDQEOARBBD8EOwQ1BDkARgDkAHIAZwAtAEwAQwBEX2mCcm2yZnaYb3k6VmgARgBhAHIAYgAt
AEwAQwBEAFYA5AByAGkALQBMAEMARABMAEMARAAgAGMAbwBsAG8AcgBpzuy37AAgAEwAQwBEAAB0
ZXh0AAAAAENvcHlyaWdodCBBcHBsZSwgSW5jLiwgMjAxMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNSAAEAAAABFs9Y
WVogAAAAAAAAadYAADaxAAAB2FhZWiAAAAAAAABnVAAAuuIAAAlMWFlaIAAAAAAAACWsAAAObgAA
yAljdXJ2AAAAAAAABAAAAAAFAAoADwAUABkAHgAjACgALQAyADYAOwBAAEUASgBPAFQAWQBeAGMA
aABtAHIAdwB8AIEAhgCLAJAAlQCaAJ8AowCoAK0AsgC3ALwAwQDGAMsA0ADVANsA4ADlAOsA8AD2
APsBAQEHAQ0BEwEZAR8BJQErATIBOAE+AUUBTAFSAVkBYAFnAW4BdQF8AYMBiwGSAZoBoQGpAbEB
uQHBAckB0QHZAeEB6QHyAfoCAwIMAhQCHQImAi8COAJBAksCVAJdAmcCcQJ6AoQCjgKYAqICrAK2
AsECywLVAuAC6wL1AwADCwMWAyEDLQM4A0MDTwNaA2YDcgN+A4oDlgOiA64DugPHA9MD4APsA/kE
BgQTBCAELQQ7BEgEVQRjBHEEfgSMBJoEqAS2BMQE0wThBPAE/gUNBRwFKwU6BUkFWAVnBXcFhgWW
BaYFtQXFBdUF5QX2BgYGFgYnBjcGSAZZBmoGewaMBp0GrwbABtEG4wb1BwcHGQcrBz0HTwdhB3QH
hgeZB6wHvwfSB+UH+AgLCB8IMghGCFoIbgiCCJYIqgi+CNII5wj7CRAJJQk6CU8JZAl5CY8JpAm6
Cc8J5Qn7ChEKJwo9ClQKagqBCpgKrgrFCtwK8wsLCyILOQtRC2kLgAuYC7ALyAvhC/kMEgwqDEMM
XAx1DI4MpwzADNkM8w0NDSYNQA1aDXQNjg2pDcMN3g34DhMOLg5JDmQOfw6bDrYO0g7uDwkPJQ9B
D14Peg+WD7MPzw/sEAkQJhBDEGEQfhCbELkQ1xD1ERMRMRFPEW0RjBGqEckR6BIHEiYSRRJkEoQS
oxLDEuMTAxMjE0MTYxODE6QTxRPlFAYUJxRJFGoUixStFM4U8BUSFTQVVhV4FZsVvRXgFgMWJhZJ
FmwWjxayFtYW+hcdF0EXZReJF64X0hf3GBsYQBhlGIoYrxjVGPoZIBlFGWsZkRm3Gd0aBBoqGlEa
dxqeGsUa7BsUGzsbYxuKG7Ib2hwCHCocUhx7HKMczBz1HR4dRx1wHZkdwx3sHhYeQB5qHpQevh7p
HxMfPh9pH5Qfvx/qIBUgQSBsIJggxCDwIRwhSCF1IaEhziH7IiciVSKCIq8i3SMKIzgjZiOUI8Ij
8CQfJE0kfCSrJNolCSU4JWgllyXHJfcmJyZXJocmtyboJxgnSSd6J6sn3CgNKD8ocSiiKNQpBik4
KWspnSnQKgIqNSpoKpsqzysCKzYraSudK9EsBSw5LG4soizXLQwtQS12Last4S4WLkwugi63Lu4v
JC9aL5Evxy/+MDUwbDCkMNsxEjFKMYIxujHyMioyYzKbMtQzDTNGM38zuDPxNCs0ZTSeNNg1EzVN
NYc1wjX9Njc2cjauNuk3JDdgN5w31zgUOFA4jDjIOQU5Qjl/Obw5+To2OnQ6sjrvOy07azuqO+g8
JzxlPKQ84z0iPWE9oT3gPiA+YD6gPuA/IT9hP6I/4kAjQGRApkDnQSlBakGsQe5CMEJyQrVC90M6
Q31DwEQDREdEikTORRJFVUWaRd5GIkZnRqtG8Ec1R3tHwEgFSEtIkUjXSR1JY0mpSfBKN0p9SsRL
DEtTS5pL4kwqTHJMuk0CTUpNk03cTiVObk63TwBPSU+TT91QJ1BxULtRBlFQUZtR5lIxUnxSx1MT
U19TqlP2VEJUj1TbVShVdVXCVg9WXFapVvdXRFeSV+BYL1h9WMtZGllpWbhaB1pWWqZa9VtFW5Vb
5Vw1XIZc1l0nXXhdyV4aXmxevV8PX2Ffs2AFYFdgqmD8YU9homH1YklinGLwY0Njl2PrZEBklGTp
ZT1lkmXnZj1mkmboZz1nk2fpaD9olmjsaUNpmmnxakhqn2r3a09rp2v/bFdsr20IbWBtuW4Sbmtu
xG8eb3hv0XArcIZw4HE6cZVx8HJLcqZzAXNdc7h0FHRwdMx1KHWFdeF2Pnabdvh3VnezeBF4bnjM
eSp5iXnnekZ6pXsEe2N7wnwhfIF84X1BfaF+AX5ifsJ/I3+Ef+WAR4CogQqBa4HNgjCCkoL0g1eD
uoQdhICE44VHhauGDoZyhteHO4efiASIaYjOiTOJmYn+imSKyoswi5aL/IxjjMqNMY2Yjf+OZo7O
jzaPnpAGkG6Q1pE/kaiSEZJ6kuOTTZO2lCCUipT0lV+VyZY0lp+XCpd1l+CYTJi4mSSZkJn8mmia
1ZtCm6+cHJyJnPedZJ3SnkCerp8dn4uf+qBpoNihR6G2oiailqMGo3aj5qRWpMelOKWpphqmi6b9
p26n4KhSqMSpN6mpqhyqj6sCq3Wr6axcrNCtRK24ri2uoa8Wr4uwALB1sOqxYLHWskuywrM4s660
JbSctRO1irYBtnm28Ldot+C4WbjRuUq5wro7urW7LrunvCG8m70VvY++Cr6Evv+/er/1wHDA7MFn
wePCX8Lbw1jD1MRRxM7FS8XIxkbGw8dBx7/IPci8yTrJuco4yrfLNsu2zDXMtc01zbXONs62zzfP
uNA50LrRPNG+0j/SwdNE08bUSdTL1U7V0dZV1tjXXNfg2GTY6Nls2fHadtr724DcBdyK3RDdlt4c
3qLfKd+v4DbgveFE4cziU+Lb42Pj6+Rz5PzlhOYN5pbnH+ep6DLovOlG6dDqW+rl63Dr++yG7RHt
nO4o7rTvQO/M8Fjw5fFy8f/yjPMZ86f0NPTC9VD13vZt9vv3ivgZ+Kj5OPnH+lf65/t3/Af8mP0p
/br+S/7c/23//3BhcmEAAAAAAAMAAAACZmYAAPKnAAANWQAAE9AAAAoOdmNndAAAAAAAAAAAAAMB
AAACAAAAVgEuAesCxANzBCUE6gWhBl8HIQfbCKIJagoyCvwLzwyfDXQOTg8pEAYQ4hHFEqYTiRRv
FVYWRRdXGG0ZhhqgG7oc0h3sHwkgJCFBImAjfSSbJbkm2if6KRsqPitiLIMtqS7PL/MxGDI/M2M0
izWxNtE37jkNOio7RjxiPX4+mj+0QM5B50L+RBhFLkZER1dIa0l8So5LnkyuTb1OzE/aUOZR9FMB
VAxVF1YcVx9YI1knWixbMlw6XUNeS19VYGNhb2J+Y41kn2WxZsVn2mjwaghrIGw5bVNub2+KcKVx
wXLec/t1GHY1d1R4cXmQeq97z3zvfhB/M4BVgXiCnIPBhOaGDIcziFqJgoqpi9OM/I4mj0+QeZGk
ks2T75UPljGXVZh4mZyawZvnnQ2eNZ9coIOhqqLRo/elHKZBp2Woh6moqser5Kz/rhivMLBHsVyy
crOJtJ61sLa8t8O4xrnDuru7rbyavYG+Y79AwBfA6sG5woHDR8QJxMrFhsZBxvvHtMhrySLJ2sqR
y0zMDMzRzZbOWs8ez+LQpNFm0ijS6dOq1GrVKtXr1qvXa9gs2O3Zr9px2zTb+Ny83YHeRt8N39Tg
muFe4iLi6eO15IflX+Y95yPoEOkF6gLrCuwb7TfuW++H8Lrx9PM09Hj1vvcH+FH5nPrm/C79df66
//8AAABWASMBsAJZAxEDsgRbBQoFrQZYBwcHrwhhCRgJywqEC0IMBQzDDYUOSQ8OD9gQohFsEjcT
BxPdFMwVxhbAF70YuBmzGrAbrBynHaQeox+jIKIhoSKiI6QkpyWpJq0nsSi0KboqwSvFLMot0i7Y
L90w3jHdMtwz2jTXNdU20zfPOMo5xTrBO7s8tD2tPqQ/mkCPQYNCd0NqRF1FTkZARzFIIEkQSgBK
8EvcTMVNrE6TT3tQYlFJUjBTGVQBVOlV0la7V6VYj1l6WmVbT1w8XSdeE18BX+5g22HJYrdjpWST
ZYRmgWeCaINpg2qCa4Nsgm2DboNvgnCCcYJygnOCdIF1gHaAd394f3l+en17fHx8fXt+en95gHiB
eIKPg6WEvIXUhuuIA4kaijKLSIxgjXeOjI+kkLqR0JLmk/yVEZYnlz2YUZlmmnybkZyknbqez5/j
oPeiDKMhpDalSqZep3Koh6mbqq6rwazUreeu+rAMsR6yL7NBtFK1Y7Zzt4S4lLmlurW7xLzTveO+
6r/QwK3BisJnw0TEIMT8xdjGs8eOyGnJQ8odyvbLz8ynzX/OVs8t0ATQ2tGx0obTXNQx1QXV29ax
14rYadlL2jLbH9wT3Q/eE98h4DvhYOKT49TlKOaM6ADpiesi7M3uifBR8ij0C/X49+/56vvt/fP/
/wAAACsAxAFLAdgCWwLtA2sD+ASCBRgFogY1BssHYQf9CJsJPgngCocLMgvfDIsNPA3sDp0PUhAL
EMURjhJfEzEUBBTUFaUWeBdNGB8Y9RnKGqEbeBxPHSgeAR7aH7MgjyFqIkYjIyP+JNoluCaWJ3Qo
UCkoKfwq0SulLHktTS4hLvEvwTCRMWAyLjL5M8I0izVTNhg22zefOGE5IjnhOp87XjwbPNc9kz5P
Pw0/0kCaQWNCLELzQ7tEhEVMRhRG20ejSGtJMkn5SsBLh0xPTRZN3E6iT2lQLlD0UbpSf1NFVApU
zlWRVlRXF1faWJ5ZYlooWu5btlyAXUpeFl7kX7NghGFXYixjAmPaZLRlkGZtZ0toK2kLae1q0Gu0
bJZtd25YbzpwG3D9cd9ywXOjdIZ1aXZNdzF4Fnj7eeJ6ynuyfJt9hX5wf1yASYE2giODEoQBhPGF
5oblh+mI7onyivaL+oz+jgKPBpAJkQ2SEJMUlBeVGpYelyGYJJknmiqbLZwxnTSeN587oD6hQaJL
o2OkgaWfpr6n2qj4qharNKxRrW2uiq+nsMSx4LL8tBe1M7ZPt2q4hbmhury71rzxvgy/JsBAwV3C
e8OXxK7Fxsbdx/TJD8ovy1XMhc2+zwbQX9HH00vU4tac2Hfaetym3wnhrOSX59Hrde+P9ED5rP//
AABuZGluAAAAAAAABjYAAKU/AABWZgAAU6IAAKO8AAAlOAAADaUAAFANAABUOQACVHoAAd64AAFZ
mQADAQAAAgAAAAEABAAIABAAGQAlADMARABWAGsAggCaALUA0QDvAQ8BMQFUAXoBoQHKAfUCGwJC
AmoCkwK+AuoDGANHA3cDqQPcBBAERgR9BLYE8AUrBWgFpgXlBiUGaAarBu8HNQd9B8YIEAhcCKkI
9wlICZwJ8gpJCqIK/QtaC7gMGAx6DN4NRA2sDhYOgQ7vD18P0hBGEL0RNhGxEi4SrhMvE7MUORTC
FUsV2BZnFvgXkBgqGMUZYhoBGqEbQhvlHIodMB3WHn8fKB/TIH4hKyHZIogjOSPqJJ0lUSYHJr4n
digwKOwpqSpnKycr6iytLXMuOS8CL8wwmDFkMjMzAzPUNKY1ejZQNyY3/jjXObI6jjtrPEo9Kj4M
Pu4/00C4QaBCiUN0RGBFTUZDRz5IOUk0SjFLMEwwTTFOMk82UDtRQVJJU1NUX1VtVn1XkFilWbxa
11v1XRZeOl9jYI5hvmLyZChlY2agZ99pHmpja61tAG5bb79xLXKldCp1u3dZeQZ6w3yQfmyAXIJb
hGeGhIisit2NGI9WkZuT0pX4mCCaT5yGnsShCKNRpaKn96pTrLKvFbF8s+O2T7i7uym9mcAKwnzE
9cd+yf/Mcc7S0SPTYdWP16zZudu03aLfgOFU4x7k3+aa6E/p/+us7VjvBPCu8lj0BPWx92H5FPrJ
/IP+Qf//AAAAAQAFAAsAFAAgAC8AQQBWAG0AhwCjAMEA4gEFASsBUgF8AakB1wIGAjECXQKLAroC
7AMfA1QDiwPEA/4EOgR3BLcE+AU7BX8FxQYNBlYGogbvBz0HjQfgCDQIiQjhCTsJmQn5ClsKwAsn
C48L+gxoDNgNSg2+DjYOrw8sD6sQLRCyEToRxBJREuETcxQIFKEVOxXYFngXHRfIGHYZJRnYGo0b
RRv+HLsdeh47Hv4fxCCMIVYiIyLxI8MkliVrJkMnHSf6KNkpuyqeK3csTy0qLgcu6C/JMK4xlDJ9
M2k0VzVHNjk3LjgmOSA6HDsaPBs9Hz4lPy1AN0FEQlRDZkR6RY9GkEeUSJhJnkqnS7FMvk3MTt1P
8VEFUhxTN1RRVXBWkFeyWNZZ/VsnXFFdf16vX+FhFWJLY4Vkv2X7ZztofGm/awRsTG2VbuFwMHGB
ctN0KHWAdtt4N3mWevh8XH3DfyyAmIIGg3eE64Zhh9mJVIrRjFCN1I9ZkOCSaZQ9liaYE5oDm/md
8p/vofKj+aYEqBWqKqxErmSwh7KwtN+3EblIu4S9xcALwlTEnsbfyRbLRc1oz33RhNN/1WjXQ9kN
2sncdd4U36LhJOKb5AflZua+6A3pU+qV687tBO4272LwjPGw8tTz8/US9i33R/hh+Xv6kvup/L/9
1v7q//8AAAACAAgAEgAhADMASgBkAIIAogDGAOwBFQFBAXABogHWAgwCPwJ1Aq0C6AMmA2UDqAPs
BDMEfATIBRYFZgW5Bg4GZQa/BxsHegfbCD4IpAkNCXsJ7gpjCtwLWAvXDFsM4g1tDfwOkA8pD8YQ
aREREb0SbxMmE+EUohVnFjIW/RfCGIoZVRolGvgbzhypHYceaR9PIDghJiIXIwwkBiUDJgUnCigU
KSEqMytLLGktiS6tL9Qw/DImM1E0fjWrNtk4CDk3OmU7lTzFPfU/JkBYQYtCwEP2RSxGaEeqSO1K
M0t9TMlOGE9qUL5SFFNtVMdWJFeCWOFaQ1ulXQleb1/WYT5iqWQWZYNm82hlacdrIWx9bdtvPHCh
cgdzb3Tbdkl3unkteqN8G32WfxOAk4IVg5qFIoasiDeJxotWjOqOgJAZkbKTQZS7ljWXspkwmrOc
Np28n0OgzaJao+mleqcNqKOqO6vWrXOvErCzslez/rWmt1C4/bqtvF6+Er/JwYLDPMT0xqzIbMo2
zAHNzs+d0WnTM9T11q7YXdoE25zdJt6k4Bfhd+LM5BjlUOaD56Xov+nL6s/ryOy97aHuhu9Y8Cjw
9PGx8m7zJfPQ9Hv1JPW99lb28PeB+An4kfka+Zv6EvqK+wH7efvl/E38tf0d/YX96f5B/pr+8/9N
/6b//wAAc2YzMgAAAAAAAQxCAAAF3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGxtbW9kAAAA
AAAABhAAAJzHAAAAAMbEvcQAAAAAAAAAAAAAAAAAAAAA/9sAQwACAQEBAQECAQEBAgICAgIEAwIC
AgIFBAQDBAYFBgYGBQYGBgcJCAYHCQcGBggLCAkKCgoKCgYICwwLCgwJCgoK/9sAQwECAgICAgIF
AwMFCgcGBwoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK
/8AAEQgBXgH/AwEiAAIRAQMRAf/EAB4AAQACAgMBAQEAAAAAAAAAAAAFBgQHAQIIAwkK/8QAZhAA
AQMCAwMDEAUIBAcNCAAHAQIDBAAFBgcREhMhCBYxFBUXIlFSVVZhkZKTldHS0wlBU1SUIzIzV3GW
suFCY3SBJDZDoqOz8BgZJSY0NUVic6Gx1NU3REdydYPBw0ZIZGV2hrT/xAAaAQEBAQEBAQEAAAAA
AAAAAAAAAQIDBAUG/8QAMxEBAQEAAQEGBAQEBgMAAAAAAAERIQIDBBIxQWEUUZHwInGBsQUTQqEj
MlLB0fEzYuH/2gAMAwEAAhEDEQA/AP2EzMxJjVb1ts+E7yqG7OfcXKmpZS44EICTsNhwFIUra/OI
OgSdB9YxsH4wxvBw5fG8UTOuMy0baor5aDSn07orShYQAnaBGhKQNQQdAakUR5mJri3YbdbmJT+6
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
jUcEkcCOgjppwNBXz6R3KPDtkF7vGXeMmkPvFiAyLdGWqW8gMmQgFD5DaWBIaU444Uo2SpSSpKVE
TEnlzZcwsvZOY0jL/FzMFmeYbfVEFhtDjyUIUtKny91OwElZTq843tqSdjb1STuZFmtTULra3a46
Y+7Le4SykI2CNkp2dNNNOGnRpUbi7LrA+O8ISMBYswtCnWaWlCJNseYG4dSlSVBKkjQEapHDo4aU
ubcGnI/0h+SpukKJdcPX22xrg42li43FMNtvYW+4yh9SeqCtDGrLxU8pIQ3spSspUtCVW7k+8qrL
7lHTrnFwNa7kwm2ssvl6aqOUvNuOOtg6MuuKbVtMr7R0IUUlC0gpUDWwXMNYfWyGFWSEW0xzHCDF
QQGSQS3pp+aSAdno1A4VxYML4cws1IYw3YYcBEqW7KlIhx0t759xRUtxWyBtKUSSSeNOE5yJNHR/
fXNcJGgrmksUrFu36Jr+1M/xisqsW7fomv7Uz/GKoieYyCdeuHSdf0P86cxkeET6n+dTxVsgV0bl
sOghp5Ktk6K2VA6ft06KCE5jI8In1P8AOnMZHhE+p/nU7v2tAQoaGuN+gDir66CD5jI8In1P86cx
keET6n+dSsO6264BwwZ7L26eU07uXUq2HE8FIOhOih9YPEV9VymW1hpx5CVK/NSVgE/sGvGibELz
GR4RPqf505jI8In1P86nd8kdrrx8tfB65wGJTMF+cyh6RtdTtKdSFObI1VsgnVWg4nTooqJ5jI8I
n1P86cxkeET6n+dToeSRqNPPTfDvk+egguYyPCJ9T/OnMZHhE+p/nU6H0E6BQ8ulcdUN66bYoIPm
MjwifU/zpzGR4RPqf51PB1KuKVAjyV2B1GooK/zGR4RPqf505jI8In1P86sFKCv8xkeET6n+dOYy
PCJ9T/OrBSgr/MZHhE+p/nTmMjwifU/zqwUoK/zGR4RPqf505jI8In1P86sFKCv8xkeET6n+dOYy
PCJ9T/OrBSgr/MZHhE+p/nTmMjwifU/zqwUoK/zGR4RPqf505jI8In1P86sFKCv8xkeET6n+dOYy
PCJ9T/OrBSgr/MZHhE+p/nTmMjwifU/zqwUoK/zGR4RPqf505jI8In1P86sFKCv8xkeET6n+dOYy
PCJ9T/OrBSgr/MZHhE+p/nTmMjwifU/zqwUoK/zGR4RPqf505jI8In1P86sFKCv8xkeET6n+dOYy
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
dWutRnGJHVTBbSEpWNrf7K9lSSkJQk6lXEQf/9k=

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://bluedash.net/system/photos/2583/medium/dp3.jpg

/9j/4AAQSkZJRgABAQEASABIAAD/4QCMRXhpZgAATU0AKgAAAAgABgEGAAMAAAABAAIAAAESAAMA
AAABAAEAAAEaAAUAAAABAAAAVgEbAAUAAAABAAAAXgEoAAMAAAABAAIAAIdpAAQAAAABAAAAZgAA
AAAAAABIAAAAAQAAAEgAAAABAAKgAgAEAAAAAQAAA9KgAwAEAAAAAQAAAp4AAAAA/+IZ/ElDQ19Q
Uk9GSUxFAAEBAAAZ7GFwcGwCEAAAbW50clJHQiBYWVogB9sABgAZAAEADwAYYWNzcEFQUEwAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARZGVzYwAAAVAAAABiZHNjbQAAAbQAAAJCY3BydAAA
A/gAAADQd3RwdAAABMgAAAAUclhZWgAABNwAAAAUZ1hZWgAABPAAAAAUYlhZWgAABQQAAAAUclRS
QwAABRgAAAgMYWFyZwAADSQAAAAgdmNndAAADUQAAAYSbmRpbgAAE1gAAAY+Y2hhZAAAGZgAAAAs
bW1vZAAAGcQAAAAoYlRSQwAABRgAAAgMZ1RSQwAABRgAAAgMYWFiZwAADSQAAAAgYWFnZwAADSQA
AAAgZGVzYwAAAAAAAAAIRGlzcGxheQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG1sdWMAAAAAAAAA
EgAAAAxubE5MAAAAFgAAAOhkYURLAAAAHAAAAP5wbFBMAAAAEgAAARplblVTAAAAEgAAASxuYk5P
AAAAEgAAAT5mckZSAAAAFgAAAVBwdEJSAAAAGAAAAWZwdFBUAAAAFgAAAX56aENOAAAADAAAAZRl
c0VTAAAAEgAAAaBqYUpQAAAADgAAAbJydVJVAAAAJAAAAcBzdlNFAAAAEAAAAeR6aFRXAAAADgAA
AfRkZURFAAAAEAAAAgJmaUZJAAAAEAAAAhJpdElUAAAAFAAAAiJrb0tSAAAADAAAAjYASwBsAGUA
dQByAGUAbgAtAEwAQwBEAEwAQwBEAC0AZgBhAHIAdgBlAHMAawDmAHIAbQBLAG8AbABvAHIAIABM
AEMARABDAG8AbABvAHIAIABMAEMARABGAGEAcgBnAGUALQBMAEMARABMAEMARAAgAGMAbwB1AGwA
ZQB1AHIATABDAEQAIABDAG8AbABvAHIAaQBkAG8ATABDAEQAIABhACAAQwBvAHIAZQBzX2mCcgAg
AEwAQwBEAEwAQwBEACAAYwBvAGwAbwByMKsw6TD8ACAATABDAEQEJgQyBDUEQgQ9BD4EOQAgBBYE
GgAtBDQEOARBBD8EOwQ1BDkARgDkAHIAZwAtAEwAQwBEX2mCcm2yZnaYb3k6VmgARgBhAHIAYgAt
AEwAQwBEAFYA5AByAGkALQBMAEMARABMAEMARAAgAGMAbwBsAG8AcgBpzuy37AAgAEwAQwBEAAB0
ZXh0AAAAAENvcHlyaWdodCBBcHBsZSwgSW5jLiwgMjAxMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNSAAEAAAABFs9Y
WVogAAAAAAAAadYAADaxAAAB2FhZWiAAAAAAAABnVAAAuuIAAAlMWFlaIAAAAAAAACWsAAAObgAA
yAljdXJ2AAAAAAAABAAAAAAFAAoADwAUABkAHgAjACgALQAyADYAOwBAAEUASgBPAFQAWQBeAGMA
aABtAHIAdwB8AIEAhgCLAJAAlQCaAJ8AowCoAK0AsgC3ALwAwQDGAMsA0ADVANsA4ADlAOsA8AD2
APsBAQEHAQ0BEwEZAR8BJQErATIBOAE+AUUBTAFSAVkBYAFnAW4BdQF8AYMBiwGSAZoBoQGpAbEB
uQHBAckB0QHZAeEB6QHyAfoCAwIMAhQCHQImAi8COAJBAksCVAJdAmcCcQJ6AoQCjgKYAqICrAK2
AsECywLVAuAC6wL1AwADCwMWAyEDLQM4A0MDTwNaA2YDcgN+A4oDlgOiA64DugPHA9MD4APsA/kE
BgQTBCAELQQ7BEgEVQRjBHEEfgSMBJoEqAS2BMQE0wThBPAE/gUNBRwFKwU6BUkFWAVnBXcFhgWW
BaYFtQXFBdUF5QX2BgYGFgYnBjcGSAZZBmoGewaMBp0GrwbABtEG4wb1BwcHGQcrBz0HTwdhB3QH
hgeZB6wHvwfSB+UH+AgLCB8IMghGCFoIbgiCCJYIqgi+CNII5wj7CRAJJQk6CU8JZAl5CY8JpAm6
Cc8J5Qn7ChEKJwo9ClQKagqBCpgKrgrFCtwK8wsLCyILOQtRC2kLgAuYC7ALyAvhC/kMEgwqDEMM
XAx1DI4MpwzADNkM8w0NDSYNQA1aDXQNjg2pDcMN3g34DhMOLg5JDmQOfw6bDrYO0g7uDwkPJQ9B
D14Peg+WD7MPzw/sEAkQJhBDEGEQfhCbELkQ1xD1ERMRMRFPEW0RjBGqEckR6BIHEiYSRRJkEoQS
oxLDEuMTAxMjE0MTYxODE6QTxRPlFAYUJxRJFGoUixStFM4U8BUSFTQVVhV4FZsVvRXgFgMWJhZJ
FmwWjxayFtYW+hcdF0EXZReJF64X0hf3GBsYQBhlGIoYrxjVGPoZIBlFGWsZkRm3Gd0aBBoqGlEa
dxqeGsUa7BsUGzsbYxuKG7Ib2hwCHCocUhx7HKMczBz1HR4dRx1wHZkdwx3sHhYeQB5qHpQevh7p
HxMfPh9pH5Qfvx/qIBUgQSBsIJggxCDwIRwhSCF1IaEhziH7IiciVSKCIq8i3SMKIzgjZiOUI8Ij
8CQfJE0kfCSrJNolCSU4JWgllyXHJfcmJyZXJocmtyboJxgnSSd6J6sn3CgNKD8ocSiiKNQpBik4
KWspnSnQKgIqNSpoKpsqzysCKzYraSudK9EsBSw5LG4soizXLQwtQS12Last4S4WLkwugi63Lu4v
JC9aL5Evxy/+MDUwbDCkMNsxEjFKMYIxujHyMioyYzKbMtQzDTNGM38zuDPxNCs0ZTSeNNg1EzVN
NYc1wjX9Njc2cjauNuk3JDdgN5w31zgUOFA4jDjIOQU5Qjl/Obw5+To2OnQ6sjrvOy07azuqO+g8
JzxlPKQ84z0iPWE9oT3gPiA+YD6gPuA/IT9hP6I/4kAjQGRApkDnQSlBakGsQe5CMEJyQrVC90M6
Q31DwEQDREdEikTORRJFVUWaRd5GIkZnRqtG8Ec1R3tHwEgFSEtIkUjXSR1JY0mpSfBKN0p9SsRL
DEtTS5pL4kwqTHJMuk0CTUpNk03cTiVObk63TwBPSU+TT91QJ1BxULtRBlFQUZtR5lIxUnxSx1MT
U19TqlP2VEJUj1TbVShVdVXCVg9WXFapVvdXRFeSV+BYL1h9WMtZGllpWbhaB1pWWqZa9VtFW5Vb
5Vw1XIZc1l0nXXhdyV4aXmxevV8PX2Ffs2AFYFdgqmD8YU9homH1YklinGLwY0Njl2PrZEBklGTp
ZT1lkmXnZj1mkmboZz1nk2fpaD9olmjsaUNpmmnxakhqn2r3a09rp2v/bFdsr20IbWBtuW4Sbmtu
xG8eb3hv0XArcIZw4HE6cZVx8HJLcqZzAXNdc7h0FHRwdMx1KHWFdeF2Pnabdvh3VnezeBF4bnjM
eSp5iXnnekZ6pXsEe2N7wnwhfIF84X1BfaF+AX5ifsJ/I3+Ef+WAR4CogQqBa4HNgjCCkoL0g1eD
uoQdhICE44VHhauGDoZyhteHO4efiASIaYjOiTOJmYn+imSKyoswi5aL/IxjjMqNMY2Yjf+OZo7O
jzaPnpAGkG6Q1pE/kaiSEZJ6kuOTTZO2lCCUipT0lV+VyZY0lp+XCpd1l+CYTJi4mSSZkJn8mmia
1ZtCm6+cHJyJnPedZJ3SnkCerp8dn4uf+qBpoNihR6G2oiailqMGo3aj5qRWpMelOKWpphqmi6b9
p26n4KhSqMSpN6mpqhyqj6sCq3Wr6axcrNCtRK24ri2uoa8Wr4uwALB1sOqxYLHWskuywrM4s660
JbSctRO1irYBtnm28Ldot+C4WbjRuUq5wro7urW7LrunvCG8m70VvY++Cr6Evv+/er/1wHDA7MFn
wePCX8Lbw1jD1MRRxM7FS8XIxkbGw8dBx7/IPci8yTrJuco4yrfLNsu2zDXMtc01zbXONs62zzfP
uNA50LrRPNG+0j/SwdNE08bUSdTL1U7V0dZV1tjXXNfg2GTY6Nls2fHadtr724DcBdyK3RDdlt4c
3qLfKd+v4DbgveFE4cziU+Lb42Pj6+Rz5PzlhOYN5pbnH+ep6DLovOlG6dDqW+rl63Dr++yG7RHt
nO4o7rTvQO/M8Fjw5fFy8f/yjPMZ86f0NPTC9VD13vZt9vv3ivgZ+Kj5OPnH+lf65/t3/Af8mP0p
/br+S/7c/23//3BhcmEAAAAAAAMAAAACZmYAAPKnAAANWQAAE9AAAAoOdmNndAAAAAAAAAAAAAMB
AAACAAAAVgEuAesCxANzBCUE6gWhBl8HIQfbCKIJagoyCvwLzwyfDXQOTg8pEAYQ4hHFEqYTiRRv
FVYWRRdXGG0ZhhqgG7oc0h3sHwkgJCFBImAjfSSbJbkm2if6KRsqPitiLIMtqS7PL/MxGDI/M2M0
izWxNtE37jkNOio7RjxiPX4+mj+0QM5B50L+RBhFLkZER1dIa0l8So5LnkyuTb1OzE/aUOZR9FMB
VAxVF1YcVx9YI1knWixbMlw6XUNeS19VYGNhb2J+Y41kn2WxZsVn2mjwaghrIGw5bVNub2+KcKVx
wXLec/t1GHY1d1R4cXmQeq97z3zvfhB/M4BVgXiCnIPBhOaGDIcziFqJgoqpi9OM/I4mj0+QeZGk
ks2T75UPljGXVZh4mZyawZvnnQ2eNZ9coIOhqqLRo/elHKZBp2Woh6moqser5Kz/rhivMLBHsVyy
crOJtJ61sLa8t8O4xrnDuru7rbyavYG+Y79AwBfA6sG5woHDR8QJxMrFhsZBxvvHtMhrySLJ2sqR
y0zMDMzRzZbOWs8ez+LQpNFm0ijS6dOq1GrVKtXr1qvXa9gs2O3Zr9px2zTb+Ny83YHeRt8N39Tg
muFe4iLi6eO15IflX+Y95yPoEOkF6gLrCuwb7TfuW++H8Lrx9PM09Hj1vvcH+FH5nPrm/C79df66
//8AAABWASMBsAJZAxEDsgRbBQoFrQZYBwcHrwhhCRgJywqEC0IMBQzDDYUOSQ8OD9gQohFsEjcT
BxPdFMwVxhbAF70YuBmzGrAbrBynHaQeox+jIKIhoSKiI6QkpyWpJq0nsSi0KboqwSvFLMot0i7Y
L90w3jHdMtwz2jTXNdU20zfPOMo5xTrBO7s8tD2tPqQ/mkCPQYNCd0NqRF1FTkZARzFIIEkQSgBK
8EvcTMVNrE6TT3tQYlFJUjBTGVQBVOlV0la7V6VYj1l6WmVbT1w8XSdeE18BX+5g22HJYrdjpWST
ZYRmgWeCaINpg2qCa4Nsgm2DboNvgnCCcYJygnOCdIF1gHaAd394f3l+en17fHx8fXt+en95gHiB
eIKPg6WEvIXUhuuIA4kaijKLSIxgjXeOjI+kkLqR0JLmk/yVEZYnlz2YUZlmmnybkZyknbqez5/j
oPeiDKMhpDalSqZep3Koh6mbqq6rwazUreeu+rAMsR6yL7NBtFK1Y7Zzt4S4lLmlurW7xLzTveO+
6r/QwK3BisJnw0TEIMT8xdjGs8eOyGnJQ8odyvbLz8ynzX/OVs8t0ATQ2tGx0obTXNQx1QXV29ax
14rYadlL2jLbH9wT3Q/eE98h4DvhYOKT49TlKOaM6ADpiesi7M3uifBR8ij0C/X49+/56vvt/fP/
/wAAACsAxAFLAdgCWwLtA2sD+ASCBRgFogY1BssHYQf9CJsJPgngCocLMgvfDIsNPA3sDp0PUhAL
EMURjhJfEzEUBBTUFaUWeBdNGB8Y9RnKGqEbeBxPHSgeAR7aH7MgjyFqIkYjIyP+JNoluCaWJ3Qo
UCkoKfwq0SulLHktTS4hLvEvwTCRMWAyLjL5M8I0izVTNhg22zefOGE5IjnhOp87XjwbPNc9kz5P
Pw0/0kCaQWNCLELzQ7tEhEVMRhRG20ejSGtJMkn5SsBLh0xPTRZN3E6iT2lQLlD0UbpSf1NFVApU
zlWRVlRXF1faWJ5ZYlooWu5btlyAXUpeFl7kX7NghGFXYixjAmPaZLRlkGZtZ0toK2kLae1q0Gu0
bJZtd25YbzpwG3D9cd9ywXOjdIZ1aXZNdzF4Fnj7eeJ6ynuyfJt9hX5wf1yASYE2giODEoQBhPGF
5oblh+mI7onyivaL+oz+jgKPBpAJkQ2SEJMUlBeVGpYelyGYJJknmiqbLZwxnTSeN587oD6hQaJL
o2OkgaWfpr6n2qj4qharNKxRrW2uiq+nsMSx4LL8tBe1M7ZPt2q4hbmhury71rzxvgy/JsBAwV3C
e8OXxK7Fxsbdx/TJD8ovy1XMhc2+zwbQX9HH00vU4tac2Hfaetym3wnhrOSX59Hrde+P9ED5rP//
AABuZGluAAAAAAAABjYAAKU/AABWZgAAU6IAAKO8AAAlOAAADaUAAFANAABUOQACVHoAAd64AAFZ
mQADAQAAAgAAAAEABAAIABAAGQAlADMARABWAGsAggCaALUA0QDvAQ8BMQFUAXoBoQHKAfUCGwJC
AmoCkwK+AuoDGANHA3cDqQPcBBAERgR9BLYE8AUrBWgFpgXlBiUGaAarBu8HNQd9B8YIEAhcCKkI
9wlICZwJ8gpJCqIK/QtaC7gMGAx6DN4NRA2sDhYOgQ7vD18P0hBGEL0RNhGxEi4SrhMvE7MUORTC
FUsV2BZnFvgXkBgqGMUZYhoBGqEbQhvlHIodMB3WHn8fKB/TIH4hKyHZIogjOSPqJJ0lUSYHJr4n
digwKOwpqSpnKycr6iytLXMuOS8CL8wwmDFkMjMzAzPUNKY1ejZQNyY3/jjXObI6jjtrPEo9Kj4M
Pu4/00C4QaBCiUN0RGBFTUZDRz5IOUk0SjFLMEwwTTFOMk82UDtRQVJJU1NUX1VtVn1XkFilWbxa
11v1XRZeOl9jYI5hvmLyZChlY2agZ99pHmpja61tAG5bb79xLXKldCp1u3dZeQZ6w3yQfmyAXIJb
hGeGhIisit2NGI9WkZuT0pX4mCCaT5yGnsShCKNRpaKn96pTrLKvFbF8s+O2T7i7uym9mcAKwnzE
9cd+yf/Mcc7S0SPTYdWP16zZudu03aLfgOFU4x7k3+aa6E/p/+us7VjvBPCu8lj0BPWx92H5FPrJ
/IP+Qf//AAAAAQAFAAsAFAAgAC8AQQBWAG0AhwCjAMEA4gEFASsBUgF8AakB1wIGAjECXQKLAroC
7AMfA1QDiwPEA/4EOgR3BLcE+AU7BX8FxQYNBlYGogbvBz0HjQfgCDQIiQjhCTsJmQn5ClsKwAsn
C48L+gxoDNgNSg2+DjYOrw8sD6sQLRCyEToRxBJREuETcxQIFKEVOxXYFngXHRfIGHYZJRnYGo0b
RRv+HLsdeh47Hv4fxCCMIVYiIyLxI8MkliVrJkMnHSf6KNkpuyqeK3csTy0qLgcu6C/JMK4xlDJ9
M2k0VzVHNjk3LjgmOSA6HDsaPBs9Hz4lPy1AN0FEQlRDZkR6RY9GkEeUSJhJnkqnS7FMvk3MTt1P
8VEFUhxTN1RRVXBWkFeyWNZZ/VsnXFFdf16vX+FhFWJLY4Vkv2X7ZztofGm/awRsTG2VbuFwMHGB
ctN0KHWAdtt4N3mWevh8XH3DfyyAmIIGg3eE64Zhh9mJVIrRjFCN1I9ZkOCSaZQ9liaYE5oDm/md
8p/vofKj+aYEqBWqKqxErmSwh7KwtN+3EblIu4S9xcALwlTEnsbfyRbLRc1oz33RhNN/1WjXQ9kN
2sncdd4U36LhJOKb5AflZua+6A3pU+qV687tBO4272LwjPGw8tTz8/US9i33R/hh+Xv6kvup/L/9
1v7q//8AAAACAAgAEgAhADMASgBkAIIAogDGAOwBFQFBAXABogHWAgwCPwJ1Aq0C6AMmA2UDqAPs
BDMEfATIBRYFZgW5Bg4GZQa/BxsHegfbCD4IpAkNCXsJ7gpjCtwLWAvXDFsM4g1tDfwOkA8pD8YQ
aREREb0SbxMmE+EUohVnFjIW/RfCGIoZVRolGvgbzhypHYceaR9PIDghJiIXIwwkBiUDJgUnCigU
KSEqMytLLGktiS6tL9Qw/DImM1E0fjWrNtk4CDk3OmU7lTzFPfU/JkBYQYtCwEP2RSxGaEeqSO1K
M0t9TMlOGE9qUL5SFFNtVMdWJFeCWOFaQ1ulXQleb1/WYT5iqWQWZYNm82hlacdrIWx9bdtvPHCh
cgdzb3Tbdkl3unkteqN8G32WfxOAk4IVg5qFIoasiDeJxotWjOqOgJAZkbKTQZS7ljWXspkwmrOc
Np28n0OgzaJao+mleqcNqKOqO6vWrXOvErCzslez/rWmt1C4/bqtvF6+Er/JwYLDPMT0xqzIbMo2
zAHNzs+d0WnTM9T11q7YXdoE25zdJt6k4Bfhd+LM5BjlUOaD56Xov+nL6s/ryOy97aHuhu9Y8Cjw
9PGx8m7zJfPQ9Hv1JPW99lb28PeB+An4kfka+Zv6EvqK+wH7efvl/E38tf0d/YX96f5B/pr+8/9N
/6b//wAAc2YzMgAAAAAAAQxCAAAF3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGxtbW9kAAAA
AAAABhAAAJzHAAAAAMbEvcQAAAAAAAAAAAAAAAAAAAAA/9sAQwACAQEBAQECAQEBAgICAgIEAwIC
AgIFBAQDBAYFBgYGBQYGBgcJCAYHCQcGBggLCAkKCgoKCgYICwwLCgwJCgoK/9sAQwECAgICAgIF
AwMFCgcGBwoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK
/8AAEQgBXgH/AwEiAAIRAQMRAf/EAB4AAQACAgMBAQEAAAAAAAAAAAAGBwQFAQIIAwkK/8QAZRAA
AQMCAwQCDQcIBQQPBwMFAQIDBAAFBgcRCBITIRYxFBUXIlFSVVaRk5XR0wlBU1RhktIjMjNXcZSW
4UJjdIGyGCSioxklJjQ2N0NFYqGxs9TV8ERGR3KDwcNIZGVzdoaltP/EABoBAQEBAQEBAQAAAAAA
AAAAAAABAgMEBQb/xAAzEQEBAQACAAQDBgQFBQAAAAAAARECIQMSMUEEUWEUcYGRsfATIkLRBTJS
oeEjM2LB8f/aAAwDAQACEQMRAD8A/YTMzEmNVvW2z4TvKobs59xcqallLjgQgJO42HAUhSt784g6
BJ0HzjGwfjDG8HDl8bxRM7YzLRvqivloNKfTwitKFhACd4EaEpA1BB0BrYojzMTXFuw263MSn+Eu
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
EBkW6MtUt5AZMhAKHyG0sCQ0pxxwpRulSklSUqI3Enbmy5hZeycxpGX+LmYLM8w2+yILDaHHkoQp
aVPl7sdgJKynV5xvfUk7m/qkm5kWa1NQu1rdrjpj8Mt8BLKQjcI3Snd00005adWla3F2XWB8d4Qk
YCxZhaFOs0tKESbY8wOA6lKkqCVJGgI1SOXVy0pc24Kcj/KH5Km6Qol1w9fbbGuDjaWLjcUw229x
b7jKH1J7IK0MasvFTykhDe6lKylS0JVLtn3aqy+2jp1zi4GtdyYTbWWXy9NVHKXm3HHWwdGXXFNq
3mV946EKKShaQUqBqwXMNYfWyGFWSEW0xzHCDFQQGSQS3pp+aSAd3q1A5VxYML4cws1IYw3YYcBE
qW7KlIhx0t8Z9xRUtxW6BvKUSSSedOk7yNmjq/vrmuEjQVzSWKVi3b9E1/amf8YrKrFu36Jr+1M/
4xVGp6DIJ17YdZ1/Q/zp0GR5RPqf51virdAro3LYdBDTyVbp0VuqB0/bp1UGk6DI8on1P86dBkeU
T6n+db3jtaAhQ0NccdAHNXz0Gj6DI8on1P8AOnQZHlE+p/nW1h3W3XAOGDPZe4TymneC6lW44nkp
B0J0UPnB5ivquUy2sNOPISpX5qSsAn9g150TY0vQZHlE+p/nToMjyifU/wA63vGSO915/bXweucB
iUzBfnMoekb3Y7SnUhTm6NVboJ1VoOZ06qK1PQZHlE+p/nToMjyifU/zreh5JGo09NOMPGT6aDRd
BkeUT6n+dOgyPKJ9T/Ot6H0E6BQ+3SuOyG9dN8UGj6DI8on1P86dBkeUT6n+db4OpVzSoEfZXYHU
aigj/QZHlE+p/nToMjyifU/zqQUoI/0GR5RPqf506DI8on1P86kFKCP9BkeUT6n+dOgyPKJ9T/Op
BSgj/QZHlE+p/nToMjyifU/zqQUoI/0GR5RPqf506DI8on1P86kFKCP9BkeUT6n+dOgyPKJ9T/Op
BSgj/QZHlE+p/nToMjyifU/zqQUoI/0GR5RPqf506DI8on1P86kFKCP9BkeUT6n+dOgyPKJ9T/Op
BSgj/QZHlE+p/nToMjyifU/zqQUoI/0GR5RPqf506DI8on1P86kFKCP9BkeUT6n+dOgyPKJ9T/Op
BSgj/QZHlE+p/nToMjyifU/zqQUoI/0GR5RPqf506DI8on1P86kFKCP9BkeUT6n+dOgyPKJ9T/Op
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
HDZacklLCHHFJSpxaEgneGslwtsJ7LuF7NiSxJyngXFjFd3cuN6F2b45ccUttYQjUDhNJU0gpbRu
pSU69ZJObbNivZdsOZEHNix5I2CDfLfIfkRZMSCG0JfdU0pT5bT3hcSWUFCiPyeqt3dKiasvDO15
fRrcyLPMtV/jWixpTHYmWl1yTHaaSG3VNyGAlRTppqA4oa6a6HSq2xVj6yYSvDeHZ7jz092S0wiN
Es/EPEcTvBO8EbuoQQsp13gg72mlXxmDh7EEzFMG82uwvTWGbTIjuhhbYUla34608nFp1G62vn9n
21EbzlLCxBcV3e+ZJrlyltobXJfbiFZSlQUka8f5iBoevkBrpyrIqO2Z2YAuTbKO3SmpTrDS1wFW
NanmlOBO42pKWj3yt4FI/pjvk6jnWXcc2cv7Xce1kvFsXi76EDhW3iJUVAq70pbIUABqojUJ+fSr
QbyftzVxRd2cjiiS3ubj6GoiVDc3dzqf5lO6ndJ/N3RppS6ZQW293dd/vGSK5U9e5vTXkRS73v5o
3uPqB9g0B+fWgqlec2XDLsaO9i1lDssngMLsyw4UgIVxCktapQUrQoLI3Sk6gkA6ZErNLA8WKxMe
xM0EvscYIFoJW00dN1xxAa3mkq3k7pWBvbydNdRVmysobXPcbdl5HcRbTbKG3OBECkoaSpLSd4PA
7qUrUAnXTRRGmhr44nyUh4wctCr/AJSz3m7GvW3xkuxUtJG6EhCkh7vkAAd5rpyGoNXO8FcN5p4H
cQ84rESGgxHW+52RZltnhIXw1rAU0CQlzvCR1KBSeYIrPF0fv+CbliPC85aBHhygl3sDsd5h5toq
5hSErQod6R1HQg/PU3uuRWHL0uQ5c8hA65KdLrzxaiBZcII3weNyPMn9vfaa86yE5aXix4Dl4Owf
lbMiMqtkhiMwhyKAVraUkFRL+pJUQSo6k9ZplFuYdfflWOHKkOFTjkRpS1H5yUAk+k1nVGrJfr5A
s8SFIwFeA4zFbQ5oqKRvBIB/5f7Ky+lN18xL16Yvxqg3VK0vSm6+Yl69MX41OlN18xL16YvxqDdU
rS9Kbr5iXr0xfjU6U3XzEvXpi/GoN1StL0puvmJevTF+NTpTdfMS9emL8ag3VK0vSm6+Yl69MX41
OlN18xL16YvxqDdUrS9Kbr5iXr0xfjU6U3XzEvXpi/GoN1StL0puvmJevTF+NTpTdfMS9emL8ag3
VK0vSm6+Yl69MX41OlN18xL16YvxqDdUrS9Kbr5iXr0xfjU6U3XzEvXpi/GoN1StL0puvmJevTF+
NTpTdfMS9emL8ag3VK0vSm6+Yl69MX41OlN18xL16YvxqDdUrS9Kbr5iXr0xfjU6U3XzEvXpi/Go
N1StL0puvmJevTF+NTpTdfMS9emL8ag3VK0vSm6+Yl69MX41OlN18xL16YvxqDdUrS9Kbr5iXr0x
fjU6U3XzEvXpi/GoN1StL0puvmJevTF+NTpTdfMS9emL8ag3VK0vSm6+Yl69MX41OlN18xL16Yvx
qDdUrSs4kurr6GVYJuzYUsAurMbdQCes6PE6D7Af2VuGzqKDtSlKBSlKBSlKBSlKBSlKBWLdv0TX
9qZ/xisqsW7fomv7Uz/jFB2uH+8nSkkHgq0IPV3pryhm5tm5EbOWMsNZb5lZdOKRd8Nw5icQB1gM
B9x/gCMsOLCi8pDch9PzOCO4gHf0B9X3LXte8R9Ar/CapC47PU/Mexx14mwdgS8RJNvjJS3fLUuS
pTSE77aVhaSDuqWpQ05BSlEaEmpxS+isF/KVbCLNobxFKi3Zm2qgIlvXN3A8xMeMlSWzw3Vbv5N0
LeYaLZGocfbTz1JFzZfY0ykzMwXbse4awkEQbmwXWG7laXIkhvRSkKQ6y6AptaVJUkpI6xyJGhOi
ibJEaBZk4eg5W5YswEs8JMJvD6g0G9Ejd3NzTTRCBpp/QT4BW7sWSmPsKWaPhzDMHB9vt8JkNRIM
KPJaZYQOpKEJGiRz6hXSSd/7J8m64OAfNe3+ppwcA+a9v9TWD3M82/rWGPRKp3M82/rWGPRKqeU/
lZ3BwD5r2/1NODgHzXt/qawe5nm39awx6JVO5nm39awx6JVMXpncHAPmvb/U04OAfNe3+prB7meb
f1rDHolU7mebf1rDHolVM+psZ3BwD5r2/wBTTg4B817f6msHuZ5t/WsMeiVTuZ5t/WsMeiVVw2Pr
dY+B3IKm42GYSVqcbAUlrQ/pE6/P4Nap3/Le2eoW0ZivZ9xJl03b3MMKjtrvKVoebedeaiuoQplA
32UqErRCyVJUWHtdzRO9b7OV+aTr7aZsvDiWQ4lThZTJ3tAQeWvL5vnqMYp2Uk48Q6jHOWuWl5D7
qnXxdbEuRvuKDSVqPEQdSoR2ASeZDDYOu4nRxNm9q1j/ACimyLdL6zbLHge6vQXLaLg7fpeHHY0N
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
qSUhKEnUq5iD/9k=

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://bluedash.net/system/photos/2584/medium/c.jpg

/9j/4AAQSkZJRgABAQEASABIAAD/4QCARXhpZgAATU0AKgAAAAgABQESAAMAAAABAAEAAAEaAAUA
AAABAAAASgEbAAUAAAABAAAAUgEoAAMAAAABAAIAAIdpAAQAAAABAAAAWgAAAAAAAABIAAAAAQAA
AEgAAAABAAKgAgAEAAAAAQAAAkagAwAEAAAAAQAAAjgAAAAA/+IZ/ElDQ19QUk9GSUxFAAEBAAAZ
7GFwcGwCEAAAbW50clJHQiBYWVogB9sABgAZAAEADwAYYWNzcEFQUEwAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAARZGVzYwAAAVAAAABiZHNjbQAAAbQAAAJCY3BydAAAA/gAAADQd3RwdAAA
BMgAAAAUclhZWgAABNwAAAAUZ1hZWgAABPAAAAAUYlhZWgAABQQAAAAUclRSQwAABRgAAAgMYWFy
ZwAADSQAAAAgdmNndAAADUQAAAYSbmRpbgAAE1gAAAY+Y2hhZAAAGZgAAAAsbW1vZAAAGcQAAAAo
YlRSQwAABRgAAAgMZ1RSQwAABRgAAAgMYWFiZwAADSQAAAAgYWFnZwAADSQAAAAgZGVzYwAAAAAA
AAAIRGlzcGxheQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG1sdWMAAAAAAAAAEgAAAAxubE5MAAAA
FgAAAOhkYURLAAAAHAAAAP5wbFBMAAAAEgAAARplblVTAAAAEgAAASxuYk5PAAAAEgAAAT5mckZS
AAAAFgAAAVBwdEJSAAAAGAAAAWZwdFBUAAAAFgAAAX56aENOAAAADAAAAZRlc0VTAAAAEgAAAaBq
YUpQAAAADgAAAbJydVJVAAAAJAAAAcBzdlNFAAAAEAAAAeR6aFRXAAAADgAAAfRkZURFAAAAEAAA
AgJmaUZJAAAAEAAAAhJpdElUAAAAFAAAAiJrb0tSAAAADAAAAjYASwBsAGUAdQByAGUAbgAtAEwA
QwBEAEwAQwBEAC0AZgBhAHIAdgBlAHMAawDmAHIAbQBLAG8AbABvAHIAIABMAEMARABDAG8AbABv
AHIAIABMAEMARABGAGEAcgBnAGUALQBMAEMARABMAEMARAAgAGMAbwB1AGwAZQB1AHIATABDAEQA
IABDAG8AbABvAHIAaQBkAG8ATABDAEQAIABhACAAQwBvAHIAZQBzX2mCcgAgAEwAQwBEAEwAQwBE
ACAAYwBvAGwAbwByMKsw6TD8ACAATABDAEQEJgQyBDUEQgQ9BD4EOQAgBBYEGgAtBDQEOARBBD8E
OwQ1BDkARgDkAHIAZwAtAEwAQwBEX2mCcm2yZnaYb3k6VmgARgBhAHIAYgAtAEwAQwBEAFYA5ABy
AGkALQBMAEMARABMAEMARAAgAGMAbwBsAG8AcgBpzuy37AAgAEwAQwBEAAB0ZXh0AAAAAENvcHly
aWdodCBBcHBsZSwgSW5jLiwgMjAxMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNSAAEAAAABFs9YWVogAAAAAAAAadYA
ADaxAAAB2FhZWiAAAAAAAABnVAAAuuIAAAlMWFlaIAAAAAAAACWsAAAObgAAyAljdXJ2AAAAAAAA
BAAAAAAFAAoADwAUABkAHgAjACgALQAyADYAOwBAAEUASgBPAFQAWQBeAGMAaABtAHIAdwB8AIEA
hgCLAJAAlQCaAJ8AowCoAK0AsgC3ALwAwQDGAMsA0ADVANsA4ADlAOsA8AD2APsBAQEHAQ0BEwEZ
AR8BJQErATIBOAE+AUUBTAFSAVkBYAFnAW4BdQF8AYMBiwGSAZoBoQGpAbEBuQHBAckB0QHZAeEB
6QHyAfoCAwIMAhQCHQImAi8COAJBAksCVAJdAmcCcQJ6AoQCjgKYAqICrAK2AsECywLVAuAC6wL1
AwADCwMWAyEDLQM4A0MDTwNaA2YDcgN+A4oDlgOiA64DugPHA9MD4APsA/kEBgQTBCAELQQ7BEgE
VQRjBHEEfgSMBJoEqAS2BMQE0wThBPAE/gUNBRwFKwU6BUkFWAVnBXcFhgWWBaYFtQXFBdUF5QX2
BgYGFgYnBjcGSAZZBmoGewaMBp0GrwbABtEG4wb1BwcHGQcrBz0HTwdhB3QHhgeZB6wHvwfSB+UH
+AgLCB8IMghGCFoIbgiCCJYIqgi+CNII5wj7CRAJJQk6CU8JZAl5CY8JpAm6Cc8J5Qn7ChEKJwo9
ClQKagqBCpgKrgrFCtwK8wsLCyILOQtRC2kLgAuYC7ALyAvhC/kMEgwqDEMMXAx1DI4MpwzADNkM
8w0NDSYNQA1aDXQNjg2pDcMN3g34DhMOLg5JDmQOfw6bDrYO0g7uDwkPJQ9BD14Peg+WD7MPzw/s
EAkQJhBDEGEQfhCbELkQ1xD1ERMRMRFPEW0RjBGqEckR6BIHEiYSRRJkEoQSoxLDEuMTAxMjE0MT
YxODE6QTxRPlFAYUJxRJFGoUixStFM4U8BUSFTQVVhV4FZsVvRXgFgMWJhZJFmwWjxayFtYW+hcd
F0EXZReJF64X0hf3GBsYQBhlGIoYrxjVGPoZIBlFGWsZkRm3Gd0aBBoqGlEadxqeGsUa7BsUGzsb
YxuKG7Ib2hwCHCocUhx7HKMczBz1HR4dRx1wHZkdwx3sHhYeQB5qHpQevh7pHxMfPh9pH5Qfvx/q
IBUgQSBsIJggxCDwIRwhSCF1IaEhziH7IiciVSKCIq8i3SMKIzgjZiOUI8Ij8CQfJE0kfCSrJNol
CSU4JWgllyXHJfcmJyZXJocmtyboJxgnSSd6J6sn3CgNKD8ocSiiKNQpBik4KWspnSnQKgIqNSpo
KpsqzysCKzYraSudK9EsBSw5LG4soizXLQwtQS12Last4S4WLkwugi63Lu4vJC9aL5Evxy/+MDUw
bDCkMNsxEjFKMYIxujHyMioyYzKbMtQzDTNGM38zuDPxNCs0ZTSeNNg1EzVNNYc1wjX9Njc2cjau
Nuk3JDdgN5w31zgUOFA4jDjIOQU5Qjl/Obw5+To2OnQ6sjrvOy07azuqO+g8JzxlPKQ84z0iPWE9
oT3gPiA+YD6gPuA/IT9hP6I/4kAjQGRApkDnQSlBakGsQe5CMEJyQrVC90M6Q31DwEQDREdEikTO
RRJFVUWaRd5GIkZnRqtG8Ec1R3tHwEgFSEtIkUjXSR1JY0mpSfBKN0p9SsRLDEtTS5pL4kwqTHJM
uk0CTUpNk03cTiVObk63TwBPSU+TT91QJ1BxULtRBlFQUZtR5lIxUnxSx1MTU19TqlP2VEJUj1Tb
VShVdVXCVg9WXFapVvdXRFeSV+BYL1h9WMtZGllpWbhaB1pWWqZa9VtFW5Vb5Vw1XIZc1l0nXXhd
yV4aXmxevV8PX2Ffs2AFYFdgqmD8YU9homH1YklinGLwY0Njl2PrZEBklGTpZT1lkmXnZj1mkmbo
Zz1nk2fpaD9olmjsaUNpmmnxakhqn2r3a09rp2v/bFdsr20IbWBtuW4SbmtuxG8eb3hv0XArcIZw
4HE6cZVx8HJLcqZzAXNdc7h0FHRwdMx1KHWFdeF2Pnabdvh3VnezeBF4bnjMeSp5iXnnekZ6pXsE
e2N7wnwhfIF84X1BfaF+AX5ifsJ/I3+Ef+WAR4CogQqBa4HNgjCCkoL0g1eDuoQdhICE44VHhauG
DoZyhteHO4efiASIaYjOiTOJmYn+imSKyoswi5aL/IxjjMqNMY2Yjf+OZo7OjzaPnpAGkG6Q1pE/
kaiSEZJ6kuOTTZO2lCCUipT0lV+VyZY0lp+XCpd1l+CYTJi4mSSZkJn8mmia1ZtCm6+cHJyJnPed
ZJ3SnkCerp8dn4uf+qBpoNihR6G2oiailqMGo3aj5qRWpMelOKWpphqmi6b9p26n4KhSqMSpN6mp
qhyqj6sCq3Wr6axcrNCtRK24ri2uoa8Wr4uwALB1sOqxYLHWskuywrM4s660JbSctRO1irYBtnm2
8Ldot+C4WbjRuUq5wro7urW7LrunvCG8m70VvY++Cr6Evv+/er/1wHDA7MFnwePCX8Lbw1jD1MRR
xM7FS8XIxkbGw8dBx7/IPci8yTrJuco4yrfLNsu2zDXMtc01zbXONs62zzfPuNA50LrRPNG+0j/S
wdNE08bUSdTL1U7V0dZV1tjXXNfg2GTY6Nls2fHadtr724DcBdyK3RDdlt4c3qLfKd+v4DbgveFE
4cziU+Lb42Pj6+Rz5PzlhOYN5pbnH+ep6DLovOlG6dDqW+rl63Dr++yG7RHtnO4o7rTvQO/M8Fjw
5fFy8f/yjPMZ86f0NPTC9VD13vZt9vv3ivgZ+Kj5OPnH+lf65/t3/Af8mP0p/br+S/7c/23//3Bh
cmEAAAAAAAMAAAACZmYAAPKnAAANWQAAE9AAAAoOdmNndAAAAAAAAAAAAAMBAAACAAAAVgEuAesC
xANzBCUE6gWhBl8HIQfbCKIJagoyCvwLzwyfDXQOTg8pEAYQ4hHFEqYTiRRvFVYWRRdXGG0Zhhqg
G7oc0h3sHwkgJCFBImAjfSSbJbkm2if6KRsqPitiLIMtqS7PL/MxGDI/M2M0izWxNtE37jkNOio7
RjxiPX4+mj+0QM5B50L+RBhFLkZER1dIa0l8So5LnkyuTb1OzE/aUOZR9FMBVAxVF1YcVx9YI1kn
WixbMlw6XUNeS19VYGNhb2J+Y41kn2WxZsVn2mjwaghrIGw5bVNub2+KcKVxwXLec/t1GHY1d1R4
cXmQeq97z3zvfhB/M4BVgXiCnIPBhOaGDIcziFqJgoqpi9OM/I4mj0+QeZGkks2T75UPljGXVZh4
mZyawZvnnQ2eNZ9coIOhqqLRo/elHKZBp2Woh6moqser5Kz/rhivMLBHsVyycrOJtJ61sLa8t8O4
xrnDuru7rbyavYG+Y79AwBfA6sG5woHDR8QJxMrFhsZBxvvHtMhrySLJ2sqRy0zMDMzRzZbOWs8e
z+LQpNFm0ijS6dOq1GrVKtXr1qvXa9gs2O3Zr9px2zTb+Ny83YHeRt8N39TgmuFe4iLi6eO15Ifl
X+Y95yPoEOkF6gLrCuwb7TfuW++H8Lrx9PM09Hj1vvcH+FH5nPrm/C79df66//8AAABWASMBsAJZ
AxEDsgRbBQoFrQZYBwcHrwhhCRgJywqEC0IMBQzDDYUOSQ8OD9gQohFsEjcTBxPdFMwVxhbAF70Y
uBmzGrAbrBynHaQeox+jIKIhoSKiI6QkpyWpJq0nsSi0KboqwSvFLMot0i7YL90w3jHdMtwz2jTX
NdU20zfPOMo5xTrBO7s8tD2tPqQ/mkCPQYNCd0NqRF1FTkZARzFIIEkQSgBK8EvcTMVNrE6TT3tQ
YlFJUjBTGVQBVOlV0la7V6VYj1l6WmVbT1w8XSdeE18BX+5g22HJYrdjpWSTZYRmgWeCaINpg2qC
a4Nsgm2DboNvgnCCcYJygnOCdIF1gHaAd394f3l+en17fHx8fXt+en95gHiBeIKPg6WEvIXUhuuI
A4kaijKLSIxgjXeOjI+kkLqR0JLmk/yVEZYnlz2YUZlmmnybkZyknbqez5/joPeiDKMhpDalSqZe
p3Koh6mbqq6rwazUreeu+rAMsR6yL7NBtFK1Y7Zzt4S4lLmlurW7xLzTveO+6r/QwK3BisJnw0TE
IMT8xdjGs8eOyGnJQ8odyvbLz8ynzX/OVs8t0ATQ2tGx0obTXNQx1QXV29ax14rYadlL2jLbH9wT
3Q/eE98h4DvhYOKT49TlKOaM6ADpiesi7M3uifBR8ij0C/X49+/56vvt/fP//wAAACsAxAFLAdgC
WwLtA2sD+ASCBRgFogY1BssHYQf9CJsJPgngCocLMgvfDIsNPA3sDp0PUhALEMURjhJfEzEUBBTU
FaUWeBdNGB8Y9RnKGqEbeBxPHSgeAR7aH7MgjyFqIkYjIyP+JNoluCaWJ3QoUCkoKfwq0SulLHkt
TS4hLvEvwTCRMWAyLjL5M8I0izVTNhg22zefOGE5IjnhOp87XjwbPNc9kz5PPw0/0kCaQWNCLELz
Q7tEhEVMRhRG20ejSGtJMkn5SsBLh0xPTRZN3E6iT2lQLlD0UbpSf1NFVApUzlWRVlRXF1faWJ5Z
YlooWu5btlyAXUpeFl7kX7NghGFXYixjAmPaZLRlkGZtZ0toK2kLae1q0Gu0bJZtd25YbzpwG3D9
cd9ywXOjdIZ1aXZNdzF4Fnj7eeJ6ynuyfJt9hX5wf1yASYE2giODEoQBhPGF5oblh+mI7onyivaL
+oz+jgKPBpAJkQ2SEJMUlBeVGpYelyGYJJknmiqbLZwxnTSeN587oD6hQaJLo2OkgaWfpr6n2qj4
qharNKxRrW2uiq+nsMSx4LL8tBe1M7ZPt2q4hbmhury71rzxvgy/JsBAwV3Ce8OXxK7Fxsbdx/TJ
D8ovy1XMhc2+zwbQX9HH00vU4tac2Hfaetym3wnhrOSX59Hrde+P9ED5rP//AABuZGluAAAAAAAA
BjYAAKU/AABWZgAAU6IAAKO8AAAlOAAADaUAAFANAABUOQACVHoAAd64AAFZmQADAQAAAgAAAAEA
BAAIABAAGQAlADMARABWAGsAggCaALUA0QDvAQ8BMQFUAXoBoQHKAfUCGwJCAmoCkwK+AuoDGANH
A3cDqQPcBBAERgR9BLYE8AUrBWgFpgXlBiUGaAarBu8HNQd9B8YIEAhcCKkI9wlICZwJ8gpJCqIK
/QtaC7gMGAx6DN4NRA2sDhYOgQ7vD18P0hBGEL0RNhGxEi4SrhMvE7MUORTCFUsV2BZnFvgXkBgq
GMUZYhoBGqEbQhvlHIodMB3WHn8fKB/TIH4hKyHZIogjOSPqJJ0lUSYHJr4ndigwKOwpqSpnKycr
6iytLXMuOS8CL8wwmDFkMjMzAzPUNKY1ejZQNyY3/jjXObI6jjtrPEo9Kj4MPu4/00C4QaBCiUN0
RGBFTUZDRz5IOUk0SjFLMEwwTTFOMk82UDtRQVJJU1NUX1VtVn1XkFilWbxa11v1XRZeOl9jYI5h
vmLyZChlY2agZ99pHmpja61tAG5bb79xLXKldCp1u3dZeQZ6w3yQfmyAXIJbhGeGhIisit2NGI9W
kZuT0pX4mCCaT5yGnsShCKNRpaKn96pTrLKvFbF8s+O2T7i7uym9mcAKwnzE9cd+yf/Mcc7S0SPT
YdWP16zZudu03aLfgOFU4x7k3+aa6E/p/+us7VjvBPCu8lj0BPWx92H5FPrJ/IP+Qf//AAAAAQAF
AAsAFAAgAC8AQQBWAG0AhwCjAMEA4gEFASsBUgF8AakB1wIGAjECXQKLAroC7AMfA1QDiwPEA/4E
OgR3BLcE+AU7BX8FxQYNBlYGogbvBz0HjQfgCDQIiQjhCTsJmQn5ClsKwAsnC48L+gxoDNgNSg2+
DjYOrw8sD6sQLRCyEToRxBJREuETcxQIFKEVOxXYFngXHRfIGHYZJRnYGo0bRRv+HLsdeh47Hv4f
xCCMIVYiIyLxI8MkliVrJkMnHSf6KNkpuyqeK3csTy0qLgcu6C/JMK4xlDJ9M2k0VzVHNjk3Ljgm
OSA6HDsaPBs9Hz4lPy1AN0FEQlRDZkR6RY9GkEeUSJhJnkqnS7FMvk3MTt1P8VEFUhxTN1RRVXBW
kFeyWNZZ/VsnXFFdf16vX+FhFWJLY4Vkv2X7ZztofGm/awRsTG2VbuFwMHGBctN0KHWAdtt4N3mW
evh8XH3DfyyAmIIGg3eE64Zhh9mJVIrRjFCN1I9ZkOCSaZQ9liaYE5oDm/md8p/vofKj+aYEqBWq
KqxErmSwh7KwtN+3EblIu4S9xcALwlTEnsbfyRbLRc1oz33RhNN/1WjXQ9kN2sncdd4U36LhJOKb
5AflZua+6A3pU+qV687tBO4272LwjPGw8tTz8/US9i33R/hh+Xv6kvup/L/91v7q//8AAAACAAgA
EgAhADMASgBkAIIAogDGAOwBFQFBAXABogHWAgwCPwJ1Aq0C6AMmA2UDqAPsBDMEfATIBRYFZgW5
Bg4GZQa/BxsHegfbCD4IpAkNCXsJ7gpjCtwLWAvXDFsM4g1tDfwOkA8pD8YQaREREb0SbxMmE+EU
ohVnFjIW/RfCGIoZVRolGvgbzhypHYceaR9PIDghJiIXIwwkBiUDJgUnCigUKSEqMytLLGktiS6t
L9Qw/DImM1E0fjWrNtk4CDk3OmU7lTzFPfU/JkBYQYtCwEP2RSxGaEeqSO1KM0t9TMlOGE9qUL5S
FFNtVMdWJFeCWOFaQ1ulXQleb1/WYT5iqWQWZYNm82hlacdrIWx9bdtvPHChcgdzb3Tbdkl3unkt
eqN8G32WfxOAk4IVg5qFIoasiDeJxotWjOqOgJAZkbKTQZS7ljWXspkwmrOcNp28n0OgzaJao+ml
eqcNqKOqO6vWrXOvErCzslez/rWmt1C4/bqtvF6+Er/JwYLDPMT0xqzIbMo2zAHNzs+d0WnTM9T1
1q7YXdoE25zdJt6k4Bfhd+LM5BjlUOaD56Xov+nL6s/ryOy97aHuhu9Y8Cjw9PGx8m7zJfPQ9Hv1
JPW99lb28PeB+An4kfka+Zv6EvqK+wH7efvl/E38tf0d/YX96f5B/pr+8/9N/6b//wAAc2YzMgAA
AAAAAQxCAAAF3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGxtbW9kAAAAAAAABhAAAJzHAAAA
AMbEvcQAAAAAAAAAAAAAAAAAAAAA/9sAQwACAQEBAQECAQEBAgICAgIEAwICAgIFBAQDBAYFBgYG
BQYGBgcJCAYHCQcGBggLCAkKCgoKCgYICwwLCgwJCgoK/9sAQwECAgICAgIFAwMFCgcGBwoKCgoK
CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK/8AAEQgBXgFnAwEi
AAIRAQMRAf/EAB4AAQABBQEBAQEAAAAAAAAAAAAHAQUGCAkEAwIK/8QAXRAAAQMDAgIECgUJBAQK
BgsAAQIDBAAFBgcRCBITFCGVCRUYIjFRUlfS0woZQVaRFhcjMlNYYZbUYnGBlBokM0glOEJkdHWE
haHBNDZjk6TRKENUVWWCg6Kjw/H/xAAaAQEBAQEBAQEAAAAAAAAAAAAAAQIFAwQG/8QAMhEBAAEC
BAMHAgcBAAMAAAAAAAECEQMSIVEEMUEFExRhcZGhIvAyUoGxwdHhBhZCYv/aAAwDAQACEQMRAD8A
6+6pz79FxmFYcMua7YuXMRF61DQkLjshClcre4ISSEhAO3Zv2DfarRgiMxxbOmbTOyi6T7bcIjpV
Fu81UpTDjaQQ4hxXnAK/VKSSntG2325Hcn2bgGrUu2PT3ZTnLHiRmwpxxQBVuNyANgCdyRtt6a+k
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
8cuR4PgNk0N1sl4M1foD8lDFyS2htTK+jdLjin3C5sGmgokghIO29RPwN+DC1z0I8ITcb7rvohZc
v0yRw/YlgEHKrrcbfMEmfZGIpMowHSp1DTjzJ6PsK0FttSgPSmFtSvBNeEO1GxvU/MoWiFii3hHH
Bb9bcUxa45vDcayW1NocYXBW6jdEaQEhDn6XzCHFJBJHbLW68/7iF0tP6ftdIWY+Hl4nXOFPig13
0Q0nwLNpuhmptkx3GZMFi4tw7xBnPttrlSGFvB1txPSJR0YUnkXvzb8ux6o45MudwsEKdeoCYkx6
I2uXFSvmDLpQCtG/28qiRv8AwrldhPB54TrD8O4wc1h8F2nNzvet+qdoyXD8LyvURD8R6K082HkS
lxFM8jqEJQ8CHQFLCk+cAnpOqViXdXLPFdvcdpmaqMhUxqO4VNodKQVhJPaUhW4B+0VqYtT97R/L
Mz9Xv/j3UpSopSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlK
D89GfsNUKVE78tfulS0D5hBP/wDtVCdvO7K/dKWgfjkO+/ooUkekiv3SqPwUHbtpyE+kfjX7pUtC
Wh+ORXqpyKr90paFfjkI2FfoDYbVWlUKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQK
UpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQK
UpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQK
UpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQK
UpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQK
UpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQK
UpQKUpQKUpQKVTpEe0KdIj2hQVpVOkR7Qp0iPaFBWlU6RHtCnSI9oUFaVTpEe0KdIj2hQVpVOkR7
Qp0iPaFBWlU6RHtCnSI9oUFaVTpEe0KdIj2hQVpVOkR7Qp0iPaFBWlU6RHtCnSI9oUFaVTpEe0Kd
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
KUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUCl
KUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUCl
KUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUCl
KUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUCl
KUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUCl
KUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUCl
KUClKUClKUClKUClKUClKUClKUClKUClKUGsn1kVt9yt07/g/HT6yK2+5W6d/wAH461D65I9ofjT
rkj2h+NBt59ZFbfcrdO/4Px0+sitvuVunf8AB+OtQ+uSPaH4065I9ofjQbefWRW33K3Tv+D8dPrI
rb7lbp3/AAfjrUPrkj2h+NOuSPaH40G3n1kVt9yt07/g/HT6yK2+5W6d/wAH461D65I9ofjTrkj2
h+NBt59ZFbfcrdO/4Px0+sitvuVunf8AB+OtQ+uSPaH4065I9ofjQbefWRW33K3Tv+D8dPrIrb7l
bp3/AAfjrUPrkj2h+NOuSPaH40G3n1kVt9yt07/g/HT6yK2+5W6d/wAH461D65I9ofjTrkj2h+NB
t59ZFbfcrdO/4Px0+sitvuVunf8AB+OtQ+uSPaH4065I9ofjQbefWRW33K3Tv+D8dPrIrb7lbp3/
AAfjrUPrkj2h+NOuSPaH40G3n1kVt9yt07/g/HT6yK2+5W6d/wAH461D65I9ofjTrkj2h+NBt59Z
FbfcrdO/4Px0+sitvuVunf8AB+OtQ+uSPaH4065I9ofjQbefWRW33K3Tv+D8dPrIrb7lbp3/AAfj
rUPrkj2h+NOuSPaH40G3n1kVt9yt07/g/HT6yK2+5W6d/wAH461D65I9ofjTrkj2h+NBt59ZFbfc
rdO/4Px0+sitvuVunf8AB+OtQ+uSPaH4065I9ofjQbefWRW33K3Tv+D8dPrIrb7lbp3/AAfjrUPr
kj2h+NOuSPaH40G3n1kVt9yt07/g/HT6yK2+5W6d/wAH461D65I9ofjTrkj2h+NBt59ZFbfcrdO/
4Px0+sitvuVunf8AB+OtQ+uSPaH4065I9ofjQbR6j+FA/JbTy/ZPZdFJhmW2yypUQS73DW10rbKl
p50pcCincDcAgkb7EVDuReFp4tcX4iomg930QsDEedmLNgiZJItMhuO8px9LQeQlUzzhsrm5QrtA
9P21DWscyQdIsqBI/wDVud9v/N11keoWE5jgmrLmb5Jn0q8WbNNeMdYx22vOOE2x+PdFqeBQpRQh
HKClCkHdQ9KUeig/dw8PJxPwrr4ra4ecfeU4t4RFIjvf6yhta0qWgdb84AoXuRvtynf0GqQfDw8V
1zsz+RW3hns0i3xt+sz2Ib62WtgCeZYlcqdgQe0/bWDaD6O3DO8ZwXXlu/NRrdhrOSWWTCLJU9Il
uSbi+gp7QkNckkbqJ5gpBASQeYV4frDl0/gXtmsuDREOKwbGsjbuMe45TJixXj0kt9ajDZYWiUeh
eSAXHG91ISk7JSFEJc0V8M9xY605THslp0AsMeC6mQX7ym3vvR45aYW8QpSZYAJCQO0j9YVjSvDx
8VicfGWK4aLKLUpXKm5mI/1cnm5duk61y78wI9Pp7KwXhO0/zTJtFdOdWrXnsi349jlrv1qutkZd
cBuE1x2e6hZQFBBb6N5AK1bqBaACSNlD023Brhi3BLNyK0s2uNjF80iK4kRHWnJrtwSllct14reL
KEF/nU2EIJ2Kd+Qg7hmLvh5OKtmwoyp7hpsqLW4rlbuSoj4YUrcjYOda5SdwR6fsq/6z+Gu4o9G8
8vWIz9C8dlw7Ten7a1eupPNMS3GlFJ5CZhG/YfN3JFQRrppJm7PAXZtV9Vl24BONWFvFF49fJ5Cm
1JaDaZcR4iOkiOVcy2hzF0A9oKifbqM9mGvGrWsekGV5vOVBlaoY7aLaHnFPN21t25Ox+dpokJBC
Vn0bFXbue0mgkiz+Hr4pMhUUWDhvsU4h1DREOM86edQUUp82We0hCyB6SEq9Rr72vw7PFtfHJTVl
4X7TMXBVyzkxYL7hjnt7FhMo8noPp29B9Va1T4WWcMmneuOAYFnk9l205zYLWq7RFGM8+yE3TmHm
KJRuUjfZXaOz0Eitn9OMJyjVDKc0awlKzd8c1NTdni/lkm1x5BetsDo+lMdh5Unz2HCpKgkbOHYk
rOwXOB4abimuOiEnW+JoXj64cTI2rUuO3AeUCFsrWXuk65tyhSEoI2/WcT2/ZStLtPr/AKmcQPCz
qHDxfLHLR4rzaBkMyCJK24yo0pUqP0TaQFjm6fZfKpJQlKEkEr2KVB//2Q==

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://bluedash.net/system/avatars/2/medium/profile-image-display.jspa.png?1316497194

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

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/stylesheets/global/application.css?1323190114

HTML {
	BACKGROUND-COLOR: #fff; HEIGHT: 100%; COLOR: #5f5e5f
}
BODY {
	BACKGROUND-COLOR: #fff; HEIGHT: 100%; COLOR: #5f5e5f
}
HTML {
	FONT-FAMILY: Arial, Helvetica, sans-serif
}
BODY {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
BODY {
	LINE-HEIGHT: 22px; FONT-FAMILY: Arial, Helvetica, sans-serif; =
FONT-SIZE: 14px
}
P {
	LINE-HEIGHT: 22px; FONT-FAMILY: Arial, Helvetica, sans-serif; =
FONT-SIZE: 14px
}
OL {
	LINE-HEIGHT: 22px; FONT-FAMILY: Arial, Helvetica, sans-serif; =
FONT-SIZE: 14px
}
UL {
	LINE-HEIGHT: 22px; FONT-FAMILY: Arial, Helvetica, sans-serif; =
FONT-SIZE: 14px
}
TD {
	LINE-HEIGHT: 22px; FONT-FAMILY: Arial, Helvetica, sans-serif; =
FONT-SIZE: 14px
}
PRE {
	PADDING-BOTTOM: 10px; BACKGROUND-COLOR: #eee; PADDING-LEFT: 10px; =
PADDING-RIGHT: 10px; PADDING-TOP: 10px
}
HR {
	BORDER-BOTTOM: #efefef 1px solid; BORDER-LEFT: 0px; BORDER-TOP: 0px; =
BORDER-RIGHT: 0px
}
A {
	COLOR: #5f5e5f; TEXT-DECORATION: none
}
A:visited {
	COLOR: #5f5e5f; TEXT-DECORATION: none
}
A:hover {
	COLOR: #5f5e5f; TEXT-DECORATION: none
}
H1 {
	FONT-FAMILY: Arial, Helvetica, sans-serif
}
H2 {
	FONT-FAMILY: Arial, Helvetica, sans-serif
}
H3 {
	FONT-FAMILY: Arial, Helvetica, sans-serif
}
H1 {
	FONT-SIZE: 14px
}
H2 {
	LINE-HEIGHT: 19px; MARGIN: 0px 0px 3px; FONT-SIZE: 14px; FONT-WEIGHT: =
bold
}
IMG {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px; PADDING-TOP: 0px
}
IMG A {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px; PADDING-TOP: 0px
}
IMG A:hover {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px; PADDING-TOP: 0px
}
IMG A:visited {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px; PADDING-TOP: 0px
}
INPUT {
	FONT-FAMILY: Arial, Helvetica, sans-serif; COLOR: #5f5e5f; FONT-SIZE: =
12px
}
.img_link {
	CURSOR: pointer
}
#wrapper-footer {
	WIDTH: 100%; BACKGROUND: url(/images/global/footer.jpg) repeat-x; =
HEIGHT: 62px
}
#container-footer {
	TEXT-ALIGN: center; PADDING-BOTTOM: 0px; MARGIN: 0px auto; =
PADDING-LEFT: 0px; WIDTH: 900px; PADDING-RIGHT: 0px; HEIGHT: 61px; =
PADDING-TOP: 20px
}
.body_text_area {
	WIDTH: 550px; HEIGHT: 460px
}
.footer {
	LINE-HEIGHT: 18px; COLOR: #c0c0c0; FONT-SIZE: 12px
}
.footer A {
	COLOR: #c0c0c0; TEXT-DECORATION: none
}
.footer A:visited {
	COLOR: #c0c0c0; TEXT-DECORATION: none
}
.footer A:hover {
	COLOR: #c0c0c0; TEXT-DECORATION: none
}
.article_link {
	LINE-HEIGHT: 18px; FONT-FAMILY: Arial, Helvetica, sans-serif; COLOR: =
#7f7f7f; FONT-SIZE: 12px
}
.sidebar_author {
	LINE-HEIGHT: 18px; MARGIN: 10px; PADDING-LEFT: 10px; WIDTH: 280px; =
BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: #7f7f7f; =
FONT-SIZE: 12px; PADDING-TOP: 12px
}
.container {
	MARGIN: 0px auto; WIDTH: 930px; CLEAR: left
}
.synopsis_text_area {
	WIDTH: 550px; HEIGHT: 230px
}
.comment_text_area {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; WIDTH: =
550px; HEIGHT: 230px; BORDER-TOP: #ccc 1px solid; BORDER-RIGHT: #ccc 1px =
solid
}
SUP {
	COLOR: #7f7f7f
}
.back_to_top {
	PADDING-BOTTOM: 1px; LINE-HEIGHT: 110%; PADDING-LEFT: 1px; WIDTH: 10px; =
PADDING-RIGHT: 1px; FONT-SIZE: 12px; PADDING-TOP: 1px
}
.back_to_top TD {
	PADDING-BOTTOM: 1px; LINE-HEIGHT: 110%; PADDING-LEFT: 1px; WIDTH: 10px; =
PADDING-RIGHT: 1px; FONT-SIZE: 12px; PADDING-TOP: 1px
}
.comment_text_field {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; WIDTH: =
150px; HEIGHT: 20px; BORDER-TOP: #ccc 1px solid; BORDER-RIGHT: #ccc 1px =
solid
}
.main {
	WIDTH: 550px; FLOAT: left
}
.sidebar {
	WIDTH: 350px; FLOAT: right; CLEAR: right
}
.category {
	LINE-HEIGHT: 18px; COLOR: #7f7f7f; FONT-SIZE: 12px
}
.sidebar_wrapper {
	WIDTH: 265px; FLOAT: left; HEIGHT: 25px; CLEAR: right
}
.sidebar_content {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN-TOP: 0px; PADDING-LEFT: =
4px; WIDTH: 265px; PADDING-RIGHT: 0px; BACKGROUND: none transparent =
scroll repeat 0% 0%; COLOR: #7f7f7f; MARGIN-LEFT: 20px; FONT-SIZE: 12px; =
TEXT-DECORATION: none; PADDING-TOP: 4px
}
.more-fun {
	WIDTH: 50%
}
.morefun-content {
	LINE-HEIGHT: 18px; BACKGROUND: none transparent scroll repeat 0% 0%; =
COLOR: #7f7f7f; FONT-SIZE: 12px; TEXT-DECORATION: none
}
.avatar {
	PADDING-BOTTOM: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px; =
PADDING-TOP: 3px
}
.avatar-link {
	PADDING-BOTTOM: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px; CURSOR: =
pointer; PADDING-TOP: 3px
}
.img-main {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; CURSOR: pointer; PADDING-TOP: 0px
}
.img-main A {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; CURSOR: pointer; PADDING-TOP: 0px
}
.img-main A:hover {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; CURSOR: pointer; PADDING-TOP: 0px
}
.img-main A:visited {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; CURSOR: pointer; PADDING-TOP: 0px
}
.sidebar_pictures {
	LINE-HEIGHT: 18px; MARGIN: 10px; PADDING-LEFT: 10px; WIDTH: 300px; =
BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: #7f7f7f; =
FONT-SIZE: 12px; PADDING-TOP: 12px
}
.sidebar_picture {
	PADDING-BOTTOM: 2px; MARGIN: 0px; PADDING-LEFT: 0px; WIDTH: 85px; =
PADDING-RIGHT: 3px; CURSOR: pointer; PADDING-TOP: 0px
}
.pagination {
	FONT-FAMILY: Arial, Helvetica, sans-serif; COLOR: #7f7f7f; FONT-SIZE: =
13px
}
.pagination A {
	FONT-FAMILY: Arial, Helvetica, sans-serif; COLOR: #7f7f7f; FONT-SIZE: =
13px
}
.pagination A:visited {
	FONT-FAMILY: Arial, Helvetica, sans-serif; COLOR: #7f7f7f; FONT-SIZE: =
13px
}
.pagination A:hover {
	FONT-FAMILY: Arial, Helvetica, sans-serif; COLOR: #7f7f7f; FONT-SIZE: =
13px
}
.comment-avatar {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; WIDTH: 50px; PADDING-RIGHT: =
5px; VERTICAL-ALIGN: top; PADDING-TOP: 2px
}
.comment-comment {
	WIDTH: 545px; VERTICAL-ALIGN: top
}
.sidebar_thumb {
	PADDING-BOTTOM: 2px; MARGIN: 0px; PADDING-LEFT: 0px; WIDTH: 50px; =
PADDING-RIGHT: 3px; CURSOR: pointer; PADDING-TOP: 0px
}
#top_menu {
	TEXT-ALIGN: right; PADDING-BOTTOM: 1px; PADDING-LEFT: 0px; WIDTH: 100%; =
PADDING-RIGHT: 0px; BACKGROUND: #eee; HEIGHT: 20px; VERTICAL-ALIGN: =
middle; PADDING-TOP: 7px
}
#top_menu_links-right {
	TEXT-ALIGN: right; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 0px =
10px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND: #eee; =
FLOAT: right; HEIGHT: 13px; FONT-SIZE: 12px; VERTICAL-ALIGN: middle; =
TEXT-DECORATION: none; PADDING-TOP: 0px
}
#top_menu_links-right A {
	TEXT-DECORATION: none
}
#top_menu_links-left A:visited {
	TEXT-DECORATION: none
}
#top_menu_links-right A:hover {
	BACKGROUND: none transparent scroll repeat 0% 0%; TEXT-DECORATION: none
}
#container-banner {
	PADDING-BOTTOM: 0px; MARGIN: 1px auto 0px; PADDING-LEFT: 0px; WIDTH: =
930px; PADDING-RIGHT: 0px; HEIGHT: 67px; PADDING-TOP: 0px
}
#main-menu-left {
	PADDING-BOTTOM: 0px; MARGIN: 0px auto 20px; PADDING-LEFT: 0px; WIDTH: =
600px; PADDING-RIGHT: 0px; FLOAT: left; HEIGHT: 45px; FONT-WEIGHT: bold; =
PADDING-TOP: 0px
}
#main-menu-right {
	PADDING-BOTTOM: 0px; MARGIN: 0px auto; PADDING-LEFT: 0px; WIDTH: 330px; =
PADDING-RIGHT: 0px; FLOAT: right; HEIGHT: 40px; FONT-WEIGHT: bold; =
PADDING-TOP: 0px
}
.main-menu-category-bit {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; PADDING-LEFT: 0px; WIDTH: 30px; =
PADDING-RIGHT: 14px; FLOAT: left; FONT-SIZE: 12px; TEXT-DECORATION: =
none; PADDING-TOP: 10px
}
.main-menu-category-bit A {
	TEXT-DECORATION: none
}
.main-menu-category-bit A:visited {
	TEXT-DECORATION: none
}
.main-menu-category-bit A:hover {
	BACKGROUND: none transparent scroll repeat 0% 0%; TEXT-DECORATION: none
}
.main-menu-category {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; PADDING-LEFT: 0px; WIDTH: 30px; =
PADDING-RIGHT: 14px; FLOAT: left; FONT-SIZE: 12px; TEXT-DECORATION: =
none; PADDING-TOP: 10px
}
.main-menu-category A {
	TEXT-DECORATION: none
}
.main-menu-category A:visited {
	TEXT-DECORATION: none
}
.main-menu-category A:hover {
	BACKGROUND: none transparent scroll repeat 0% 0%; TEXT-DECORATION: none
}
.sidebar_author_login {
	FONT-WEIGHT: bold
}
.title {
	FONT-SIZE: 15px; FONT-WEIGHT: bold; TEXT-DECORATION: none
}
.title A {
	FONT-SIZE: 15px; FONT-WEIGHT: bold; TEXT-DECORATION: none
}
.title A:visited {
	FONT-SIZE: 15px; FONT-WEIGHT: bold; TEXT-DECORATION: none
}
.title A:hover {
	BACKGROUND: none transparent scroll repeat 0% 0%; FONT-SIZE: 15px; =
FONT-WEIGHT: bold; TEXT-DECORATION: none
}
.sidebar_title {
	MARGIN: 15px 0px 10px 19px; PADDING-LEFT: 10px; WIDTH: 265px; HEIGHT: =
25px; FONT-SIZE: 13px; FONT-WEIGHT: bold; PADDING-TOP: 8px
}
.wrapper {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; WIDTH: 100%; =
PADDING-RIGHT: 0px; HEIGHT: 100%; CLEAR: right; PADDING-TOP: 0px
}
.flash {
	COLOR: #ff5200
}
.comment-body {
	COLOR: #797979
}
.comment-date {
	FONT-FAMILY: Arial; FONT-SIZE: 12px; FONT-WEIGHT: bold
}
.comment-login {
	FONT-SIZE: 13px; FONT-WEIGHT: bold
}
.comment-login A {
	TEXT-DECORATION: none
}
.container-a2 {
	MARGIN: 0px auto; WIDTH: 930px; CLEAR: left
}
.sidebar-a2 {
	WIDTH: 374px; FLOAT: right; HEIGHT: 600px; CLEAR: right
}
.main-a2 {
	WIDTH: 555px; FLOAT: left; HEIGHT: 900px
}
.a2-vline {
	WIDTH: 1px; FLOAT: left; HEIGHT: 900px
}
.a2-title {
	FONT-SIZE: 13px; FONT-WEIGHT: bold
}
.a2-input {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; WIDTH: =
150px; HEIGHT: 20px; BORDER-TOP: #ccc 1px solid; BORDER-RIGHT: #ccc 1px =
solid
}
BLOCKQUOTE P {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 15px; =
BACKGROUND: url(/images/global/quote_down.png) no-repeat right bottom; =
PADDING-TOP: 0px
}
BLOCKQUOTE {
	PADDING-BOTTOM: 20px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; =
BACKGROUND: url(/images/global/quote_up.png) no-repeat left top; =
PADDING-TOP: 20px
}
CITE {
	FLOAT: right; FONT-SIZE: 1.2em
}

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/stylesheets/global/impromptu.css?1323190114

.jqifade {
	POSITION: absolute; BACKGROUND-COLOR: #aaaaaa
}
DIV.jqi {
	BORDER-BOTTOM: #eeeeee 1px solid; POSITION: absolute; TEXT-ALIGN: left; =
BORDER-LEFT: #eeeeee 1px solid; PADDING-BOTTOM: 7px; BACKGROUND-COLOR: =
#ffffff; PADDING-LEFT: 7px; WIDTH: 400px; PADDING-RIGHT: 7px; =
FONT-FAMILY: Verdana, Geneva, Arial, Helvetica, sans-serif; FONT-SIZE: =
11px; BORDER-TOP: #eeeeee 1px solid; BORDER-RIGHT: #eeeeee 1px solid; =
PADDING-TOP: 7px; border-radius: 10px; -moz-border-radius: 10px; =
-webkit-border-radius: 10px
}
DIV.jqi .jqicontainer {
	FONT-WEIGHT: bold
}
DIV.jqi .jqiclose {
	POSITION: absolute; WIDTH: 18px; COLOR: #bbbbbb; TOP: 4px; CURSOR: =
default; RIGHT: -2px; FONT-WEIGHT: bold
}
DIV.jqi .jqimessage {
	PADDING-BOTTOM: 10px; LINE-HEIGHT: 20px; PADDING-LEFT: 10px; =
PADDING-RIGHT: 10px; COLOR: #444444; PADDING-TOP: 10px
}
DIV.jqi .jqibuttons {
	BORDER-BOTTOM: #eeeeee 1px solid; TEXT-ALIGN: right; BORDER-LEFT: =
#eeeeee 1px solid; PADDING-BOTTOM: 5px; BACKGROUND-COLOR: #f4f4f4; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: #eeeeee 1px solid; =
BORDER-RIGHT: #eeeeee 1px solid; PADDING-TOP: 5px
}
DIV.jqi BUTTON {
	BORDER-BOTTOM: #f4f4f4 1px solid; BORDER-LEFT: #f4f4f4 1px solid; =
PADDING-BOTTOM: 3px; BACKGROUND-COLOR: #2f6073; MARGIN: 0px 10px; =
PADDING-LEFT: 10px; PADDING-RIGHT: 10px; COLOR: #ffffff; FONT-SIZE: =
12px; BORDER-TOP: #f4f4f4 1px solid; FONT-WEIGHT: bold; BORDER-RIGHT: =
#f4f4f4 1px solid; PADDING-TOP: 3px
}
DIV.jqi BUTTON:hover {
	BACKGROUND-COLOR: #728a8c
}
DIV.jqi BUTTON.jqidefaultbutton {
	BACKGROUND-COLOR: #bf5e26
}
.jqiwarning .jqi .jqibuttons {
	BACKGROUND-COLOR: #bf5e26
}

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/stylesheets/global/search.css?1323190114

.search {
	MARGIN-TOP: 18px; PADDING-LEFT: 45px; WIDTH: 145px; FLOAT: left; =
HEIGHT: 20px
}
#btnSearch {
	MARGIN-TOP: 18px; WIDTH: 30px; FLOAT: left; HEIGHT: 20px; CURSOR: =
pointer
}
#search_field {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; WIDTH: 139px; HEIGHT: 13px; =
COLOR: #909090; FONT-SIZE: 12px; BORDER-TOP: 0px; BORDER-RIGHT: 0px
}
.search-main {
	WIDTH: 100%; PADDING-TOP: 15px
}
.search-header {
	FONT-SIZE: 13px; TEXT-DECORATION: none
}
.search-title {
	FONT-SIZE: 13px; FONT-WEIGHT: bold; TEXT-DECORATION: none
}
.search-title A {
	FONT-SIZE: 13px; FONT-WEIGHT: bold; TEXT-DECORATION: none
}
.search-title A:visited {
	FONT-SIZE: 13px; FONT-WEIGHT: bold; TEXT-DECORATION: none
}
.search-title A:hover {
	BACKGROUND: none transparent scroll repeat 0% 0%; FONT-SIZE: 13px; =
FONT-WEIGHT: bold; TEXT-DECORATION: none
}
.search-category {
	COLOR: #909090; FONT-SIZE: 12px
}
.search-category A {
	COLOR: #909090; FONT-SIZE: 12px; TEXT-DECORATION: none
}
.search-category A:visited {
	COLOR: #909090; FONT-SIZE: 12px; TEXT-DECORATION: none
}
.search-category A:hover {
	BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: #909090; =
FONT-SIZE: 12px; TEXT-DECORATION: underline
}

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: 7bit
Content-Location: http://bluedash.net/stylesheets/sky-blue/scaffold.css?1323190114

H1 {
	COLOR: #5f5e5f
}
H2 {
	COLOR: #0059b7
}
#top_menu {
	COLOR: #617d95
}
#top_menu_links-right {
	COLOR: #617d95
}
#top_menu_links-right A {
	COLOR: #0059b7
}
#top_menu_links-right A:visited {
	COLOR: #0059b7
}
#top_menu_links-right A:hover {
	COLOR: #ff5200
}
#container-banner {
	BACKGROUND: url(/images/sky-blue/banner.png) no-repeat
}
#main-menu-left {
	COLOR: #0059b7
}
#main-menu-right {
	BACKGROUND: url(/images/sky-blue/search.png) no-repeat; COLOR: #0059b7
}
.main-menu-category-bit {
	BACKGROUND: url(/images/sky-blue/bit.png) no-repeat; COLOR: #0b5fb0
}
.main-menu-category-bit A {
	COLOR: #0b5fb0
}
.main-menu-category-bit A:visited {
	COLOR: #0b5fb0
}
.main-menu-category-bit A:hover {
	COLOR: #ff5200
}
.main-menu-category {
	COLOR: #0b5fb0
}
.main-menu-category A {
	COLOR: #0b5fb0
}
.main-menu-category A:visited {
	COLOR: #0b5fb0
}
.main-menu-category A:hover {
	COLOR: #ff5200
}
.sidebar_author_login {
	COLOR: #0b5fb0
}
.title {
	COLOR: #0059b7
}
.title A {
	COLOR: #0059b7
}
.title A:visited {
	COLOR: #0059b7
}
.title A:hover {
	COLOR: #ff5200
}
.sidebar_title {
	BACKGROUND: #eef2f5; COLOR: #0059b7
}
.back_to_top {
	BACKGROUND: #eef2f5; COLOR: #0059b7
}
.back_to_top A {
	BACKGROUND: #eef2f5; COLOR: #0059b7
}
.back_to_top A:hover {
	BACKGROUND: #eef2f5; COLOR: #0059b7
}
.back_to_top A:visited {
	BACKGROUND: #eef2f5; COLOR: #0059b7
}
.sidebar_title A {
	BACKGROUND: #eef2f5; COLOR: #0059b7
}
.sidebar_title A:hover {
	BACKGROUND: #eef2f5; COLOR: #0059b7
}
.sidebar_title A:visited {
	BACKGROUND: #eef2f5; COLOR: #0059b7
}
.wrapper {
	BACKGROUND: url(/images/sky-blue/background-main.png) repeat-x
}
.flash {
	COLOR: #ff5200
}
.comment-login A {
	COLOR: #5f5e5f
}

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/javascripts/syntaxHighlighter/styles/shCore.css?1323190114

.syntaxhighlighter {
	BORDER-BOTTOM: 0px; POSITION: static !important; TEXT-ALIGN: left =
!important; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px !important; =
LINE-HEIGHT: 1.1em !important; FONT-STYLE: normal !important; MARGIN: =
0px; OUTLINE-STYLE: none !important; OUTLINE-COLOR: invert !important; =
MIN-HEIGHT: auto !important; PADDING-LEFT: 0px !important; =
OUTLINE-WIDTH: 0px !important; WIDTH: auto !important; BOTTOM: auto =
!important; PADDING-RIGHT: 0px !important; FONT-FAMILY: "Consolas", =
"Bitstream Vera Sans Mono", "Courier New", Courier, monospace =
!important; BACKGROUND: none transparent scroll repeat 0% 0%; FLOAT: =
none !important; HEIGHT: auto !important; FONT-SIZE: 1em !important; =
VERTICAL-ALIGN: baseline !important; BORDER-TOP: 0px; TOP: auto =
!important; RIGHT: auto !important; FONT-WEIGHT: normal !important; =
BORDER-RIGHT: 0px; PADDING-TOP: 0px !important; LEFT: auto !important
}
.syntaxhighlighter DIV {
	BORDER-BOTTOM: 0px; POSITION: static !important; TEXT-ALIGN: left =
!important; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px !important; =
LINE-HEIGHT: 1.1em !important; FONT-STYLE: normal !important; MARGIN: =
0px; OUTLINE-STYLE: none !important; OUTLINE-COLOR: invert !important; =
MIN-HEIGHT: auto !important; PADDING-LEFT: 0px !important; =
OUTLINE-WIDTH: 0px !important; WIDTH: auto !important; BOTTOM: auto =
!important; PADDING-RIGHT: 0px !important; FONT-FAMILY: "Consolas", =
"Bitstream Vera Sans Mono", "Courier New", Courier, monospace =
!important; BACKGROUND: none transparent scroll repeat 0% 0%; FLOAT: =
none !important; HEIGHT: auto !important; FONT-SIZE: 1em !important; =
VERTICAL-ALIGN: baseline !important; BORDER-TOP: 0px; TOP: auto =
!important; RIGHT: auto !important; FONT-WEIGHT: normal !important; =
BORDER-RIGHT: 0px; PADDING-TOP: 0px !important; LEFT: auto !important
}
.syntaxhighlighter CODE {
	BORDER-BOTTOM: 0px; POSITION: static !important; TEXT-ALIGN: left =
!important; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px !important; =
LINE-HEIGHT: 1.1em !important; FONT-STYLE: normal !important; MARGIN: =
0px; OUTLINE-STYLE: none !important; OUTLINE-COLOR: invert !important; =
MIN-HEIGHT: auto !important; PADDING-LEFT: 0px !important; =
OUTLINE-WIDTH: 0px !important; WIDTH: auto !important; BOTTOM: auto =
!important; PADDING-RIGHT: 0px !important; FONT-FAMILY: "Consolas", =
"Bitstream Vera Sans Mono", "Courier New", Courier, monospace =
!important; BACKGROUND: none transparent scroll repeat 0% 0%; FLOAT: =
none !important; HEIGHT: auto !important; FONT-SIZE: 1em !important; =
VERTICAL-ALIGN: baseline !important; BORDER-TOP: 0px; TOP: auto =
!important; RIGHT: auto !important; FONT-WEIGHT: normal !important; =
BORDER-RIGHT: 0px; PADDING-TOP: 0px !important; LEFT: auto !important
}
.syntaxhighlighter TABLE {
	BORDER-BOTTOM: 0px; POSITION: static !important; TEXT-ALIGN: left =
!important; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px !important; =
LINE-HEIGHT: 1.1em !important; FONT-STYLE: normal !important; MARGIN: =
0px; OUTLINE-STYLE: none !important; OUTLINE-COLOR: invert !important; =
MIN-HEIGHT: auto !important; PADDING-LEFT: 0px !important; =
OUTLINE-WIDTH: 0px !important; WIDTH: auto !important; BOTTOM: auto =
!important; PADDING-RIGHT: 0px !important; FONT-FAMILY: "Consolas", =
"Bitstream Vera Sans Mono", "Courier New", Courier, monospace =
!important; BACKGROUND: none transparent scroll repeat 0% 0%; FLOAT: =
none !important; HEIGHT: auto !important; FONT-SIZE: 1em !important; =
VERTICAL-ALIGN: baseline !important; BORDER-TOP: 0px; TOP: auto =
!important; RIGHT: auto !important; FONT-WEIGHT: normal !important; =
BORDER-RIGHT: 0px; PADDING-TOP: 0px !important; LEFT: auto !important
}
.syntaxhighlighter TABLE TD {
	BORDER-BOTTOM: 0px; POSITION: static !important; TEXT-ALIGN: left =
!important; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px !important; =
LINE-HEIGHT: 1.1em !important; FONT-STYLE: normal !important; MARGIN: =
0px; OUTLINE-STYLE: none !important; OUTLINE-COLOR: invert !important; =
MIN-HEIGHT: auto !important; PADDING-LEFT: 0px !important; =
OUTLINE-WIDTH: 0px !important; WIDTH: auto !important; BOTTOM: auto =
!important; PADDING-RIGHT: 0px !important; FONT-FAMILY: "Consolas", =
"Bitstream Vera Sans Mono", "Courier New", Courier, monospace =
!important; BACKGROUND: none transparent scroll repeat 0% 0%; FLOAT: =
none !important; HEIGHT: auto !important; FONT-SIZE: 1em !important; =
VERTICAL-ALIGN: baseline !important; BORDER-TOP: 0px; TOP: auto =
!important; RIGHT: auto !important; FONT-WEIGHT: normal !important; =
BORDER-RIGHT: 0px; PADDING-TOP: 0px !important; LEFT: auto !important
}
.syntaxhighlighter TABLE TR {
	BORDER-BOTTOM: 0px; POSITION: static !important; TEXT-ALIGN: left =
!important; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px !important; =
LINE-HEIGHT: 1.1em !important; FONT-STYLE: normal !important; MARGIN: =
0px; OUTLINE-STYLE: none !important; OUTLINE-COLOR: invert !important; =
MIN-HEIGHT: auto !important; PADDING-LEFT: 0px !important; =
OUTLINE-WIDTH: 0px !important; WIDTH: auto !important; BOTTOM: auto =
!important; PADDING-RIGHT: 0px !important; FONT-FAMILY: "Consolas", =
"Bitstream Vera Sans Mono", "Courier New", Courier, monospace =
!important; BACKGROUND: none transparent scroll repeat 0% 0%; FLOAT: =
none !important; HEIGHT: auto !important; FONT-SIZE: 1em !important; =
VERTICAL-ALIGN: baseline !important; BORDER-TOP: 0px; TOP: auto =
!important; RIGHT: auto !important; FONT-WEIGHT: normal !important; =
BORDER-RIGHT: 0px; PADDING-TOP: 0px !important; LEFT: auto !important
}
.syntaxhighlighter TABLE TBODY {
	BORDER-BOTTOM: 0px; POSITION: static !important; TEXT-ALIGN: left =
!important; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px !important; =
LINE-HEIGHT: 1.1em !important; FONT-STYLE: normal !important; MARGIN: =
0px; OUTLINE-STYLE: none !important; OUTLINE-COLOR: invert !important; =
MIN-HEIGHT: auto !important; PADDING-LEFT: 0px !important; =
OUTLINE-WIDTH: 0px !important; WIDTH: auto !important; BOTTOM: auto =
!important; PADDING-RIGHT: 0px !important; FONT-FAMILY: "Consolas", =
"Bitstream Vera Sans Mono", "Courier New", Courier, monospace =
!important; BACKGROUND: none transparent scroll repeat 0% 0%; FLOAT: =
none !important; HEIGHT: auto !important; FONT-SIZE: 1em !important; =
VERTICAL-ALIGN: baseline !important; BORDER-TOP: 0px; TOP: auto =
!important; RIGHT: auto !important; FONT-WEIGHT: normal !important; =
BORDER-RIGHT: 0px; PADDING-TOP: 0px !important; LEFT: auto !important
}
.syntaxhighlighter {
	POSITION: relative !important; PADDING-BOTTOM: 1px !important; MARGIN: =
1em 0px; PADDING-LEFT: 1px !important; WIDTH: 99% !important; =
PADDING-RIGHT: 1px !important; PADDING-TOP: 1px !important
}
.syntaxhighlighter .bold {
	FONT-WEIGHT: bold !important
}
.syntaxhighlighter .italic {
	FONT-STYLE: italic !important
}
.syntaxhighlighter .line {
=09
}
.syntaxhighlighter .no-wrap .line .content {
	WHITE-SPACE: pre !important
}
.syntaxhighlighter .line TABLE {
	BORDER-COLLAPSE: collapse !important
}
.syntaxhighlighter .line TD {
	VERTICAL-ALIGN: top !important
}
.syntaxhighlighter .line .number {
	WIDTH: 3em !important
}
.syntaxhighlighter .line .number CODE {
	TEXT-ALIGN: right !important; WIDTH: 2.7em !important; PADDING-RIGHT: =
0.3em !important; DISPLAY: block !important
}
.syntaxhighlighter .line .content {
	PADDING-LEFT: 0.5em !important
}
.syntaxhighlighter .line .spaces {
=09
}
.nogutter.syntaxhighlighter .line .content {
	BORDER-LEFT: medium none
}
.syntaxhighlighter .bar {
	DISPLAY: none !important
}
.syntaxhighlighter .show.bar {
	DISPLAY: block !important
}
.collapsed.syntaxhighlighter .bar {
	DISPLAY: block !important
}
.collapsed.syntaxhighlighter .lines {
	DISPLAY: none !important
}
.syntaxhighlighter .no-wrap.lines {
	OVERFLOW-Y: hidden !important; OVERFLOW: auto !important
}
.syntaxhighlighter .toolbar {
	POSITION: absolute !important; PADDING-BOTTOM: 8px !important; =
PADDING-LEFT: 0px !important; PADDING-RIGHT: 8px !important; FONT-SIZE: =
1px !important; TOP: 0px !important; RIGHT: 0px !important; PADDING-TOP: =
8px !important
}
.collapsed.syntaxhighlighter .toolbar {
	POSITION: static !important; PADDING-BOTTOM: 0.5em !important; =
PADDING-LEFT: 0.5em !important; PADDING-RIGHT: 0px !important; =
FONT-SIZE: 80% !important; PADDING-TOP: 0.2em !important
}
.syntaxhighlighter .toolbar A.item {
	TEXT-INDENT: -5000px !important; DISPLAY: block !important; =
BACKGROUND-REPEAT: no-repeat !important; FLOAT: left !important; =
MARGIN-LEFT: 8px !important; OVERFLOW: hidden !important
}
.syntaxhighlighter .toolbar .item {
	TEXT-INDENT: -5000px !important; DISPLAY: block !important; =
BACKGROUND-REPEAT: no-repeat !important; FLOAT: left !important; =
MARGIN-LEFT: 8px !important; OVERFLOW: hidden !important
}
.collapsed.syntaxhighlighter .toolbar .item {
	DISPLAY: none !important
}
.collapsed.syntaxhighlighter .toolbar .expandSource.item {
	BACKGROUND-IMAGE: url(magnifier.png) !important; TEXT-INDENT: 0px =
!important; PADDING-LEFT: 20px !important; WIDTH: auto !important; =
DISPLAY: inline !important; FLOAT: none !important; HEIGHT: 16px =
!important
}
.syntaxhighlighter .toolbar .viewSource.item {
	BACKGROUND-IMAGE: url(page_white_code.png) !important
}
.syntaxhighlighter .toolbar .printSource.item {
	BACKGROUND-IMAGE: url(printer.png) !important
}
.syntaxhighlighter .toolbar .copyToClipboard.item {
	TEXT-INDENT: 0px !important; BACKGROUND: none transparent scroll repeat =
0% 0%; OVERFLOW: visible !important
}
.syntaxhighlighter .toolbar .about.item {
	BACKGROUND-IMAGE: url(help.png) !important
}
.printing.syntaxhighlighter .line .number {
	COLOR: #bbb !important
}
.printing.syntaxhighlighter .line .content {
	COLOR: #000 !important
}
.printing.syntaxhighlighter .toolbar {
	DISPLAY: none !important
}
.printing.syntaxhighlighter A {
	TEXT-DECORATION: none !important
}
.printing.syntaxhighlighter .plain {
	COLOR: #000 !important
}
.printing.syntaxhighlighter .plain A {
	COLOR: #000 !important
}
.printing.syntaxhighlighter .comments {
	COLOR: #008200 !important
}
.printing.syntaxhighlighter .comments A {
	COLOR: #008200 !important
}
.printing.syntaxhighlighter .string {
	COLOR: blue !important
}
.printing.syntaxhighlighter .string A {
	COLOR: blue !important
}
.printing.syntaxhighlighter .keyword {
	COLOR: #069 !important; FONT-WEIGHT: bold !important
}
.printing.syntaxhighlighter .preprocessor {
	COLOR: gray !important
}
.printing.syntaxhighlighter .variable {
	COLOR: #a70 !important
}
.printing.syntaxhighlighter .value {
	COLOR: #090 !important
}
.printing.syntaxhighlighter .functions {
	COLOR: #ff1493 !important
}
.printing.syntaxhighlighter .constants {
	COLOR: #0066cc !important
}
.printing.syntaxhighlighter .script {
	FONT-WEIGHT: bold !important
}
.printing.syntaxhighlighter .color1 {
	COLOR: #808080 !important
}
.printing.syntaxhighlighter .color1 A {
	COLOR: #808080 !important
}
.printing.syntaxhighlighter .color2 {
	COLOR: #ff1493 !important
}
.printing.syntaxhighlighter .color2 A {
	COLOR: #ff1493 !important
}
.printing.syntaxhighlighter .color3 {
	COLOR: red !important
}
.printing.syntaxhighlighter .color3 A {
	COLOR: red !important
}

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/javascripts/syntaxHighlighter/styles/shThemeDefault.css?1323190114

.syntaxhighlighter {
	BACKGROUND-COLOR: #fff !important
}
.syntaxhighlighter .highlighted.line .number {
	COLOR: black !important
}
.syntaxhighlighter .alt1.highlighted.line {
	BACKGROUND-COLOR: #e0e0e0 !important
}
.syntaxhighlighter .alt2.highlighted.line {
	BACKGROUND-COLOR: #e0e0e0 !important
}
.syntaxhighlighter .line .number {
	COLOR: #afafaf !important
}
.syntaxhighlighter .line .content {
	BORDER-LEFT: #6ce26c 3px solid; COLOR: #000 !important
}
.printing.syntaxhighlighter .line .content {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
.syntaxhighlighter .alt1.line {
	BACKGROUND-COLOR: #fff !important
}
.syntaxhighlighter .alt2.line {
	BACKGROUND-COLOR: #f8f8f8 !important
}
.syntaxhighlighter .toolbar {
	BORDER-BOTTOM: #e7e5dc 1px solid; BORDER-LEFT: #e7e5dc 1px solid; =
BACKGROUND-COLOR: #f8f8f8 !important; BORDER-TOP: #e7e5dc 1px solid; =
BORDER-RIGHT: #e7e5dc 1px solid
}
.syntaxhighlighter .toolbar A {
	COLOR: #a0a0a0 !important
}
.syntaxhighlighter .toolbar A:hover {
	COLOR: red !important
}
.syntaxhighlighter .plain {
	COLOR: #000 !important
}
.syntaxhighlighter .plain A {
	COLOR: #000 !important
}
.syntaxhighlighter .comments {
	COLOR: #008200 !important
}
.syntaxhighlighter .comments A {
	COLOR: #008200 !important
}
.syntaxhighlighter .string {
	COLOR: blue !important
}
.syntaxhighlighter .string A {
	COLOR: blue !important
}
.syntaxhighlighter .keyword {
	COLOR: #069 !important; FONT-WEIGHT: bold !important
}
.syntaxhighlighter .preprocessor {
	COLOR: gray !important
}
.syntaxhighlighter .variable {
	COLOR: #a70 !important
}
.syntaxhighlighter .value {
	COLOR: #090 !important
}
.syntaxhighlighter .functions {
	COLOR: #ff1493 !important
}
.syntaxhighlighter .constants {
	COLOR: #0066cc !important
}
.syntaxhighlighter .script {
	BACKGROUND-COLOR: yellow !important
}
.syntaxhighlighter .color1 {
	COLOR: #808080 !important
}
.syntaxhighlighter .color1 A {
	COLOR: #808080 !important
}
.syntaxhighlighter .color2 {
	COLOR: #ff1493 !important
}
.syntaxhighlighter .color2 A {
	COLOR: #ff1493 !important
}
.syntaxhighlighter .color3 {
	COLOR: red !important
}
.syntaxhighlighter .color3 A {
	COLOR: red !important
}

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://pagead2.googlesyndication.com/pagead/show_ads.js

(function(){var g=3D!0,h=3Dnull,j=3D!1,k=3D(new Date).getTime();var =
m=3Dthis,aa=3Dfunction(a,b){var c=3Da.split("."),e=3Dm;!(c[0]in =
e)&&e.execScript&&e.execScript("var "+c[0]);for(var =
d;c.length&&(d=3Dc.shift());)!c.length&&void =
0!=3D=3Db?e[d]=3Db:e=3De[d]?e[d]:e[d]=3D{}},ba=3Dfunction(a,b,c){return =
a.call.apply(a.bind,arguments)},ca=3Dfunction(a,b,c){if(!a)throw =
Error();if(2<arguments.length){var =
e=3DArray.prototype.slice.call(arguments,2);return function(){var =
c=3DArray.prototype.slice.call(arguments);Array.prototype.unshift.apply(c=
,e);return a.apply(b,c)}}return function(){return a.apply(b,=0A=
arguments)}},n=3Dfunction(a,b,c){n=3DFunction.prototype.bind&&-1!=3DFunct=
ion.prototype.bind.toString().indexOf("native code")?ba:ca;return =
n.apply(h,arguments)};var =
da=3D/&/g,ea=3D/</g,ga=3D/>/g,ha=3D/\"/g,o=3D{"\x00":"\\0","\u0008":"\\b"=
,"\u000c":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\u000b":"\\x0B",'"':'\\=
"',"\\":"\\\\"},r=3D{"'":"\\'"},ja=3Dfunction(a){for(var =
b=3D0,c=3D(""+ia).replace(/^[\s\xa0]+|[\s\xa0]+$/g,"").split("."),a=3D(""=
+a).replace(/^[\s\xa0]+|[\s\xa0]+$/g,"").split("."),e=3DMath.max(c.length=
,a.length),d=3D0;0=3D=3Db&&d<e;d++){var =
f=3Dc[d]||"",qa=3Da[d]||"",v=3DRegExp("(\\d*)(\\D*)","g"),p=3DRegExp("(\\=
d*)(\\D*)","g");do{var =
i=3Dv.exec(f)||["","",""],l=3Dp.exec(qa)||["","",""];=0A=
if(0=3D=3Di[0].length&&0=3D=3Dl[0].length)break;b=3D((0=3D=3Di[1].length?=
0:parseInt(i[1],10))<(0=3D=3Dl[1].length?0:parseInt(l[1],10))?-1:(0=3D=3D=
i[1].length?0:parseInt(i[1],10))>(0=3D=3Dl[1].length?0:parseInt(l[1],10))=
?1:0)||((0=3D=3Di[2].length)<(0=3D=3Dl[2].length)?-1:(0=3D=3Di[2].length)=
>(0=3D=3Dl[2].length)?1:0)||(i[2]<l[2]?-1:i[2]>l[2]?1:0)}while(0=3D=3Db)}=
return b};var ka=3Ddocument,t=3Dwindow;var =
u=3Dfunction(a){return"true"=3D=3Da?g:"false"=3D=3Da?j:j},la=3D/^([\w-]+\=
.)*([\w-]{2,})(\:[0-9]+)?$/,w=3Dfunction(a){return!a?"pagead2.googlesyndi=
cation.com":(a=3Da.match(la))?a[0]:"pagead2.googlesyndication.com"};var =
x=3DparseFloat("0"),ma=3DisNaN(x)||1<x||0>x?0:x;var =
na=3Du("false"),oa=3Du("false"),pa=3Du("false"),ra=3Du("false");var =
sa=3Dfunction(){return w("")};var z,A,B,C,ta=3Dfunction(){return =
m.navigator?m.navigator.userAgent:h};C=3DB=3DA=3Dz=3Dj;var =
E;if(E=3Dta()){var =
ua=3Dm.navigator;z=3D0=3D=3DE.indexOf("Opera");A=3D!z&&-1!=3DE.indexOf("M=
SIE");B=3D!z&&-1!=3DE.indexOf("WebKit");C=3D!z&&!B&&"Gecko"=3D=3Dua.produ=
ct}var F=3DA,G=3DC,va=3DB,H;=0A=
a:{var I=3D"",J;if(z&&m.opera)var =
K=3Dm.opera.version,I=3D"function"=3D=3Dtypeof K?K():K;else =
if(G?J=3D/rv\:([^\);]+)(\)|;)/:F?J=3D/MSIE\s+([^\);]+)(\)|;)/:va&&(J=3D/W=
ebKit\/(\S+)/),J)var wa=3DJ.exec(ta()),I=3Dwa?wa[1]:"";if(F){var =
L,xa=3Dm.document;L=3Dxa?xa.documentMode:void =
0;if(L>parseFloat(I)){H=3D""+L;break a}}H=3DI}var =
ia=3DH,M=3D{},ya=3D{},za=3Dfunction(){return =
ya[9]||(ya[9]=3DF&&document.documentMode&&9<=3Ddocument.documentMode)};!F=
||za();if(G||F)if(!F||!za())G&&(M["1.9.1"]||(M["1.9.1"]=3D0<=3Dja("1.9.1"=
)));F&&(M["9"]||(M["9"]=3D0<=3Dja("9")));w("");var =
N=3Dfunction(a){return!!a&&"function"=3D=3Dtypeof =
a&&!!a.call},Aa=3Dfunction(a,b){if(!(2>arguments.length))for(var =
c=3D1,e=3Darguments.length;c<e;++c)a.push(arguments[c])};function =
O(a){return"function"=3D=3Dtypeof =
encodeURIComponent?encodeURIComponent(a):escape(a)}function =
Ba(a,b){a.addEventListener?a.addEventListener("load",b,j):a.attachEvent&&=
a.attachEvent("onload",b)};aa("google_protectAndRun",function(a,b,c){a=3D=
n(b,m,a);b=3Dwindow.onerror;window.onerror=3Da;try{c()}catch(e){var =
c=3De.toString(),d=3D"";e.fileName&&(d=3De.fileName);var =
f=3D-1;if(e.lineNumber)f=3De.lineNumber;if(!a(c,d,f))throw =
e;}window.onerror=3Db});=0A=
aa("google_handleError",function(a,b,c,e){if(0.01>Math.random())a=3D["htt=
p://",sa(),"/pagead/gen_204","?id=3Djserror","&jscb=3D",na?1:0,"&jscd=3D"=
,oa?1:0,"&context=3D",O(a),"&msg=3D",O(b),"&file=3D",O(c),"&line=3D",O(e.=
toString()),"&url=3D",O(ka.URL.substring(0,512)),"&ref=3D",O(ka.referrer.=
substring(0,512))],a.push(["&client=3D",O(t.google_ad_client),"&format=3D=
",O(t.google_ad_format),"&slotname=3D",O(t.google_ad_slot),"&output=3D",O=
(t.google_ad_output),"&ad_type=3D",O(t.google_ad_type)].join("")),a=3Da.j=
oin(""),t.google_image_requests||=0A=
(t.google_image_requests=3D[]),b=3Dt.document.createElement("img"),b.src=3D=
a,t.google_image_requests.push(b);return!pa});var =
Ca=3Dfunction(a){try{var =
b=3Da.google_test;a.google_test=3D!b;if(a.google_test=3D=3D=3D!b)return =
a.google_test=3Db,g}catch(c){}return =
j},Da=3Dh,Ea=3Dfunction(){if(!Da){for(var =
a=3Dwindow;a!=3Da.parent&&Ca(a.parent);)a=3Da.parent;Da=3Da}return =
Da};var =
P,Q=3Dfunction(a){this.c=3D[];this.a=3Da||window;this.b=3D0;this.d=3Dh},F=
a=3Dfunction(a,b){this.l=3Da;this.i=3Db};Q.prototype.n=3Dfunction(a,b){0=3D=
=3Dthis.b&&0=3D=3Dthis.c.length&&(!b||b=3D=3Dwindow)?(this.b=3D2,this.g(n=
ew =
Fa(a,window))):this.h(a,b)};Q.prototype.h=3Dfunction(a,b){this.c.push(new=
 =
Fa(a,b||this.a));Ga(this)};Q.prototype.o=3Dfunction(a){this.b=3D1;if(a)th=
is.d=3Dthis.a.setTimeout(n(this.f,this),a)};Q.prototype.f=3Dfunction(){if=
(1=3D=3Dthis.b){if(this.d!=3Dh)this.a.clearTimeout(this.d),this.d=3Dh;thi=
s.b=3D0}Ga(this)};=0A=
Q.prototype.p=3Dfunction(){return =
g};Q.prototype.nq=3DQ.prototype.n;Q.prototype.nqa=3DQ.prototype.h;Q.proto=
type.al=3DQ.prototype.o;Q.prototype.rl=3DQ.prototype.f;Q.prototype.sz=3DQ=
.prototype.p;var =
Ga=3Dfunction(a){a.a.setTimeout(n(a.m,a),0)};Q.prototype.m=3Dfunction(){i=
f(0=3D=3Dthis.b&&this.c.length){var =
a=3Dthis.c.shift();this.b=3D2;a.i.setTimeout(n(this.g,this,a),0);Ga(this)=
}};Q.prototype.g=3Dfunction(a){this.b=3D0;a.l()};=0A=
var Ha=3Dfunction(a){try{return a.sz()}catch(b){return =
j}},Ja=3Dfunction(a){return!!a&&("object"=3D=3Dtypeof =
a||"function"=3D=3Dtypeof =
a)&&Ha(a)&&N(a.nq)&&N(a.nqa)&&N(a.al)&&N(a.rl)},Ka=3Dfunction(){if(P&&Ha(=
P))return P;var a=3DEa(),b=3Da.google_jobrunner;return =
Ja(b)?P=3Db:a.google_jobrunner=3DP=3Dnew =
Q(a)},La=3Dfunction(a,b){Ka().nq(a,b)},Ma=3Dfunction(a,b){Ka().nqa(a,b)};=
var Na=3D/MSIE =
[2-7]|PlayStation|Gecko\/20090226/i,Oa=3D/Android|Opera/,Pa=3Dfunction(){=
var =
a=3DS,b=3DT.google_ad_width,c=3DT.google_ad_height,e=3D["<iframe"],d;for(=
d in =
a)a.hasOwnProperty(d)&&Aa(e,d+"=3D"+a[d]);e.push('style=3D"left:0;positio=
n:absolute;top:0;"');e.push("></iframe>");b=3D"border:none;height:"+c+"px=
;margin:0;padding:0;position:relative;visibility:visible;width:"+b+"px";r=
eturn['<ins style=3D"display:inline-table;',b,'"><ins =
id=3D"',a.id+"_anchor",'" style=3D"display:block;',b,'">',e.join(" =
"),"</ins></ins>"].join("")};var =
Qa=3Dfunction(){},Sa=3Dfunction(a,b,c){switch(typeof b){case =
"string":Ra(b,c);break;case =
"number":c.push(isFinite(b)&&!isNaN(b)?b:"null");break;case =
"boolean":c.push(b);break;case "undefined":c.push("null");break;case =
"object":if(b=3D=3Dh){c.push("null");break}if(b instanceof Array){var =
e=3Db.length;c.push("[");for(var =
d=3D"",f=3D0;f<e;f++)c.push(d),Sa(a,b[f],c),d=3D",";c.push("]");break}c.p=
ush("{");e=3D"";for(d in =
b)b.hasOwnProperty(d)&&(f=3Db[d],"function"!=3Dtypeof =
f&&(c.push(e),Ra(d,c),c.push(":"),Sa(a,f,c),e=3D=0A=
","));c.push("}");break;case "function":break;default:throw =
Error("Unknown type: "+typeof =
b);}},Ta=3D{'"':'\\"',"\\":"\\\\","/":"\\/","\u0008":"\\b","\u000c":"\\f"=
,"\n":"\\n","\r":"\\r","\t":"\\t","\u000b":"\\u000b"},Ua=3D/\uffff/.test(=
"\uffff")?/[\\\"\x00-\x1f\x7f-\uffff]/g:/[\\\"\x00-\x1f\x7f-\xff]/g,Ra=3D=
function(a,b){b.push('"');b.push(a.replace(Ua,function(a){if(a in =
Ta)return Ta[a];var =
b=3Da.charCodeAt(0),d=3D"\\u";16>b?d+=3D"000":256>b?d+=3D"00":4096>b&&(d+=
=3D"0");return Ta[a]=3Dd+b.toString(16)}));b.push('"')};var =
U=3D"google_ad_block,google_ad_channel,google_ad_client,google_ad_format,=
google_ad_height,google_ad_host,google_ad_host_channel,google_ad_host_tie=
r_id,google_ad_output,google_ad_override,google_ad_region,google_ad_secti=
on,google_ad_slot,google_ad_type,google_ad_width,google_adtest,google_all=
ow_expandable_ads,google_alternate_ad_url,google_alternate_color,google_a=
nalytics_domain_name,google_analytics_uacct,google_bid,google_city,google=
_color_bg,google_color_border,google_color_line,google_color_link,google_=
color_text,google_color_url,google_container_id,google_contents,google_co=
untry,google_cpm,google_ctr_threshold,google_cust_age,google_cust_ch,goog=
le_cust_gender,google_cust_id,google_cust_interests,google_cust_job,googl=
e_cust_l,google_cust_lh,google_cust_u_url,google_disable_video_autoplay,g=
oogle_ed,google_eids,google_enable_ose,google_encoding,google_font_face,g=
oogle_font_size,google_frame_id,google_gl,google_hints,google_image_size,=
google_kw,google_kw_type,google_language,google_max_num_ads,google_max_ra=
dlink_len,google_num_radlinks,google_num_radlinks_per_unit,google_num_slo=
ts_to_rotate,google_only_ads_with_video,google_only_pyv_ads,google_only_u=
serchoice_ads,google_override_format,google_page_url,google_previous_watc=
h,google_previous_searches,google_referrer_url,google_region,google_reuse=
_colors,google_rl_dest_url,google_rl_filtering,google_rl_mode,google_rt,g=
oogle_safe,google_scs,google_skip,google_tag_info,google_targeting,google=
_tfs,google_tl,google_ui_features,google_ui_version,google_video_doc_id,g=
oogle_video_product_type,google_with_pyv_ads".split(",");var =
V=3Dfunction(a){this.a=3Da;a.google_iframe_oncopy||(a.google_iframe_oncop=
y=3D{handlers:{},log:[],img:0.01>Math.random()?[]:h});this.e=3Da.google_i=
frame_oncopy;a.setTimeout(n(this.k,this),3E4)},Va;var W=3D"var =
i=3Dthis.id,s=3Dwindow.google_iframe_oncopy,H=3Ds&&s.handlers,h=3DH&&H[i]=
,w=3Dthis.contentWindow,d;try{d=3Dw.document}catch(e){}if(h&&d&&(!d.body|=
|!d.body.firstChild)){if(h.call){i+=3D'.call';setTimeout(h,0)}else =
if(h.match){i+=3D'.nav';w.location.replace(h)}s.log&&s.log.push(i)}";=0A=
/[&<>\"]/.test(W)&&(-1!=3DW.indexOf("&")&&(W=3DW.replace(da,"&amp;")),-1!=
=3DW.indexOf("<")&&(W=3DW.replace(ea,"&lt;")),-1!=3DW.indexOf(">")&&(W=3D=
W.replace(ga,"&gt;")),-1!=3DW.indexOf('"')&&(W=3DW.replace(ha,"&quot;")))=
;Va=3DW;V.prototype.set=3Dfunction(a,b){this.e.handlers[a]=3Db;this.a.add=
EventListener&&this.a.addEventListener("load",n(this.j,this,a),j)};V.prot=
otype.j=3Dfunction(a){var =
a=3Dthis.a.document.getElementById(a),b=3Da.contentWindow.document;if(a.o=
nload&&b&&(!b.body||!b.body.firstChild))a.onload()};=0A=
V.prototype.k=3Dfunction(){if(this.e.img){var =
a=3Dthis.e.log,b=3Dthis.a.document;if(a.length)b=3D["http://",sa(),"/page=
ad/gen_204?id=3Diframecopy&log=3D",O(a.join("-")),"&url=3D",O(b.URL.subst=
ring(0,512)),"&ref=3D",O(b.referrer.substring(0,512))].join(""),a.length=3D=
0,a=3Dnew Image,this.e.img.push(a),a.src=3Db}};var Wa=3Dfunction(){var =
a=3D"script",b=3Dw(""),c=3D"",c=3Dra?"https":"http";return["<",a,' =
src=3D"',[c,"://",b,"/pagead/js/r20111207/r20110914/show_ads_impl.js"].jo=
in(""),'"></',a,">"].join("")},Xa=3Dfunction(a,b,c,e){return =
function(){var d=3Dj;e&&Ka().al(3E4);try{var =
f;try{f=3D!!a.document.getElementById(b).contentWindow.document}catch(qa)=
{f=3Dj}if(f){var v=3D=0A=
a.document.getElementById(b).contentWindow,p=3Dv.document;if(!p.body||!p.=
body.firstChild)p.open(),v.google_async_iframe_close=3Dg,p.write(c)}else{=
var =
i=3Da.document.getElementById(b).contentWindow,l;f=3Dc;f=3D""+f;if(f.quot=
e)l=3Df.quote();else{v=3D['"'];for(p=3D0;p<f.length;p++){var =
R=3Df.charAt(p),Ia=3DR.charCodeAt(0),ob=3Dv,pb=3Dp+1,fa;if(!(fa=3Do[R])){=
var D;if(31<Ia&&127>Ia)D=3DR;else{var s=3DR;if(s in r)D=3Dr[s];else if(s =
in o)D=3Dr[s]=3Do[s];else{var =
q=3Ds,y=3Ds.charCodeAt(0);if(31<y&&127>y)q=3Ds;else{if(256>y){if(q=3D"\\x=
",16>y||256<=0A=
y)q+=3D"0"}else =
q=3D"\\u",4096>y&&(q+=3D"0");q+=3Dy.toString(16).toUpperCase()}D=3Dr[s]=3D=
q}}fa=3DD}ob[pb]=3Dfa}v.push('"');l=3Dv.join("")}i.location.replace("java=
script:"+l)}d=3Dg}catch(wb){i=3DEa().google_jobrunner,Ja(i)&&i.rl()}d&&(n=
ew =
V(a)).set(b,Xa(a,b,c,j))}};window.google_loader_used=3Dg;(function(a){if(=
!("google_onload_fired"in =
a))a.google_onload_fired=3Dj,Ba(a,function(){a.google_onload_fired=3Dg})}=
)(window);if(!window.google_loader_experiment){var Ya;a:{var =
Za=3D["async_bad_black","block_bad_black"];if(!(1.0E-4>Math.random())){va=
r =
$a=3DMath.random();if($a<ma){Ya=3DZa[Math.floor($a/ma*Za.length)];break =
a}}Ya=3Dh}window.google_loader_experiment=3DYa||""||"launch"}var ab;=0A=
a:{try{if(window.google_enable_async!=3D=3Dg&&"blockodd"=3D=3Dwindow.goog=
le_loader_experiment&&1=3D=3Dwindow.top.location.hostname.length%2){ab=3D=
j;break a}}catch(bb){}ab=3Dg}var cb;if(cb=3Dab){var =
db;if(window.google_enable_async=3D=3D=3Dj)db=3D0;else{var =
eb=3Dnavigator.userAgent,fb=3Dwindow.google_loader_experiment;db=3D(Na.te=
st(eb)?j:Oa.test(eb)?"async_bad_black"=3D=3Dfb:g)&&!window.google_contain=
er_id&&(!window.google_ad_output||"html"=3D=3Dwindow.google_ad_output)}cb=
=3Ddb}=0A=
if(cb){var =
gb=3Dwindow;gb.google_unique_id?++gb.google_unique_id:gb.google_unique_id=
=3D1;var =
X=3Dwindow;if(!X.google_slot_list||!X.google_slot_list.push)X.google_slot=
_list=3D[];X.google_slot_list.push([X.google_ad_slot||"",X.google_ad_form=
at||"",X.google_ad_width||"",X.google_ad_height||""].join("."));for(var =
Y=3Dwindow,_script$$inline_107=3D"script",Z,T=3DY,S=3D{allowtransparency:=
'"true"',frameborder:'"0"',height:'"'+Y.google_ad_height+'"',hspace:'"0"'=
,marginwidth:'"0"',marginheight:'"0"',onload:'"'+Va+'"',scrolling:'"no"',=0A=
vspace:'"0"',width:'"'+Y.google_ad_width+'"'},hb=3DT.document,$=3DS.id,ib=
=3D0;!$||T.document.getElementById($);)$=3D"aswift_"+ib++;S.id=3D$;S.name=
=3D$;hb.write(Pa());Z=3D$;var =
jb;Y.google_page_url&&(Y.google_page_url=3D""+Y.google_page_url);for(var =
kb=3D[],lb=3D0,mb=3DU.length;lb<mb;lb++){var =
nb=3DU[lb];if(Y[nb]!=3Dh){var qb;try{var rb=3D[];Sa(new =
Qa,Y[nb],rb);qb=3Drb.join("")}catch(sb){}qb&&Aa(kb,nb,"=3D",qb,";")}}jb=3D=
kb.join("");for(var tb=3D0,ub=3DU.length;tb<ub;tb++)Y[U[tb]]=3Dh;var =
vb=3D(new Date).getTime(),xb=3Dwindow.google_loader_experiment,=0A=
yb=3D["<!doctype =
html><html><body><",_script$$inline_107,">",jb,"google_show_ads_impl=3Dtr=
ue;google_unique_id=3D",Y.google_unique_id,';google_async_iframe_id=3D"',=
Z,'";google_start_time=3D',k,";",xb?'google_loader_experiment=3D"'+xb+'";=
':"","google_bpp=3D",vb>k?vb-k:1,";</",_script$$inline_107,">",Wa(),"</bo=
dy></html>"].join("");(Y.document.getElementById(Z)?La:Ma)(Xa(Y,Z,yb,g))}=
else window.q=3Dk,document.write(Wa());})();=0A=

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/javascripts/jquery.js?1323190114

/*!=0A=
 * jQuery JavaScript Library v1.4.2=0A=
 * http://jquery.com/=0A=
 *=0A=
 * Copyright 2010, John Resig=0A=
 * Dual licensed under the MIT or GPL Version 2 licenses.=0A=
 * http://jquery.org/license=0A=
 *=0A=
 * Includes Sizzle.js=0A=
 * http://sizzlejs.com/=0A=
 * Copyright 2010, The Dojo Foundation=0A=
 * Released under the MIT, BSD, and GPL Licenses.=0A=
 *=0A=
 * Date: Sat Feb 13 22:33:48 2010 -0500=0A=
 */=0A=
(function(A,w){function =
ma(){if(!c.isReady){try{s.documentElement.doScroll("left")}catch(a){setTi=
meout(ma,1);return}c.ready()}}function =
Qa(a,b){b.src?c.ajax({url:b.src,async:false,dataType:"script"}):c.globalE=
val(b.text||b.textContent||b.innerHTML||"");b.parentNode&&b.parentNode.re=
moveChild(b)}function X(a,b,d,f,e,j){var i=3Da.length;if(typeof =
b=3D=3D=3D"object"){for(var o in b)X(a,o,b[o],f,e,d);return =
a}if(d!=3D=3Dw){f=3D!j&&f&&c.isFunction(d);for(o=3D0;o<i;o++)e(a[o],b,f?d=
.call(a[o],o,e(a[o],b)):d,j);return a}return i?=0A=
e(a[0],b):w}function J(){return(new Date).getTime()}function Y(){return =
false}function Z(){return true}function na(a,b,d){d[0].type=3Da;return =
c.event.handle.apply(b,d)}function oa(a){var =
b,d=3D[],f=3D[],e=3Darguments,j,i,o,k,n,r;i=3Dc.data(this,"events");if(!(=
a.liveFired=3D=3D=3Dthis||!i||!i.live||a.button&&a.type=3D=3D=3D"click"))=
{a.liveFired=3Dthis;var =
u=3Di.live.slice(0);for(k=3D0;k<u.length;k++){i=3Du[k];i.origType.replace=
(O,"")=3D=3D=3Da.type?f.push(i.selector):u.splice(k--,1)}j=3Dc(a.target).=
closest(f,a.currentTarget);n=3D0;for(r=3D=0A=
j.length;n<r;n++)for(k=3D0;k<u.length;k++){i=3Du[k];if(j[n].selector=3D=3D=
=3Di.selector){o=3Dj[n].elem;f=3Dnull;if(i.preType=3D=3D=3D"mouseenter"||=
i.preType=3D=3D=3D"mouseleave")f=3Dc(a.relatedTarget).closest(i.selector)=
[0];if(!f||f!=3D=3Do)d.push({elem:o,handleObj:i})}}n=3D0;for(r=3Dd.length=
;n<r;n++){j=3Dd[n];a.currentTarget=3Dj.elem;a.data=3Dj.handleObj.data;a.h=
andleObj=3Dj.handleObj;if(j.handleObj.origHandler.apply(j.elem,e)=3D=3D=3D=
false){b=3Dfalse;break}}return b}}function =
pa(a,b){return"live."+(a&&a!=3D=3D"*"?a+".":"")+b.replace(/\./g,"`").repl=
ace(/ /g,=0A=
"&")}function =
qa(a){return!a||!a.parentNode||a.parentNode.nodeType=3D=3D=3D11}function =
ra(a,b){var =
d=3D0;b.each(function(){if(this.nodeName=3D=3D=3D(a[d]&&a[d].nodeName)){v=
ar f=3Dc.data(a[d++]),e=3Dc.data(this,f);if(f=3Df&&f.events){delete =
e.handle;e.events=3D{};for(var j in f)for(var i in =
f[j])c.event.add(this,j,f[j][i],f[j][i].data)}}})}function sa(a,b,d){var =
f,e,j;b=3Db&&b[0]?b[0].ownerDocument||b[0]:s;if(a.length=3D=3D=3D1&&typeo=
f =
a[0]=3D=3D=3D"string"&&a[0].length<512&&b=3D=3D=3Ds&&!ta.test(a[0])&&(c.s=
upport.checkClone||!ua.test(a[0]))){e=3D=0A=
true;if(j=3Dc.fragments[a[0]])if(j!=3D=3D1)f=3Dj}if(!f){f=3Db.createDocum=
entFragment();c.clean(a,b,f,d)}if(e)c.fragments[a[0]]=3Dj?f:1;return{frag=
ment:f,cacheable:e}}function K(a,b){var =
d=3D{};c.each(va.concat.apply([],va.slice(0,b)),function(){d[this]=3Da});=
return d}function wa(a){return"scrollTo"in =
a&&a.document?a:a.nodeType=3D=3D=3D9?a.defaultView||a.parentWindow:false}=
var c=3Dfunction(a,b){return new =
c.fn.init(a,b)},Ra=3DA.jQuery,Sa=3DA.$,s=3DA.document,T,Ta=3D/^[^<]*(<[\w=
\W]+>)[^>]*$|^#([\w-]+)$/,Ua=3D/^.[^:#\[\.,]*$/,Va=3D/\S/,=0A=
Wa=3D/^(\s|\u00A0)+|(\s|\u00A0)+$/g,Xa=3D/^<(\w+)\s*\/?>(?:<\/\1>)?$/,P=3D=
navigator.userAgent,xa=3Dfalse,Q=3D[],L,$=3DObject.prototype.toString,aa=3D=
Object.prototype.hasOwnProperty,ba=3DArray.prototype.push,R=3DArray.proto=
type.slice,ya=3DArray.prototype.indexOf;c.fn=3Dc.prototype=3D{init:functi=
on(a,b){var d,f;if(!a)return =
this;if(a.nodeType){this.context=3Dthis[0]=3Da;this.length=3D1;return =
this}if(a=3D=3D=3D"body"&&!b){this.context=3Ds;this[0]=3Ds.body;this.sele=
ctor=3D"body";this.length=3D1;return this}if(typeof =
a=3D=3D=3D"string")if((d=3DTa.exec(a))&&=0A=
(d[1]||!b))if(d[1]){f=3Db?b.ownerDocument||b:s;if(a=3DXa.exec(a))if(c.isP=
lainObject(b)){a=3D[s.createElement(a[1])];c.fn.attr.call(a,b,true)}else =
a=3D[f.createElement(a[1])];else{a=3Dsa([d[1]],[f]);a=3D(a.cacheable?a.fr=
agment.cloneNode(true):a.fragment).childNodes}return =
c.merge(this,a)}else{if(b=3Ds.getElementById(d[2])){if(b.id!=3D=3Dd[2])re=
turn =
T.find(a);this.length=3D1;this[0]=3Db}this.context=3Ds;this.selector=3Da;=
return this}else =
if(!b&&/^\w+$/.test(a)){this.selector=3Da;this.context=3Ds;a=3Ds.getEleme=
ntsByTagName(a);return c.merge(this,=0A=
a)}else return!b||b.jquery?(b||T).find(a):c(b).find(a);else =
if(c.isFunction(a))return =
T.ready(a);if(a.selector!=3D=3Dw){this.selector=3Da.selector;this.context=
=3Da.context}return =
c.makeArray(a,this)},selector:"",jquery:"1.4.2",length:0,size:function(){=
return this.length},toArray:function(){return =
R.call(this,0)},get:function(a){return =
a=3D=3Dnull?this.toArray():a<0?this.slice(a)[0]:this[a]},pushStack:functi=
on(a,b,d){var =
f=3Dc();c.isArray(a)?ba.apply(f,a):c.merge(f,a);f.prevObject=3Dthis;f.con=
text=3Dthis.context;if(b=3D=3D=3D=0A=
"find")f.selector=3Dthis.selector+(this.selector?" ":"")+d;else =
if(b)f.selector=3Dthis.selector+"."+b+"("+d+")";return =
f},each:function(a,b){return =
c.each(this,a,b)},ready:function(a){c.bindReady();if(c.isReady)a.call(s,c=
);else Q&&Q.push(a);return this},eq:function(a){return =
a=3D=3D=3D-1?this.slice(a):this.slice(a,+a+1)},first:function(){return =
this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return =
this.pushStack(R.apply(this,arguments),"slice",R.call(arguments).join(","=
))},map:function(a){return this.pushStack(c.map(this,=0A=
function(b,d){return a.call(b,d,b)}))},end:function(){return =
this.prevObject||c(null)},push:ba,sort:[].sort,splice:[].splice};c.fn.ini=
t.prototype=3Dc.fn;c.extend=3Dc.fn.extend=3Dfunction(){var =
a=3Darguments[0]||{},b=3D1,d=3Darguments.length,f=3Dfalse,e,j,i,o;if(type=
of a=3D=3D=3D"boolean"){f=3Da;a=3Darguments[1]||{};b=3D2}if(typeof =
a!=3D=3D"object"&&!c.isFunction(a))a=3D{};if(d=3D=3D=3Db){a=3Dthis;--b}fo=
r(;b<d;b++)if((e=3Darguments[b])!=3Dnull)for(j in =
e){i=3Da[j];o=3De[j];if(a!=3D=3Do)if(f&&o&&(c.isPlainObject(o)||c.isArray=
(o))){i=3Di&&(c.isPlainObject(i)||=0A=
c.isArray(i))?i:c.isArray(o)?[]:{};a[j]=3Dc.extend(f,i,o)}else =
if(o!=3D=3Dw)a[j]=3Do}return =
a};c.extend({noConflict:function(a){A.$=3DSa;if(a)A.jQuery=3DRa;return =
c},isReady:false,ready:function(){if(!c.isReady){if(!s.body)return =
setTimeout(c.ready,13);c.isReady=3Dtrue;if(Q){for(var =
a,b=3D0;a=3DQ[b++];)a.call(s,c);Q=3Dnull}c.fn.triggerHandler&&c(s).trigge=
rHandler("ready")}},bindReady:function(){if(!xa){xa=3Dtrue;if(s.readyStat=
e=3D=3D=3D"complete")return =
c.ready();if(s.addEventListener){s.addEventListener("DOMContentLoaded",=0A=
L,false);A.addEventListener("load",c.ready,false)}else =
if(s.attachEvent){s.attachEvent("onreadystatechange",L);A.attachEvent("on=
load",c.ready);var =
a=3Dfalse;try{a=3DA.frameElement=3D=3Dnull}catch(b){}s.documentElement.do=
Scroll&&a&&ma()}}},isFunction:function(a){return =
$.call(a)=3D=3D=3D"[object Function]"},isArray:function(a){return =
$.call(a)=3D=3D=3D"[object =
Array]"},isPlainObject:function(a){if(!a||$.call(a)!=3D=3D"[object =
Object]"||a.nodeType||a.setInterval)return =
false;if(a.constructor&&!aa.call(a,"constructor")&&!aa.call(a.constructor=
.prototype,=0A=
"isPrototypeOf"))return false;var b;for(b in a);return =
b=3D=3D=3Dw||aa.call(a,b)},isEmptyObject:function(a){for(var b in =
a)return false;return true},error:function(a){throw =
a;},parseJSON:function(a){if(typeof a!=3D=3D"string"||!a)return =
null;a=3Dc.trim(a);if(/^[\],:{}\s]*$/.test(a.replace(/\\(?:["\\\/bfnrt]|u=
[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\=
d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return =
A.JSON&&A.JSON.parse?A.JSON.parse(a):(new Function("return "+=0A=
a))();else c.error("Invalid JSON: =
"+a)},noop:function(){},globalEval:function(a){if(a&&Va.test(a)){var =
b=3Ds.getElementsByTagName("head")[0]||s.documentElement,d=3Ds.createElem=
ent("script");d.type=3D"text/javascript";if(c.support.scriptEval)d.append=
Child(s.createTextNode(a));else =
d.text=3Da;b.insertBefore(d,b.firstChild);b.removeChild(d)}},nodeName:fun=
ction(a,b){return =
a.nodeName&&a.nodeName.toUpperCase()=3D=3D=3Db.toUpperCase()},each:functi=
on(a,b,d){var =
f,e=3D0,j=3Da.length,i=3Dj=3D=3D=3Dw||c.isFunction(a);if(d)if(i)for(f in =
a){if(b.apply(a[f],=0A=
d)=3D=3D=3Dfalse)break}else =
for(;e<j;){if(b.apply(a[e++],d)=3D=3D=3Dfalse)break}else if(i)for(f in =
a){if(b.call(a[f],f,a[f])=3D=3D=3Dfalse)break}else =
for(d=3Da[0];e<j&&b.call(d,e,d)!=3D=3Dfalse;d=3Da[++e]);return =
a},trim:function(a){return(a||"").replace(Wa,"")},makeArray:function(a,b)=
{b=3Db||[];if(a!=3Dnull)a.length=3D=3Dnull||typeof =
a=3D=3D=3D"string"||c.isFunction(a)||typeof =
a!=3D=3D"function"&&a.setInterval?ba.call(b,a):c.merge(b,a);return =
b},inArray:function(a,b){if(b.indexOf)return b.indexOf(a);for(var =
d=3D0,f=3Db.length;d<f;d++)if(b[d]=3D=3D=3D=0A=
a)return d;return-1},merge:function(a,b){var =
d=3Da.length,f=3D0;if(typeof b.length=3D=3D=3D"number")for(var =
e=3Db.length;f<e;f++)a[d++]=3Db[f];else =
for(;b[f]!=3D=3Dw;)a[d++]=3Db[f++];a.length=3Dd;return =
a},grep:function(a,b,d){for(var =
f=3D[],e=3D0,j=3Da.length;e<j;e++)!d!=3D=3D!b(a[e],e)&&f.push(a[e]);retur=
n f},map:function(a,b,d){for(var =
f=3D[],e,j=3D0,i=3Da.length;j<i;j++){e=3Db(a[j],j,d);if(e!=3Dnull)f[f.len=
gth]=3De}return =
f.concat.apply([],f)},guid:1,proxy:function(a,b,d){if(arguments.length=3D=
=3D=3D2)if(typeof b=3D=3D=3D"string"){d=3Da;a=3Dd[b];b=3Dw}else if(b&&=0A=
!c.isFunction(b)){d=3Db;b=3Dw}if(!b&&a)b=3Dfunction(){return =
a.apply(d||this,arguments)};if(a)b.guid=3Da.guid=3Da.guid||b.guid||c.guid=
++;return b},uaMatch:function(a){a=3Da.toLowerCase();a=3D/(webkit)[ =
\/]([\w.]+)/.exec(a)||/(opera)(?:.*version)?[ =
\/]([\w.]+)/.exec(a)||/(msie) =
([\w.]+)/.exec(a)||!/compatible/.test(a)&&/(mozilla)(?:.*? =
rv:([\w.]+))?/.exec(a)||[];return{browser:a[1]||"",version:a[2]||"0"}},br=
owser:{}});P=3Dc.uaMatch(P);if(P.browser){c.browser[P.browser]=3Dtrue;c.b=
rowser.version=3DP.version}if(c.browser.webkit)c.browser.safari=3D=0A=
true;if(ya)c.inArray=3Dfunction(a,b){return =
ya.call(b,a)};T=3Dc(s);if(s.addEventListener)L=3Dfunction(){s.removeEvent=
Listener("DOMContentLoaded",L,false);c.ready()};else =
if(s.attachEvent)L=3Dfunction(){if(s.readyState=3D=3D=3D"complete"){s.det=
achEvent("onreadystatechange",L);c.ready()}};(function(){c.support=3D{};v=
ar =
a=3Ds.documentElement,b=3Ds.createElement("script"),d=3Ds.createElement("=
div"),f=3D"script"+J();d.style.display=3D"none";d.innerHTML=3D"   =
<link/><table></table><a href=3D'/a' =
style=3D'color:red;float:left;opacity:.55;'>a</a><input =
type=3D'checkbox'/>";=0A=
var =
e=3Dd.getElementsByTagName("*"),j=3Dd.getElementsByTagName("a")[0];if(!(!=
e||!e.length||!j)){c.support=3D{leadingWhitespace:d.firstChild.nodeType=3D=
=3D=3D3,tbody:!d.getElementsByTagName("tbody").length,htmlSerialize:!!d.g=
etElementsByTagName("link").length,style:/red/.test(j.getAttribute("style=
")),hrefNormalized:j.getAttribute("href")=3D=3D=3D"/a",opacity:/^0.55$/.t=
est(j.style.opacity),cssFloat:!!j.style.cssFloat,checkOn:d.getElementsByT=
agName("input")[0].value=3D=3D=3D"on",optSelected:s.createElement("select=
").appendChild(s.createElement("option")).selected,=0A=
parentNode:d.removeChild(d.appendChild(s.createElement("div"))).parentNod=
e=3D=3D=3Dnull,deleteExpando:true,checkClone:false,scriptEval:false,noClo=
neEvent:true,boxModel:null};b.type=3D"text/javascript";try{b.appendChild(=
s.createTextNode("window."+f+"=3D1;"))}catch(i){}a.insertBefore(b,a.first=
Child);if(A[f]){c.support.scriptEval=3Dtrue;delete A[f]}try{delete =
b.test}catch(o){c.support.deleteExpando=3Dfalse}a.removeChild(b);if(d.att=
achEvent&&d.fireEvent){d.attachEvent("onclick",function =
k(){c.support.noCloneEvent=3D=0A=
false;d.detachEvent("onclick",k)});d.cloneNode(true).fireEvent("onclick")=
}d=3Ds.createElement("div");d.innerHTML=3D"<input type=3D'radio' =
name=3D'radiotest' =
checked=3D'checked'/>";a=3Ds.createDocumentFragment();a.appendChild(d.fir=
stChild);c.support.checkClone=3Da.cloneNode(true).cloneNode(true).lastChi=
ld.checked;c(function(){var =
k=3Ds.createElement("div");k.style.width=3Dk.style.paddingLeft=3D"1px";s.=
body.appendChild(k);c.boxModel=3Dc.support.boxModel=3Dk.offsetWidth=3D=3D=
=3D2;s.body.removeChild(k).style.display=3D"none"});a=3Dfunction(k){var =
n=3D=0A=
s.createElement("div");k=3D"on"+k;var r=3Dk in =
n;if(!r){n.setAttribute(k,"return;");r=3Dtypeof =
n[k]=3D=3D=3D"function"}return =
r};c.support.submitBubbles=3Da("submit");c.support.changeBubbles=3Da("cha=
nge");a=3Db=3Dd=3De=3Dj=3Dnull}})();c.props=3D{"for":"htmlFor","class":"c=
lassName",readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpac=
ing",rowspan:"rowSpan",colspan:"colSpan",tabindex:"tabIndex",usemap:"useM=
ap",frameborder:"frameBorder"};var =
G=3D"jQuery"+J(),Ya=3D0,za=3D{};c.extend({cache:{},expando:G,noData:{embe=
d:true,object:true,=0A=
applet:true},data:function(a,b,d){if(!(a.nodeName&&c.noData[a.nodeName.to=
LowerCase()])){a=3Da=3D=3DA?za:a;var f=3Da[G],e=3Dc.cache;if(!f&&typeof =
b=3D=3D=3D"string"&&d=3D=3D=3Dw)return null;f||(f=3D++Ya);if(typeof =
b=3D=3D=3D"object"){a[G]=3Df;e[f]=3Dc.extend(true,{},b)}else =
if(!e[f]){a[G]=3Df;e[f]=3D{}}a=3De[f];if(d!=3D=3Dw)a[b]=3Dd;return =
typeof =
b=3D=3D=3D"string"?a[b]:a}},removeData:function(a,b){if(!(a.nodeName&&c.n=
oData[a.nodeName.toLowerCase()])){a=3Da=3D=3DA?za:a;var =
d=3Da[G],f=3Dc.cache,e=3Df[d];if(b){if(e){delete =
e[b];c.isEmptyObject(e)&&c.removeData(a)}}else{if(c.support.deleteExpando=
)delete a[c.expando];=0A=
else a.removeAttribute&&a.removeAttribute(c.expando);delete =
f[d]}}}});c.fn.extend({data:function(a,b){if(typeof =
a=3D=3D=3D"undefined"&&this.length)return c.data(this[0]);else if(typeof =
a=3D=3D=3D"object")return this.each(function(){c.data(this,a)});var =
d=3Da.split(".");d[1]=3Dd[1]?"."+d[1]:"";if(b=3D=3D=3Dw){var =
f=3Dthis.triggerHandler("getData"+d[1]+"!",[d[0]]);if(f=3D=3D=3Dw&&this.l=
ength)f=3Dc.data(this[0],a);return =
f=3D=3D=3Dw&&d[1]?this.data(d[0]):f}else return =
this.trigger("setData"+d[1]+"!",[d[0],b]).each(function(){c.data(this,=0A=
a,b)})},removeData:function(a){return =
this.each(function(){c.removeData(this,a)})}});c.extend({queue:function(a=
,b,d){if(a){b=3D(b||"fx")+"queue";var f=3Dc.data(a,b);if(!d)return =
f||[];if(!f||c.isArray(d))f=3Dc.data(a,b,c.makeArray(d));else =
f.push(d);return f}},dequeue:function(a,b){b=3Db||"fx";var =
d=3Dc.queue(a,b),f=3Dd.shift();if(f=3D=3D=3D"inprogress")f=3Dd.shift();if=
(f){b=3D=3D=3D"fx"&&d.unshift("inprogress");f.call(a,function(){c.dequeue=
(a,b)})}}});c.fn.extend({queue:function(a,b){if(typeof =
a!=3D=3D"string"){b=3Da;a=3D"fx"}if(b=3D=3D=3D=0A=
w)return c.queue(this[0],a);return this.each(function(){var =
d=3Dc.queue(this,a,b);a=3D=3D=3D"fx"&&d[0]!=3D=3D"inprogress"&&c.dequeue(=
this,a)})},dequeue:function(a){return =
this.each(function(){c.dequeue(this,a)})},delay:function(a,b){a=3Dc.fx?c.=
fx.speeds[a]||a:a;b=3Db||"fx";return this.queue(b,function(){var =
d=3Dthis;setTimeout(function(){c.dequeue(d,b)},a)})},clearQueue:function(=
a){return this.queue(a||"fx",[])}});var =
Aa=3D/[\n\t]/g,ca=3D/\s+/,Za=3D/\r/g,$a=3D/href|src|style/,ab=3D/(button|=
input)/i,bb=3D/(button|input|object|select|textarea)/i,=0A=
cb=3D/^(a|area)$/i,Ba=3D/radio|checkbox/;c.fn.extend({attr:function(a,b){=
return X(this,a,b,true,c.attr)},removeAttr:function(a){return =
this.each(function(){c.attr(this,a,"");this.nodeType=3D=3D=3D1&&this.remo=
veAttribute(a)})},addClass:function(a){if(c.isFunction(a))return =
this.each(function(n){var =
r=3Dc(this);r.addClass(a.call(this,n,r.attr("class")))});if(a&&typeof =
a=3D=3D=3D"string")for(var =
b=3D(a||"").split(ca),d=3D0,f=3Dthis.length;d<f;d++){var =
e=3Dthis[d];if(e.nodeType=3D=3D=3D1)if(e.className){for(var j=3D" =
"+e.className+" ",=0A=
i=3De.className,o=3D0,k=3Db.length;o<k;o++)if(j.indexOf(" "+b[o]+" =
")<0)i+=3D" "+b[o];e.className=3Dc.trim(i)}else e.className=3Da}return =
this},removeClass:function(a){if(c.isFunction(a))return =
this.each(function(k){var =
n=3Dc(this);n.removeClass(a.call(this,k,n.attr("class")))});if(a&&typeof =
a=3D=3D=3D"string"||a=3D=3D=3Dw)for(var =
b=3D(a||"").split(ca),d=3D0,f=3Dthis.length;d<f;d++){var =
e=3Dthis[d];if(e.nodeType=3D=3D=3D1&&e.className)if(a){for(var j=3D(" =
"+e.className+" ").replace(Aa," =
"),i=3D0,o=3Db.length;i<o;i++)j=3Dj.replace(" "+b[i]+" ",=0A=
" ");e.className=3Dc.trim(j)}else e.className=3D""}return =
this},toggleClass:function(a,b){var d=3Dtypeof a,f=3Dtypeof =
b=3D=3D=3D"boolean";if(c.isFunction(a))return this.each(function(e){var =
j=3Dc(this);j.toggleClass(a.call(this,e,j.attr("class"),b),b)});return =
this.each(function(){if(d=3D=3D=3D"string")for(var =
e,j=3D0,i=3Dc(this),o=3Db,k=3Da.split(ca);e=3Dk[j++];){o=3Df?o:!i.hasClas=
s(e);i[o?"addClass":"removeClass"](e)}else =
if(d=3D=3D=3D"undefined"||d=3D=3D=3D"boolean"){this.className&&c.data(thi=
s,"__className__",this.className);this.className=3D=0A=
this.className||a=3D=3D=3Dfalse?"":c.data(this,"__className__")||""}})},h=
asClass:function(a){a=3D" "+a+" ";for(var =
b=3D0,d=3Dthis.length;b<d;b++)if((" "+this[b].className+" =
").replace(Aa," ").indexOf(a)>-1)return true;return =
false},val:function(a){if(a=3D=3D=3Dw){var =
b=3Dthis[0];if(b){if(c.nodeName(b,"option"))return(b.attributes.value||{}=
).specified?b.value:b.text;if(c.nodeName(b,"select")){var =
d=3Db.selectedIndex,f=3D[],e=3Db.options;b=3Db.type=3D=3D=3D"select-one";=
if(d<0)return null;var j=3Db?d:0;for(d=3Db?d+1:e.length;j<d;j++){var i=3D=0A=
e[j];if(i.selected){a=3Dc(i).val();if(b)return a;f.push(a)}}return =
f}if(Ba.test(b.type)&&!c.support.checkOn)return =
b.getAttribute("value")=3D=3D=3Dnull?"on":b.value;return(b.value||"").rep=
lace(Za,"")}return w}var o=3Dc.isFunction(a);return =
this.each(function(k){var =
n=3Dc(this),r=3Da;if(this.nodeType=3D=3D=3D1){if(o)r=3Da.call(this,k,n.va=
l());if(typeof =
r=3D=3D=3D"number")r+=3D"";if(c.isArray(r)&&Ba.test(this.type))this.check=
ed=3Dc.inArray(n.val(),r)>=3D0;else if(c.nodeName(this,"select")){var =
u=3Dc.makeArray(r);c("option",this).each(function(){this.selected=3D=0A=
c.inArray(c(this).val(),u)>=3D0});if(!u.length)this.selectedIndex=3D-1}el=
se =
this.value=3Dr}})}});c.extend({attrFn:{val:true,css:true,html:true,text:t=
rue,data:true,width:true,height:true,offset:true},attr:function(a,b,d,f){=
if(!a||a.nodeType=3D=3D=3D3||a.nodeType=3D=3D=3D8)return w;if(f&&b in =
c.attrFn)return c(a)[b](d);f=3Da.nodeType!=3D=3D1||!c.isXMLDoc(a);var =
e=3Dd!=3D=3Dw;b=3Df&&c.props[b]||b;if(a.nodeType=3D=3D=3D1){var =
j=3D$a.test(b);if(b in =
a&&f&&!j){if(e){b=3D=3D=3D"type"&&ab.test(a.nodeName)&&a.parentNode&&c.er=
ror("type property can't be changed");=0A=
a[b]=3Dd}if(c.nodeName(a,"form")&&a.getAttributeNode(b))return =
a.getAttributeNode(b).nodeValue;if(b=3D=3D=3D"tabIndex")return(b=3Da.getA=
ttributeNode("tabIndex"))&&b.specified?b.value:bb.test(a.nodeName)||cb.te=
st(a.nodeName)&&a.href?0:w;return =
a[b]}if(!c.support.style&&f&&b=3D=3D=3D"style"){if(e)a.style.cssText=3D""=
+d;return =
a.style.cssText}e&&a.setAttribute(b,""+d);a=3D!c.support.hrefNormalized&&=
f&&j?a.getAttribute(b,2):a.getAttribute(b);return =
a=3D=3D=3Dnull?w:a}return c.style(a,b,d)}});var =
O=3D/\.(.*)$/,db=3Dfunction(a){return a.replace(/[^\w\s\.\|`]/g,=0A=
function(b){return"\\"+b})};c.event=3D{add:function(a,b,d,f){if(!(a.nodeT=
ype=3D=3D=3D3||a.nodeType=3D=3D=3D8)){if(a.setInterval&&a!=3D=3DA&&!a.fra=
meElement)a=3DA;var =
e,j;if(d.handler){e=3Dd;d=3De.handler}if(!d.guid)d.guid=3Dc.guid++;if(j=3D=
c.data(a)){var =
i=3Dj.events=3Dj.events||{},o=3Dj.handle;if(!o)j.handle=3Do=3Dfunction(){=
return typeof =
c!=3D=3D"undefined"&&!c.event.triggered?c.event.handle.apply(o.elem,argum=
ents):w};o.elem=3Da;b=3Db.split(" ");for(var =
k,n=3D0,r;k=3Db[n++];){j=3De?c.extend({},e):{handler:d,data:f};if(k.index=
Of(".")>-1){r=3Dk.split(".");=0A=
k=3Dr.shift();j.namespace=3Dr.slice(0).sort().join(".")}else{r=3D[];j.nam=
espace=3D""}j.type=3Dk;j.guid=3Dd.guid;var =
u=3Di[k],z=3Dc.event.special[k]||{};if(!u){u=3Di[k]=3D[];if(!z.setup||z.s=
etup.call(a,f,r,o)=3D=3D=3Dfalse)if(a.addEventListener)a.addEventListener=
(k,o,false);else =
a.attachEvent&&a.attachEvent("on"+k,o)}if(z.add){z.add.call(a,j);if(!j.ha=
ndler.guid)j.handler.guid=3Dd.guid}u.push(j);c.event.global[k]=3Dtrue}a=3D=
null}}},global:{},remove:function(a,b,d,f){if(!(a.nodeType=3D=3D=3D3||a.n=
odeType=3D=3D=3D8)){var e,j=3D0,i,o,k,n,r,u,z=3Dc.data(a),=0A=
C=3Dz&&z.events;if(z&&C){if(b&&b.type){d=3Db.handler;b=3Db.type}if(!b||ty=
peof b=3D=3D=3D"string"&&b.charAt(0)=3D=3D=3D"."){b=3Db||"";for(e in =
C)c.event.remove(a,e+b)}else{for(b=3Db.split(" =
");e=3Db[j++];){n=3De;i=3De.indexOf(".")<0;o=3D[];if(!i){o=3De.split(".")=
;e=3Do.shift();k=3Dnew =
RegExp("(^|\\.)"+c.map(o.slice(0).sort(),db).join("\\.(?:.*\\.)?")+"(\\.|=
$)")}if(r=3DC[e])if(d){n=3Dc.event.special[e]||{};for(B=3Df||0;B<r.length=
;B++){u=3Dr[B];if(d.guid=3D=3D=3Du.guid){if(i||k.test(u.namespace)){f=3D=3D=
null&&r.splice(B--,1);n.remove&&n.remove.call(a,u)}if(f!=3D=0A=
null)break}}if(r.length=3D=3D=3D0||f!=3Dnull&&r.length=3D=3D=3D1){if(!n.t=
eardown||n.teardown.call(a,o)=3D=3D=3Dfalse)Ca(a,e,z.handle);delete =
C[e]}}else for(var =
B=3D0;B<r.length;B++){u=3Dr[B];if(i||k.test(u.namespace)){c.event.remove(=
a,n,u.handler,B);r.splice(B--,1)}}}if(c.isEmptyObject(C)){if(b=3Dz.handle=
)b.elem=3Dnull;delete z.events;delete =
z.handle;c.isEmptyObject(z)&&c.removeData(a)}}}}},trigger:function(a,b,d,=
f){var e=3Da.type||a;if(!f){a=3Dtypeof =
a=3D=3D=3D"object"?a[G]?a:c.extend(c.Event(e),a):c.Event(e);if(e.indexOf(=
"!")>=3D0){a.type=3D=0A=
e=3De.slice(0,-1);a.exclusive=3Dtrue}if(!d){a.stopPropagation();c.event.g=
lobal[e]&&c.each(c.cache,function(){this.events&&this.events[e]&&c.event.=
trigger(a,b,this.handle.elem)})}if(!d||d.nodeType=3D=3D=3D3||d.nodeType=3D=
=3D=3D8)return =
w;a.result=3Dw;a.target=3Dd;b=3Dc.makeArray(b);b.unshift(a)}a.currentTarg=
et=3Dd;(f=3Dc.data(d,"handle"))&&f.apply(d,b);f=3Dd.parentNode||d.ownerDo=
cument;try{if(!(d&&d.nodeName&&c.noData[d.nodeName.toLowerCase()]))if(d["=
on"+e]&&d["on"+e].apply(d,b)=3D=3D=3Dfalse)a.result=3Dfalse}catch(j){}if(=
!a.isPropagationStopped()&&=0A=
f)c.event.trigger(a,b,f,true);else =
if(!a.isDefaultPrevented()){f=3Da.target;var =
i,o=3Dc.nodeName(f,"a")&&e=3D=3D=3D"click",k=3Dc.event.special[e]||{};if(=
(!k._default||k._default.call(d,a)=3D=3D=3Dfalse)&&!o&&!(f&&f.nodeName&&c=
.noData[f.nodeName.toLowerCase()])){try{if(f[e]){if(i=3Df["on"+e])f["on"+=
e]=3Dnull;c.event.triggered=3Dtrue;f[e]()}}catch(n){}if(i)f["on"+e]=3Di;c=
.event.triggered=3Dfalse}}},handle:function(a){var =
b,d,f,e;a=3Darguments[0]=3Dc.event.fix(a||A.event);a.currentTarget=3Dthis=
;b=3Da.type.indexOf(".")<0&&!a.exclusive;=0A=
if(!b){d=3Da.type.split(".");a.type=3Dd.shift();f=3Dnew =
RegExp("(^|\\.)"+d.slice(0).sort().join("\\.(?:.*\\.)?")+"(\\.|$)")}e=3Dc=
.data(this,"events");d=3De[a.type];if(e&&d){d=3Dd.slice(0);e=3D0;for(var =
j=3Dd.length;e<j;e++){var =
i=3Dd[e];if(b||f.test(i.namespace)){a.handler=3Di.handler;a.data=3Di.data=
;a.handleObj=3Di;i=3Di.handler.apply(this,arguments);if(i!=3D=3Dw){a.resu=
lt=3Di;if(i=3D=3D=3Dfalse){a.preventDefault();a.stopPropagation()}}if(a.i=
sImmediatePropagationStopped())break}}}return a.result},props:"altKey =
attrChange attrName bubbles button cancelable charCode clientX clientY =
ctrlKey currentTarget data detail eventPhase fromElement handler keyCode =
layerX layerY metaKey newValue offsetX offsetY originalTarget pageX =
pageY prevValue relatedNode relatedTarget screenX screenY shiftKey =
srcElement target toElement view wheelDelta which".split(" "),=0A=
fix:function(a){if(a[G])return a;var b=3Da;a=3Dc.Event(b);for(var =
d=3Dthis.props.length,f;d;){f=3Dthis.props[--d];a[f]=3Db[f]}if(!a.target)=
a.target=3Da.srcElement||s;if(a.target.nodeType=3D=3D=3D3)a.target=3Da.ta=
rget.parentNode;if(!a.relatedTarget&&a.fromElement)a.relatedTarget=3Da.fr=
omElement=3D=3D=3Da.target?a.toElement:a.fromElement;if(a.pageX=3D=3Dnull=
&&a.clientX!=3Dnull){b=3Ds.documentElement;d=3Ds.body;a.pageX=3Da.clientX=
+(b&&b.scrollLeft||d&&d.scrollLeft||0)-(b&&b.clientLeft||d&&d.clientLeft|=
|0);a.pageY=3Da.clientY+(b&&b.scrollTop||=0A=
d&&d.scrollTop||0)-(b&&b.clientTop||d&&d.clientTop||0)}if(!a.which&&(a.ch=
arCode||a.charCode=3D=3D=3D0?a.charCode:a.keyCode))a.which=3Da.charCode||=
a.keyCode;if(!a.metaKey&&a.ctrlKey)a.metaKey=3Da.ctrlKey;if(!a.which&&a.b=
utton!=3D=3Dw)a.which=3Da.button&1?1:a.button&2?3:a.button&4?2:0;return =
a},guid:1E8,proxy:c.proxy,special:{ready:{setup:c.bindReady,teardown:c.no=
op},live:{add:function(a){c.event.add(this,a.origType,c.extend({},a,{hand=
ler:oa}))},remove:function(a){var =
b=3Dtrue,d=3Da.origType.replace(O,"");c.each(c.data(this,=0A=
"events").live||[],function(){if(d=3D=3D=3Dthis.origType.replace(O,""))re=
turn =
b=3Dfalse});b&&c.event.remove(this,a.origType,oa)}},beforeunload:{setup:f=
unction(a,b,d){if(this.setInterval)this.onbeforeunload=3Dd;return =
false},teardown:function(a,b){if(this.onbeforeunload=3D=3D=3Db)this.onbef=
oreunload=3Dnull}}}};var =
Ca=3Ds.removeEventListener?function(a,b,d){a.removeEventListener(b,d,fals=
e)}:function(a,b,d){a.detachEvent("on"+b,d)};c.Event=3Dfunction(a){if(!th=
is.preventDefault)return new c.Event(a);if(a&&a.type){this.originalEvent=3D=0A=
a;this.type=3Da.type}else =
this.type=3Da;this.timeStamp=3DJ();this[G]=3Dtrue};c.Event.prototype=3D{p=
reventDefault:function(){this.isDefaultPrevented=3DZ;var =
a=3Dthis.originalEvent;if(a){a.preventDefault&&a.preventDefault();a.retur=
nValue=3Dfalse}},stopPropagation:function(){this.isPropagationStopped=3DZ=
;var =
a=3Dthis.originalEvent;if(a){a.stopPropagation&&a.stopPropagation();a.can=
celBubble=3Dtrue}},stopImmediatePropagation:function(){this.isImmediatePr=
opagationStopped=3DZ;this.stopPropagation()},isDefaultPrevented:Y,isPropa=
gationStopped:Y,=0A=
isImmediatePropagationStopped:Y};var Da=3Dfunction(a){var =
b=3Da.relatedTarget;try{for(;b&&b!=3D=3Dthis;)b=3Db.parentNode;if(b!=3D=3D=
this){a.type=3Da.data;c.event.handle.apply(this,arguments)}}catch(d){}},E=
a=3Dfunction(a){a.type=3Da.data;c.event.handle.apply(this,arguments)};c.e=
ach({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){c.event.=
special[a]=3D{setup:function(d){c.event.add(this,b,d&&d.selector?Ea:Da,a)=
},teardown:function(d){c.event.remove(this,b,d&&d.selector?Ea:Da)}}});if(=
!c.support.submitBubbles)c.event.special.submit=3D=0A=
{setup:function(){if(this.nodeName.toLowerCase()!=3D=3D"form"){c.event.ad=
d(this,"click.specialSubmit",function(a){var =
b=3Da.target,d=3Db.type;if((d=3D=3D=3D"submit"||d=3D=3D=3D"image")&&c(b).=
closest("form").length)return =
na("submit",this,arguments)});c.event.add(this,"keypress.specialSubmit",f=
unction(a){var =
b=3Da.target,d=3Db.type;if((d=3D=3D=3D"text"||d=3D=3D=3D"password")&&c(b)=
.closest("form").length&&a.keyCode=3D=3D=3D13)return =
na("submit",this,arguments)})}else return =
false},teardown:function(){c.event.remove(this,".specialSubmit")}};=0A=
if(!c.support.changeBubbles){var =
da=3D/textarea|input|select/i,ea,Fa=3Dfunction(a){var =
b=3Da.type,d=3Da.value;if(b=3D=3D=3D"radio"||b=3D=3D=3D"checkbox")d=3Da.c=
hecked;else =
if(b=3D=3D=3D"select-multiple")d=3Da.selectedIndex>-1?c.map(a.options,fun=
ction(f){return f.selected}).join("-"):"";else =
if(a.nodeName.toLowerCase()=3D=3D=3D"select")d=3Da.selectedIndex;return =
d},fa=3Dfunction(a,b){var =
d=3Da.target,f,e;if(!(!da.test(d.nodeName)||d.readOnly)){f=3Dc.data(d,"_c=
hange_data");e=3DFa(d);if(a.type!=3D=3D"focusout"||d.type!=3D=3D"radio")c=
.data(d,"_change_data",=0A=
e);if(!(f=3D=3D=3Dw||e=3D=3D=3Df))if(f!=3Dnull||e){a.type=3D"change";retu=
rn =
c.event.trigger(a,b,d)}}};c.event.special.change=3D{filters:{focusout:fa,=
click:function(a){var =
b=3Da.target,d=3Db.type;if(d=3D=3D=3D"radio"||d=3D=3D=3D"checkbox"||b.nod=
eName.toLowerCase()=3D=3D=3D"select")return =
fa.call(this,a)},keydown:function(a){var =
b=3Da.target,d=3Db.type;if(a.keyCode=3D=3D=3D13&&b.nodeName.toLowerCase()=
!=3D=3D"textarea"||a.keyCode=3D=3D=3D32&&(d=3D=3D=3D"checkbox"||d=3D=3D=3D=
"radio")||d=3D=3D=3D"select-multiple")return =
fa.call(this,a)},beforeactivate:function(a){a=3Da.target;c.data(a,=0A=
"_change_data",Fa(a))}},setup:function(){if(this.type=3D=3D=3D"file")retu=
rn false;for(var a in =
ea)c.event.add(this,a+".specialChange",ea[a]);return =
da.test(this.nodeName)},teardown:function(){c.event.remove(this,".special=
Change");return =
da.test(this.nodeName)}};ea=3Dc.event.special.change.filters}s.addEventLi=
stener&&c.each({focus:"focusin",blur:"focusout"},function(a,b){function =
d(f){f=3Dc.event.fix(f);f.type=3Db;return =
c.event.handle.call(this,f)}c.event.special[b]=3D{setup:function(){this.a=
ddEventListener(a,=0A=
d,true)},teardown:function(){this.removeEventListener(a,d,true)}}});c.eac=
h(["bind","one"],function(a,b){c.fn[b]=3Dfunction(d,f,e){if(typeof =
d=3D=3D=3D"object"){for(var j in d)this[b](j,f,d[j],e);return =
this}if(c.isFunction(f)){e=3Df;f=3Dw}var =
i=3Db=3D=3D=3D"one"?c.proxy(e,function(k){c(this).unbind(k,i);return =
e.apply(this,arguments)}):e;if(d=3D=3D=3D"unload"&&b!=3D=3D"one")this.one=
(d,f,e);else{j=3D0;for(var =
o=3Dthis.length;j<o;j++)c.event.add(this[j],d,i,f)}return =
this}});c.fn.extend({unbind:function(a,b){if(typeof a=3D=3D=3D"object"&&=0A=
!a.preventDefault)for(var d in a)this.unbind(d,a[d]);else{d=3D0;for(var =
f=3Dthis.length;d<f;d++)c.event.remove(this[d],a,b)}return =
this},delegate:function(a,b,d,f){return =
this.live(b,d,f,a)},undelegate:function(a,b,d){return =
arguments.length=3D=3D=3D0?this.unbind("live"):this.die(b,null,d,a)},trig=
ger:function(a,b){return =
this.each(function(){c.event.trigger(a,b,this)})},triggerHandler:function=
(a,b){if(this[0]){a=3Dc.Event(a);a.preventDefault();a.stopPropagation();c=
.event.trigger(a,b,this[0]);return a.result}},=0A=
toggle:function(a){for(var =
b=3Darguments,d=3D1;d<b.length;)c.proxy(a,b[d++]);return =
this.click(c.proxy(a,function(f){var =
e=3D(c.data(this,"lastToggle"+a.guid)||0)%d;c.data(this,"lastToggle"+a.gu=
id,e+1);f.preventDefault();return =
b[e].apply(this,arguments)||false}))},hover:function(a,b){return =
this.mouseenter(a).mouseleave(b||a)}});var =
Ga=3D{focus:"focusin",blur:"focusout",mouseenter:"mouseover",mouseleave:"=
mouseout"};c.each(["live","die"],function(a,b){c.fn[b]=3Dfunction(d,f,e,j=
){var i,o=3D0,k,n,r=3Dj||this.selector,=0A=
u=3Dj?this:c(this.context);if(c.isFunction(f)){e=3Df;f=3Dw}for(d=3D(d||""=
).split(" =
");(i=3Dd[o++])!=3Dnull;){j=3DO.exec(i);k=3D"";if(j){k=3Dj[0];i=3Di.repla=
ce(O,"")}if(i=3D=3D=3D"hover")d.push("mouseenter"+k,"mouseleave"+k);else{=
n=3Di;if(i=3D=3D=3D"focus"||i=3D=3D=3D"blur"){d.push(Ga[i]+k);i+=3Dk}else=
 =
i=3D(Ga[i]||i)+k;b=3D=3D=3D"live"?u.each(function(){c.event.add(this,pa(i=
,r),{data:f,selector:r,handler:e,origType:i,origHandler:e,preType:n})}):u=
.unbind(pa(i,r),e)}}return this}});c.each("blur focus focusin focusout =
load resize scroll unload click dblclick mousedown mouseup mousemove =
mouseover mouseout mouseenter mouseleave change select submit keydown =
keypress keyup error".split(" "),=0A=
function(a,b){c.fn[b]=3Dfunction(d){return =
d?this.bind(b,d):this.trigger(b)};if(c.attrFn)c.attrFn[b]=3Dtrue});A.atta=
chEvent&&!A.addEventListener&&A.attachEvent("onunload",function(){for(var=
 a in =
c.cache)if(c.cache[a].handle)try{c.event.remove(c.cache[a].handle.elem)}c=
atch(b){}});(function(){function a(g){for(var =
h=3D"",l,m=3D0;g[m];m++){l=3Dg[m];if(l.nodeType=3D=3D=3D3||l.nodeType=3D=3D=
=3D4)h+=3Dl.nodeValue;else =
if(l.nodeType!=3D=3D8)h+=3Da(l.childNodes)}return h}function =
b(g,h,l,m,q,p){q=3D0;for(var v=3Dm.length;q<v;q++){var t=3Dm[q];=0A=
if(t){t=3Dt[g];for(var =
y=3Dfalse;t;){if(t.sizcache=3D=3D=3Dl){y=3Dm[t.sizset];break}if(t.nodeTyp=
e=3D=3D=3D1&&!p){t.sizcache=3Dl;t.sizset=3Dq}if(t.nodeName.toLowerCase()=3D=
=3D=3Dh){y=3Dt;break}t=3Dt[g]}m[q]=3Dy}}}function =
d(g,h,l,m,q,p){q=3D0;for(var v=3Dm.length;q<v;q++){var =
t=3Dm[q];if(t){t=3Dt[g];for(var =
y=3Dfalse;t;){if(t.sizcache=3D=3D=3Dl){y=3Dm[t.sizset];break}if(t.nodeTyp=
e=3D=3D=3D1){if(!p){t.sizcache=3Dl;t.sizset=3Dq}if(typeof =
h!=3D=3D"string"){if(t=3D=3D=3Dh){y=3Dtrue;break}}else =
if(k.filter(h,[t]).length>0){y=3Dt;break}}t=3Dt[g]}m[q]=3Dy}}}var =
f=3D/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]|[^[\]=
'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,=0A=
e=3D0,j=3DObject.prototype.toString,i=3Dfalse,o=3Dtrue;[0,0].sort(functio=
n(){o=3Dfalse;return 0});var k=3Dfunction(g,h,l,m){l=3Dl||[];var =
q=3Dh=3Dh||s;if(h.nodeType!=3D=3D1&&h.nodeType!=3D=3D9)return[];if(!g||ty=
peof g!=3D=3D"string")return l;for(var =
p=3D[],v,t,y,S,H=3Dtrue,M=3Dx(h),I=3Dg;(f.exec(""),v=3Df.exec(I))!=3D=3Dn=
ull;){I=3Dv[3];p.push(v[1]);if(v[2]){S=3Dv[3];break}}if(p.length>1&&r.exe=
c(g))if(p.length=3D=3D=3D2&&n.relative[p[0]])t=3Dga(p[0]+p[1],h);else =
for(t=3Dn.relative[p[0]]?[h]:k(p.shift(),h);p.length;){g=3Dp.shift();if(n=
.relative[g])g+=3Dp.shift();=0A=
t=3Dga(g,t)}else{if(!m&&p.length>1&&h.nodeType=3D=3D=3D9&&!M&&n.match.ID.=
test(p[0])&&!n.match.ID.test(p[p.length-1])){v=3Dk.find(p.shift(),h,M);h=3D=
v.expr?k.filter(v.expr,v.set)[0]:v.set[0]}if(h){v=3Dm?{expr:p.pop(),set:z=
(m)}:k.find(p.pop(),p.length=3D=3D=3D1&&(p[0]=3D=3D=3D"~"||p[0]=3D=3D=3D"=
+")&&h.parentNode?h.parentNode:h,M);t=3Dv.expr?k.filter(v.expr,v.set):v.s=
et;if(p.length>0)y=3Dz(t);else H=3Dfalse;for(;p.length;){var =
D=3Dp.pop();v=3DD;if(n.relative[D])v=3Dp.pop();else =
D=3D"";if(v=3D=3Dnull)v=3Dh;n.relative[D](y,v,M)}}else =
y=3D[]}y||(y=3Dt);y||k.error(D||=0A=
g);if(j.call(y)=3D=3D=3D"[object =
Array]")if(H)if(h&&h.nodeType=3D=3D=3D1)for(g=3D0;y[g]!=3Dnull;g++){if(y[=
g]&&(y[g]=3D=3D=3Dtrue||y[g].nodeType=3D=3D=3D1&&E(h,y[g])))l.push(t[g])}=
else =
for(g=3D0;y[g]!=3Dnull;g++)y[g]&&y[g].nodeType=3D=3D=3D1&&l.push(t[g]);el=
se l.push.apply(l,y);else z(y,l);if(S){k(S,q,l,m);k.uniqueSort(l)}return =
l};k.uniqueSort=3Dfunction(g){if(B){i=3Do;g.sort(B);if(i)for(var =
h=3D1;h<g.length;h++)g[h]=3D=3D=3Dg[h-1]&&g.splice(h--,1)}return =
g};k.matches=3Dfunction(g,h){return =
k(g,null,null,h)};k.find=3Dfunction(g,h,l){var m,q;if(!g)return[];=0A=
for(var p=3D0,v=3Dn.order.length;p<v;p++){var =
t=3Dn.order[p];if(q=3Dn.leftMatch[t].exec(g)){var =
y=3Dq[1];q.splice(1,1);if(y.substr(y.length-1)!=3D=3D"\\"){q[1]=3D(q[1]||=
"").replace(/\\/g,"");m=3Dn.find[t](q,h,l);if(m!=3Dnull){g=3Dg.replace(n.=
match[t],"");break}}}}m||(m=3Dh.getElementsByTagName("*"));return{set:m,e=
xpr:g}};k.filter=3Dfunction(g,h,l,m){for(var =
q=3Dg,p=3D[],v=3Dh,t,y,S=3Dh&&h[0]&&x(h[0]);g&&h.length;){for(var H in =
n.filter)if((t=3Dn.leftMatch[H].exec(g))!=3Dnull&&t[2]){var =
M=3Dn.filter[H],I,D;D=3Dt[1];y=3Dfalse;t.splice(1,1);if(D.substr(D.length=
-=0A=
1)!=3D=3D"\\"){if(v=3D=3D=3Dp)p=3D[];if(n.preFilter[H])if(t=3Dn.preFilter=
[H](t,v,l,p,m,S)){if(t=3D=3D=3Dtrue)continue}else =
y=3DI=3Dtrue;if(t)for(var =
U=3D0;(D=3Dv[U])!=3Dnull;U++)if(D){I=3DM(D,t,U,v);var =
Ha=3Dm^!!I;if(l&&I!=3Dnull)if(Ha)y=3Dtrue;else v[U]=3Dfalse;else =
if(Ha){p.push(D);y=3Dtrue}}if(I!=3D=3Dw){l||(v=3Dp);g=3Dg.replace(n.match=
[H],"");if(!y)return[];break}}}if(g=3D=3D=3Dq)if(y=3D=3Dnull)k.error(g);e=
lse break;q=3Dg}return v};k.error=3Dfunction(g){throw"Syntax error, =
unrecognized expression: "+g;};var =
n=3Dk.selectors=3D{order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\u=
FFFF-]|\\.)+)/,=0A=
CLASS:/\.((?:[\w\u00c0-\uFFFF-]|\\.)+)/,NAME:/\[name=3D['"]*((?:[\w\u00c0=
-\uFFFF-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF-]|\\.)+)\s*(?:(\=
S?=3D)\s*(['"]*)(.*?)\3|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*-]|\\.)+)/,CH=
ILD:/:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/,POS:/:(nth=
|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=3D[^-]|$)/,PSEUDO:/:((?:[\=
w\u00c0-\uFFFF-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},lef=
tMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:=
function(g){return g.getAttribute("href")}},=0A=
relative:{"+":function(g,h){var l=3Dtypeof =
h=3D=3D=3D"string",m=3Dl&&!/\W/.test(h);l=3Dl&&!m;if(m)h=3Dh.toLowerCase(=
);m=3D0;for(var =
q=3Dg.length,p;m<q;m++)if(p=3Dg[m]){for(;(p=3Dp.previousSibling)&&p.nodeT=
ype!=3D=3D1;);g[m]=3Dl||p&&p.nodeName.toLowerCase()=3D=3D=3Dh?p||false:p=3D=
=3D=3Dh}l&&k.filter(h,g,true)},">":function(g,h){var l=3Dtypeof =
h=3D=3D=3D"string";if(l&&!/\W/.test(h)){h=3Dh.toLowerCase();for(var =
m=3D0,q=3Dg.length;m<q;m++){var =
p=3Dg[m];if(p){l=3Dp.parentNode;g[m]=3Dl.nodeName.toLowerCase()=3D=3D=3Dh=
?l:false}}}else{m=3D0;for(q=3Dg.length;m<q;m++)if(p=3Dg[m])g[m]=3D=0A=
l?p.parentNode:p.parentNode=3D=3D=3Dh;l&&k.filter(h,g,true)}},"":function=
(g,h,l){var m=3De++,q=3Dd;if(typeof =
h=3D=3D=3D"string"&&!/\W/.test(h)){var =
p=3Dh=3Dh.toLowerCase();q=3Db}q("parentNode",h,m,g,p,l)},"~":function(g,h=
,l){var m=3De++,q=3Dd;if(typeof h=3D=3D=3D"string"&&!/\W/.test(h)){var =
p=3Dh=3Dh.toLowerCase();q=3Db}q("previousSibling",h,m,g,p,l)}},find:{ID:f=
unction(g,h,l){if(typeof =
h.getElementById!=3D=3D"undefined"&&!l)return(g=3Dh.getElementById(g[1]))=
?[g]:[]},NAME:function(g,h){if(typeof =
h.getElementsByName!=3D=3D"undefined"){var l=3D[];=0A=
h=3Dh.getElementsByName(g[1]);for(var =
m=3D0,q=3Dh.length;m<q;m++)h[m].getAttribute("name")=3D=3D=3Dg[1]&&l.push=
(h[m]);return l.length=3D=3D=3D0?null:l}},TAG:function(g,h){return =
h.getElementsByTagName(g[1])}},preFilter:{CLASS:function(g,h,l,m,q,p){g=3D=
" "+g[1].replace(/\\/g,"")+" ";if(p)return g;p=3D0;for(var =
v;(v=3Dh[p])!=3Dnull;p++)if(v)if(q^(v.className&&(" "+v.className+" =
").replace(/[\t\n]/g," ").indexOf(g)>=3D0))l||m.push(v);else =
if(l)h[p]=3Dfalse;return false},ID:function(g){return =
g[1].replace(/\\/g,"")},TAG:function(g){return g[1].toLowerCase()},=0A=
CHILD:function(g){if(g[1]=3D=3D=3D"nth"){var =
h=3D/(-?)(\d*)n((?:\+|-)?\d*)/.exec(g[2]=3D=3D=3D"even"&&"2n"||g[2]=3D=3D=
=3D"odd"&&"2n+1"||!/\D/.test(g[2])&&"0n+"+g[2]||g[2]);g[2]=3Dh[1]+(h[2]||=
1)-0;g[3]=3Dh[3]-0}g[0]=3De++;return =
g},ATTR:function(g,h,l,m,q,p){h=3Dg[1].replace(/\\/g,"");if(!p&&n.attrMap=
[h])g[1]=3Dn.attrMap[h];if(g[2]=3D=3D=3D"~=3D")g[4]=3D" "+g[4]+" =
";return =
g},PSEUDO:function(g,h,l,m,q){if(g[1]=3D=3D=3D"not")if((f.exec(g[3])||"")=
.length>1||/^\w/.test(g[3]))g[3]=3Dk(g[3],null,null,h);else{g=3Dk.filter(=
g[3],h,l,true^q);l||m.push.apply(m,=0A=
g);return false}else =
if(n.match.POS.test(g[0])||n.match.CHILD.test(g[0]))return true;return =
g},POS:function(g){g.unshift(true);return =
g}},filters:{enabled:function(g){return =
g.disabled=3D=3D=3Dfalse&&g.type!=3D=3D"hidden"},disabled:function(g){ret=
urn g.disabled=3D=3D=3Dtrue},checked:function(g){return =
g.checked=3D=3D=3Dtrue},selected:function(g){return =
g.selected=3D=3D=3Dtrue},parent:function(g){return!!g.firstChild},empty:f=
unction(g){return!g.firstChild},has:function(g,h,l){return!!k(l[3],g).len=
gth},header:function(g){return/h\d/i.test(g.nodeName)},=0A=
text:function(g){return"text"=3D=3D=3Dg.type},radio:function(g){return"ra=
dio"=3D=3D=3Dg.type},checkbox:function(g){return"checkbox"=3D=3D=3Dg.type=
},file:function(g){return"file"=3D=3D=3Dg.type},password:function(g){retu=
rn"password"=3D=3D=3Dg.type},submit:function(g){return"submit"=3D=3D=3Dg.=
type},image:function(g){return"image"=3D=3D=3Dg.type},reset:function(g){r=
eturn"reset"=3D=3D=3Dg.type},button:function(g){return"button"=3D=3D=3Dg.=
type||g.nodeName.toLowerCase()=3D=3D=3D"button"},input:function(g){return=
/input|select|textarea|button/i.test(g.nodeName)}},=0A=
setFilters:{first:function(g,h){return =
h=3D=3D=3D0},last:function(g,h,l,m){return =
h=3D=3D=3Dm.length-1},even:function(g,h){return =
h%2=3D=3D=3D0},odd:function(g,h){return =
h%2=3D=3D=3D1},lt:function(g,h,l){return =
h<l[3]-0},gt:function(g,h,l){return h>l[3]-0},nth:function(g,h,l){return =
l[3]-0=3D=3D=3Dh},eq:function(g,h,l){return =
l[3]-0=3D=3D=3Dh}},filter:{PSEUDO:function(g,h,l,m){var =
q=3Dh[1],p=3Dn.filters[q];if(p)return p(g,l,h,m);else =
if(q=3D=3D=3D"contains")return(g.textContent||g.innerText||a([g])||"").in=
dexOf(h[3])>=3D0;else if(q=3D=3D=3D"not"){h=3D=0A=
h[3];l=3D0;for(m=3Dh.length;l<m;l++)if(h[l]=3D=3D=3Dg)return =
false;return true}else k.error("Syntax error, unrecognized expression: =
"+q)},CHILD:function(g,h){var l=3Dh[1],m=3Dg;switch(l){case "only":case =
"first":for(;m=3Dm.previousSibling;)if(m.nodeType=3D=3D=3D1)return =
false;if(l=3D=3D=3D"first")return true;m=3Dg;case =
"last":for(;m=3Dm.nextSibling;)if(m.nodeType=3D=3D=3D1)return =
false;return true;case "nth":l=3Dh[2];var =
q=3Dh[3];if(l=3D=3D=3D1&&q=3D=3D=3D0)return true;h=3Dh[0];var =
p=3Dg.parentNode;if(p&&(p.sizcache!=3D=3Dh||!g.nodeIndex)){var =
v=3D0;for(m=3Dp.firstChild;m;m=3D=0A=
m.nextSibling)if(m.nodeType=3D=3D=3D1)m.nodeIndex=3D++v;p.sizcache=3Dh}g=3D=
g.nodeIndex-q;return =
l=3D=3D=3D0?g=3D=3D=3D0:g%l=3D=3D=3D0&&g/l>=3D0}},ID:function(g,h){return=
 =
g.nodeType=3D=3D=3D1&&g.getAttribute("id")=3D=3D=3Dh},TAG:function(g,h){r=
eturn =
h=3D=3D=3D"*"&&g.nodeType=3D=3D=3D1||g.nodeName.toLowerCase()=3D=3D=3Dh},=
CLASS:function(g,h){return(" "+(g.className||g.getAttribute("class"))+" =
").indexOf(h)>-1},ATTR:function(g,h){var =
l=3Dh[1];g=3Dn.attrHandle[l]?n.attrHandle[l](g):g[l]!=3Dnull?g[l]:g.getAt=
tribute(l);l=3Dg+"";var m=3Dh[2];h=3Dh[4];return =
g=3D=3Dnull?m=3D=3D=3D"!=3D":m=3D=3D=3D=0A=
"=3D"?l=3D=3D=3Dh:m=3D=3D=3D"*=3D"?l.indexOf(h)>=3D0:m=3D=3D=3D"~=3D"?(" =
"+l+" =
").indexOf(h)>=3D0:!h?l&&g!=3D=3Dfalse:m=3D=3D=3D"!=3D"?l!=3D=3Dh:m=3D=3D=
=3D"^=3D"?l.indexOf(h)=3D=3D=3D0:m=3D=3D=3D"$=3D"?l.substr(l.length-h.len=
gth)=3D=3D=3Dh:m=3D=3D=3D"|=3D"?l=3D=3D=3Dh||l.substr(0,h.length+1)=3D=3D=
=3Dh+"-":false},POS:function(g,h,l,m){var =
q=3Dn.setFilters[h[2]];if(q)return q(g,l,h,m)}}},r=3Dn.match.POS;for(var =
u in n.match){n.match[u]=3Dnew =
RegExp(n.match[u].source+/(?![^\[]*\])(?![^\(]*\))/.source);n.leftMatch[u=
]=3Dnew =
RegExp(/(^(?:.|\r|\n)*?)/.source+n.match[u].source.replace(/\\(\d+)/g,fun=
ction(g,=0A=
h){return"\\"+(h-0+1)}))}var =
z=3Dfunction(g,h){g=3DArray.prototype.slice.call(g,0);if(h){h.push.apply(=
h,g);return h}return =
g};try{Array.prototype.slice.call(s.documentElement.childNodes,0)}catch(C=
){z=3Dfunction(g,h){h=3Dh||[];if(j.call(g)=3D=3D=3D"[object =
Array]")Array.prototype.push.apply(h,g);else if(typeof =
g.length=3D=3D=3D"number")for(var =
l=3D0,m=3Dg.length;l<m;l++)h.push(g[l]);else =
for(l=3D0;g[l];l++)h.push(g[l]);return h}}var =
B;if(s.documentElement.compareDocumentPosition)B=3Dfunction(g,h){if(!g.co=
mpareDocumentPosition||=0A=
!h.compareDocumentPosition){if(g=3D=3Dh)i=3Dtrue;return =
g.compareDocumentPosition?-1:1}g=3Dg.compareDocumentPosition(h)&4?-1:g=3D=
=3D=3Dh?0:1;if(g=3D=3D=3D0)i=3Dtrue;return g};else if("sourceIndex"in =
s.documentElement)B=3Dfunction(g,h){if(!g.sourceIndex||!h.sourceIndex){if=
(g=3D=3Dh)i=3Dtrue;return =
g.sourceIndex?-1:1}g=3Dg.sourceIndex-h.sourceIndex;if(g=3D=3D=3D0)i=3Dtru=
e;return g};else =
if(s.createRange)B=3Dfunction(g,h){if(!g.ownerDocument||!h.ownerDocument)=
{if(g=3D=3Dh)i=3Dtrue;return g.ownerDocument?-1:1}var =
l=3Dg.ownerDocument.createRange(),m=3D=0A=
h.ownerDocument.createRange();l.setStart(g,0);l.setEnd(g,0);m.setStart(h,=
0);m.setEnd(h,0);g=3Dl.compareBoundaryPoints(Range.START_TO_END,m);if(g=3D=
=3D=3D0)i=3Dtrue;return g};(function(){var =
g=3Ds.createElement("div"),h=3D"script"+(new =
Date).getTime();g.innerHTML=3D"<a name=3D'"+h+"'/>";var =
l=3Ds.documentElement;l.insertBefore(g,l.firstChild);if(s.getElementById(=
h)){n.find.ID=3Dfunction(m,q,p){if(typeof =
q.getElementById!=3D=3D"undefined"&&!p)return(q=3Dq.getElementById(m[1]))=
?q.id=3D=3D=3Dm[1]||typeof q.getAttributeNode!=3D=3D"undefined"&&=0A=
q.getAttributeNode("id").nodeValue=3D=3D=3Dm[1]?[q]:w:[]};n.filter.ID=3Df=
unction(m,q){var p=3Dtypeof =
m.getAttributeNode!=3D=3D"undefined"&&m.getAttributeNode("id");return =
m.nodeType=3D=3D=3D1&&p&&p.nodeValue=3D=3D=3Dq}}l.removeChild(g);l=3Dg=3D=
null})();(function(){var =
g=3Ds.createElement("div");g.appendChild(s.createComment(""));if(g.getEle=
mentsByTagName("*").length>0)n.find.TAG=3Dfunction(h,l){l=3Dl.getElements=
ByTagName(h[1]);if(h[1]=3D=3D=3D"*"){h=3D[];for(var =
m=3D0;l[m];m++)l[m].nodeType=3D=3D=3D1&&h.push(l[m]);l=3Dh}return =
l};g.innerHTML=3D"<a href=3D'#'></a>";=0A=
if(g.firstChild&&typeof =
g.firstChild.getAttribute!=3D=3D"undefined"&&g.firstChild.getAttribute("h=
ref")!=3D=3D"#")n.attrHandle.href=3Dfunction(h){return =
h.getAttribute("href",2)};g=3Dnull})();s.querySelectorAll&&function(){var=
 g=3Dk,h=3Ds.createElement("div");h.innerHTML=3D"<p =
class=3D'TEST'></p>";if(!(h.querySelectorAll&&h.querySelectorAll(".TEST")=
.length=3D=3D=3D0)){k=3Dfunction(m,q,p,v){q=3Dq||s;if(!v&&q.nodeType=3D=3D=
=3D9&&!x(q))try{return z(q.querySelectorAll(m),p)}catch(t){}return =
g(m,q,p,v)};for(var l in g)k[l]=3Dg[l];h=3Dnull}}();=0A=
(function(){var g=3Ds.createElement("div");g.innerHTML=3D"<div =
class=3D'test e'></div><div =
class=3D'test'></div>";if(!(!g.getElementsByClassName||g.getElementsByCla=
ssName("e").length=3D=3D=3D0)){g.lastChild.className=3D"e";if(g.getElemen=
tsByClassName("e").length!=3D=3D1){n.order.splice(1,0,"CLASS");n.find.CLA=
SS=3Dfunction(h,l,m){if(typeof =
l.getElementsByClassName!=3D=3D"undefined"&&!m)return =
l.getElementsByClassName(h[1])};g=3Dnull}}})();var =
E=3Ds.compareDocumentPosition?function(g,h){return!!(g.compareDocumentPos=
ition(h)&16)}:=0A=
function(g,h){return =
g!=3D=3Dh&&(g.contains?g.contains(h):true)},x=3Dfunction(g){return(g=3D(g=
?g.ownerDocument||g:0).documentElement)?g.nodeName!=3D=3D"HTML":false},ga=
=3Dfunction(g,h){var =
l=3D[],m=3D"",q;for(h=3Dh.nodeType?[h]:h;q=3Dn.match.PSEUDO.exec(g);){m+=3D=
q[0];g=3Dg.replace(n.match.PSEUDO,"")}g=3Dn.relative[g]?g+"*":g;q=3D0;for=
(var p=3Dh.length;q<p;q++)k(g,h[q],l);return =
k.filter(m,l)};c.find=3Dk;c.expr=3Dk.selectors;c.expr[":"]=3Dc.expr.filte=
rs;c.unique=3Dk.uniqueSort;c.text=3Da;c.isXMLDoc=3Dx;c.contains=3DE})();v=
ar eb=3D/Until$/,fb=3D/^(?:parents|prevUntil|prevAll)/,=0A=
gb=3D/,/;R=3DArray.prototype.slice;var =
Ia=3Dfunction(a,b,d){if(c.isFunction(b))return =
c.grep(a,function(e,j){return!!b.call(e,j,e)=3D=3D=3Dd});else =
if(b.nodeType)return c.grep(a,function(e){return =
e=3D=3D=3Db=3D=3D=3Dd});else if(typeof b=3D=3D=3D"string"){var =
f=3Dc.grep(a,function(e){return =
e.nodeType=3D=3D=3D1});if(Ua.test(b))return c.filter(b,f,!d);else =
b=3Dc.filter(b,f)}return c.grep(a,function(e){return =
c.inArray(e,b)>=3D0=3D=3D=3Dd})};c.fn.extend({find:function(a){for(var =
b=3Dthis.pushStack("","find",a),d=3D0,f=3D0,e=3Dthis.length;f<e;f++){d=3D=
b.length;=0A=
c.find(a,this[f],b);if(f>0)for(var j=3Dd;j<b.length;j++)for(var =
i=3D0;i<d;i++)if(b[i]=3D=3D=3Db[j]){b.splice(j--,1);break}}return =
b},has:function(a){var b=3Dc(a);return this.filter(function(){for(var =
d=3D0,f=3Db.length;d<f;d++)if(c.contains(this,b[d]))return =
true})},not:function(a){return =
this.pushStack(Ia(this,a,false),"not",a)},filter:function(a){return =
this.pushStack(Ia(this,a,true),"filter",a)},is:function(a){return!!a&&c.f=
ilter(a,this).length>0},closest:function(a,b){if(c.isArray(a)){var =
d=3D[],f=3Dthis[0],e,j=3D=0A=
{},i;if(f&&a.length){e=3D0;for(var =
o=3Da.length;e<o;e++){i=3Da[e];j[i]||(j[i]=3Dc.expr.match.POS.test(i)?c(i=
,b||this.context):i)}for(;f&&f.ownerDocument&&f!=3D=3Db;){for(i in =
j){e=3Dj[i];if(e.jquery?e.index(f)>-1:c(f).is(e)){d.push({selector:i,elem=
:f});delete j[i]}}f=3Df.parentNode}}return d}var =
k=3Dc.expr.match.POS.test(a)?c(a,b||this.context):null;return =
this.map(function(n,r){for(;r&&r.ownerDocument&&r!=3D=3Db;){if(k?k.index(=
r)>-1:c(r).is(a))return r;r=3Dr.parentNode}return =
null})},index:function(a){if(!a||typeof a=3D=3D=3D=0A=
"string")return =
c.inArray(this[0],a?c(a):this.parent().children());return =
c.inArray(a.jquery?a[0]:a,this)},add:function(a,b){a=3Dtypeof =
a=3D=3D=3D"string"?c(a,b||this.context):c.makeArray(a);b=3Dc.merge(this.g=
et(),a);return =
this.pushStack(qa(a[0])||qa(b[0])?b:c.unique(b))},andSelf:function(){retu=
rn =
this.add(this.prevObject)}});c.each({parent:function(a){return(a=3Da.pare=
ntNode)&&a.nodeType!=3D=3D11?a:null},parents:function(a){return =
c.dir(a,"parentNode")},parentsUntil:function(a,b,d){return =
c.dir(a,"parentNode",=0A=
d)},next:function(a){return =
c.nth(a,2,"nextSibling")},prev:function(a){return =
c.nth(a,2,"previousSibling")},nextAll:function(a){return =
c.dir(a,"nextSibling")},prevAll:function(a){return =
c.dir(a,"previousSibling")},nextUntil:function(a,b,d){return =
c.dir(a,"nextSibling",d)},prevUntil:function(a,b,d){return =
c.dir(a,"previousSibling",d)},siblings:function(a){return =
c.sibling(a.parentNode.firstChild,a)},children:function(a){return =
c.sibling(a.firstChild)},contents:function(a){return =
c.nodeName(a,"iframe")?=0A=
a.contentDocument||a.contentWindow.document:c.makeArray(a.childNodes)}},f=
unction(a,b){c.fn[a]=3Dfunction(d,f){var =
e=3Dc.map(this,b,d);eb.test(a)||(f=3Dd);if(f&&typeof =
f=3D=3D=3D"string")e=3Dc.filter(f,e);e=3Dthis.length>1?c.unique(e):e;if((=
this.length>1||gb.test(f))&&fb.test(a))e=3De.reverse();return =
this.pushStack(e,a,R.call(arguments).join(","))}});c.extend({filter:funct=
ion(a,b,d){if(d)a=3D":not("+a+")";return =
c.find.matches(a,b)},dir:function(a,b,d){var =
f=3D[];for(a=3Da[b];a&&a.nodeType!=3D=3D9&&(d=3D=3D=3Dw||a.nodeType!=3D=3D=
1||!c(a).is(d));){a.nodeType=3D=3D=3D=0A=
1&&f.push(a);a=3Da[b]}return f},nth:function(a,b,d){b=3Db||1;for(var =
f=3D0;a;a=3Da[d])if(a.nodeType=3D=3D=3D1&&++f=3D=3D=3Db)break;return =
a},sibling:function(a,b){for(var =
d=3D[];a;a=3Da.nextSibling)a.nodeType=3D=3D=3D1&&a!=3D=3Db&&d.push(a);ret=
urn d}});var Ja=3D/ =
jQuery\d+=3D"(?:\d+|null)"/g,V=3D/^\s+/,Ka=3D/(<([\w:]+)[^>]*?)\/>/g,hb=3D=
/^(?:area|br|col|embed|hr|img|input|link|meta|param)$/i,La=3D/<([\w:]+)/,=
ib=3D/<tbody/i,jb=3D/<|&#?\w+;/,ta=3D/<script|<object|<embed|<option|<sty=
le/i,ua=3D/checked\s*(?:[^=3D]|=3D\s*.checked.)/i,Ma=3Dfunction(a,b,d){re=
turn hb.test(d)?=0A=
a:b+"></"+d+">"},F=3D{option:[1,"<select =
multiple=3D'multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"=
],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>=
"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tb=
ody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],=
_default:[0,"",""]};F.optgroup=3DF.option;F.tbody=3DF.tfoot=3DF.colgroup=3D=
F.caption=3DF.thead;F.th=3DF.td;if(!c.support.htmlSerialize)F._default=3D=
[1,"div<div>","</div>"];c.fn.extend({text:function(a){if(c.isFunction(a))=
return this.each(function(b){var d=3D=0A=
c(this);d.text(a.call(this,b,d.text()))});if(typeof =
a!=3D=3D"object"&&a!=3D=3Dw)return =
this.empty().append((this[0]&&this[0].ownerDocument||s).createTextNode(a)=
);return c.text(this)},wrapAll:function(a){if(c.isFunction(a))return =
this.each(function(d){c(this).wrapAll(a.call(this,d))});if(this[0]){var =
b=3Dc(a,this[0].ownerDocument).eq(0).clone(true);this[0].parentNode&&b.in=
sertBefore(this[0]);b.map(function(){for(var =
d=3Dthis;d.firstChild&&d.firstChild.nodeType=3D=3D=3D1;)d=3Dd.firstChild;=
return d}).append(this)}return this},=0A=
wrapInner:function(a){if(c.isFunction(a))return =
this.each(function(b){c(this).wrapInner(a.call(this,b))});return =
this.each(function(){var =
b=3Dc(this),d=3Db.contents();d.length?d.wrapAll(a):b.append(a)})},wrap:fu=
nction(a){return =
this.each(function(){c(this).wrapAll(a)})},unwrap:function(){return =
this.parent().each(function(){c.nodeName(this,"body")||c(this).replaceWit=
h(this.childNodes)}).end()},append:function(){return =
this.domManip(arguments,true,function(a){this.nodeType=3D=3D=3D1&&this.ap=
pendChild(a)})},=0A=
prepend:function(){return =
this.domManip(arguments,true,function(a){this.nodeType=3D=3D=3D1&&this.in=
sertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].pa=
rentNode)return =
this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,=
this)});else if(arguments.length){var =
a=3Dc(arguments[0]);a.push.apply(a,this.toArray());return =
this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[=
0].parentNode)return =
this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,=0A=
this.nextSibling)});else if(arguments.length){var =
a=3Dthis.pushStack(this,"after",arguments);a.push.apply(a,c(arguments[0])=
.toArray());return a}},remove:function(a,b){for(var =
d=3D0,f;(f=3Dthis[d])!=3Dnull;d++)if(!a||c.filter(a,[f]).length){if(!b&&f=
.nodeType=3D=3D=3D1){c.cleanData(f.getElementsByTagName("*"));c.cleanData=
([f])}f.parentNode&&f.parentNode.removeChild(f)}return =
this},empty:function(){for(var =
a=3D0,b;(b=3Dthis[a])!=3Dnull;a++)for(b.nodeType=3D=3D=3D1&&c.cleanData(b=
.getElementsByTagName("*"));b.firstChild;)b.removeChild(b.firstChild);=0A=
return this},clone:function(a){var =
b=3Dthis.map(function(){if(!c.support.noCloneEvent&&!c.isXMLDoc(this)){va=
r =
d=3Dthis.outerHTML,f=3Dthis.ownerDocument;if(!d){d=3Df.createElement("div=
");d.appendChild(this.cloneNode(true));d=3Dd.innerHTML}return =
c.clean([d.replace(Ja,"").replace(/=3D([^=3D"'>\s]+\/)>/g,'=3D"$1">').rep=
lace(V,"")],f)[0]}else return =
this.cloneNode(true)});if(a=3D=3D=3Dtrue){ra(this,b);ra(this.find("*"),b.=
find("*"))}return b},html:function(a){if(a=3D=3D=3Dw)return =
this[0]&&this[0].nodeType=3D=3D=3D1?this[0].innerHTML.replace(Ja,=0A=
""):null;else if(typeof =
a=3D=3D=3D"string"&&!ta.test(a)&&(c.support.leadingWhitespace||!V.test(a)=
)&&!F[(La.exec(a)||["",""])[1].toLowerCase()]){a=3Da.replace(Ka,Ma);try{f=
or(var =
b=3D0,d=3Dthis.length;b<d;b++)if(this[b].nodeType=3D=3D=3D1){c.cleanData(=
this[b].getElementsByTagName("*"));this[b].innerHTML=3Da}}catch(f){this.e=
mpty().append(a)}}else c.isFunction(a)?this.each(function(e){var =
j=3Dc(this),i=3Dj.html();j.empty().append(function(){return =
a.call(this,e,i)})}):this.empty().append(a);return =
this},replaceWith:function(a){if(this[0]&&=0A=
this[0].parentNode){if(c.isFunction(a))return this.each(function(b){var =
d=3Dc(this),f=3Dd.html();d.replaceWith(a.call(this,b,f))});if(typeof =
a!=3D=3D"string")a=3Dc(a).detach();return this.each(function(){var =
b=3Dthis.nextSibling,d=3Dthis.parentNode;c(this).remove();b?c(b).before(a=
):c(d).append(a)})}else return =
this.pushStack(c(c.isFunction(a)?a():a),"replaceWith",a)},detach:function=
(a){return this.remove(a,true)},domManip:function(a,b,d){function =
f(u){return c.nodeName(u,"table")?u.getElementsByTagName("tbody")[0]||=0A=
u.appendChild(u.ownerDocument.createElement("tbody")):u}var =
e,j,i=3Da[0],o=3D[],k;if(!c.support.checkClone&&arguments.length=3D=3D=3D=
3&&typeof i=3D=3D=3D"string"&&ua.test(i))return =
this.each(function(){c(this).domManip(a,b,d,true)});if(c.isFunction(i))re=
turn this.each(function(u){var =
z=3Dc(this);a[0]=3Di.call(this,u,b?z.html():w);z.domManip(a,b,d)});if(thi=
s[0]){e=3Di&&i.parentNode;e=3Dc.support.parentNode&&e&&e.nodeType=3D=3D=3D=
11&&e.childNodes.length=3D=3D=3Dthis.length?{fragment:e}:sa(a,this,o);k=3D=
e.fragment;if(j=3Dk.childNodes.length=3D=3D=3D=0A=
1?(k=3Dk.firstChild):k.firstChild){b=3Db&&c.nodeName(j,"tr");for(var =
n=3D0,r=3Dthis.length;n<r;n++)d.call(b?f(this[n],j):this[n],n>0||e.cachea=
ble||this.length>1?k.cloneNode(true):k)}o.length&&c.each(o,Qa)}return =
this}});c.fragments=3D{};c.each({appendTo:"append",prependTo:"prepend",in=
sertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},functio=
n(a,b){c.fn[a]=3Dfunction(d){var f=3D[];d=3Dc(d);var =
e=3Dthis.length=3D=3D=3D1&&this[0].parentNode;if(e&&e.nodeType=3D=3D=3D11=
&&e.childNodes.length=3D=3D=3D1&&d.length=3D=3D=3D1){d[b](this[0]);=0A=
return this}else{e=3D0;for(var j=3Dd.length;e<j;e++){var =
i=3D(e>0?this.clone(true):this).get();c.fn[b].apply(c(d[e]),i);f=3Df.conc=
at(i)}return =
this.pushStack(f,a,d.selector)}}});c.extend({clean:function(a,b,d,f){b=3D=
b||s;if(typeof =
b.createElement=3D=3D=3D"undefined")b=3Db.ownerDocument||b[0]&&b[0].owner=
Document||s;for(var e=3D[],j=3D0,i;(i=3Da[j])!=3Dnull;j++){if(typeof =
i=3D=3D=3D"number")i+=3D"";if(i){if(typeof =
i=3D=3D=3D"string"&&!jb.test(i))i=3Db.createTextNode(i);else if(typeof =
i=3D=3D=3D"string"){i=3Di.replace(Ka,Ma);var o=3D(La.exec(i)||["",=0A=
""])[1].toLowerCase(),k=3DF[o]||F._default,n=3Dk[0],r=3Db.createElement("=
div");for(r.innerHTML=3Dk[1]+i+k[2];n--;)r=3Dr.lastChild;if(!c.support.tb=
ody){n=3Dib.test(i);o=3Do=3D=3D=3D"table"&&!n?r.firstChild&&r.firstChild.=
childNodes:k[1]=3D=3D=3D"<table>"&&!n?r.childNodes:[];for(k=3Do.length-1;=
k>=3D0;--k)c.nodeName(o[k],"tbody")&&!o[k].childNodes.length&&o[k].parent=
Node.removeChild(o[k])}!c.support.leadingWhitespace&&V.test(i)&&r.insertB=
efore(b.createTextNode(V.exec(i)[0]),r.firstChild);i=3Dr.childNodes}if(i.=
nodeType)e.push(i);else e=3D=0A=
c.merge(e,i)}}if(d)for(j=3D0;e[j];j++)if(f&&c.nodeName(e[j],"script")&&(!=
e[j].type||e[j].type.toLowerCase()=3D=3D=3D"text/javascript"))f.push(e[j]=
.parentNode?e[j].parentNode.removeChild(e[j]):e[j]);else{e[j].nodeType=3D=
=3D=3D1&&e.splice.apply(e,[j+1,0].concat(c.makeArray(e[j].getElementsByTa=
gName("script"))));d.appendChild(e[j])}return =
e},cleanData:function(a){for(var =
b,d,f=3Dc.cache,e=3Dc.event.special,j=3Dc.support.deleteExpando,i=3D0,o;(=
o=3Da[i])!=3Dnull;i++)if(d=3Do[c.expando]){b=3Df[d];if(b.events)for(var =
k in b.events)e[k]?=0A=
c.event.remove(o,k):Ca(o,k,b.handle);if(j)delete o[c.expando];else =
o.removeAttribute&&o.removeAttribute(c.expando);delete f[d]}}});var =
kb=3D/z-?index|font-?weight|opacity|zoom|line-?height/i,Na=3D/alpha\([^)]=
*\)/,Oa=3D/opacity=3D([^)]*)/,ha=3D/float/i,ia=3D/-([a-z])/ig,lb=3D/([A-Z=
])/g,mb=3D/^-?\d+(?:px)?$/i,nb=3D/^-?\d/,ob=3D{position:"absolute",visibi=
lity:"hidden",display:"block"},pb=3D["Left","Right"],qb=3D["Top","Bottom"=
],rb=3Ds.defaultView&&s.defaultView.getComputedStyle,Pa=3Dc.support.cssFl=
oat?"cssFloat":"styleFloat",ja=3D=0A=
function(a,b){return b.toUpperCase()};c.fn.css=3Dfunction(a,b){return =
X(this,a,b,true,function(d,f,e){if(e=3D=3D=3Dw)return =
c.curCSS(d,f);if(typeof =
e=3D=3D=3D"number"&&!kb.test(f))e+=3D"px";c.style(d,f,e)})};c.extend({sty=
le:function(a,b,d){if(!a||a.nodeType=3D=3D=3D3||a.nodeType=3D=3D=3D8)retu=
rn =
w;if((b=3D=3D=3D"width"||b=3D=3D=3D"height")&&parseFloat(d)<0)d=3Dw;var =
f=3Da.style||a,e=3Dd!=3D=3Dw;if(!c.support.opacity&&b=3D=3D=3D"opacity"){=
if(e){f.zoom=3D1;b=3DparseInt(d,10)+""=3D=3D=3D"NaN"?"":"alpha(opacity=3D=
"+d*100+")";a=3Df.filter||c.curCSS(a,"filter")||"";f.filter=3D=0A=
Na.test(a)?a.replace(Na,b):b}return =
f.filter&&f.filter.indexOf("opacity=3D")>=3D0?parseFloat(Oa.exec(f.filter=
)[1])/100+"":""}if(ha.test(b))b=3DPa;b=3Db.replace(ia,ja);if(e)f[b]=3Dd;r=
eturn =
f[b]},css:function(a,b,d,f){if(b=3D=3D=3D"width"||b=3D=3D=3D"height"){var=
 e,j=3Db=3D=3D=3D"width"?pb:qb;function =
i(){e=3Db=3D=3D=3D"width"?a.offsetWidth:a.offsetHeight;f!=3D=3D"border"&&=
c.each(j,function(){f||(e-=3DparseFloat(c.curCSS(a,"padding"+this,true))|=
|0);if(f=3D=3D=3D"margin")e+=3DparseFloat(c.curCSS(a,"margin"+this,true))=
||0;else e-=3DparseFloat(c.curCSS(a,=0A=
"border"+this+"Width",true))||0})}a.offsetWidth!=3D=3D0?i():c.swap(a,ob,i=
);return Math.max(0,Math.round(e))}return =
c.curCSS(a,b,d)},curCSS:function(a,b,d){var =
f,e=3Da.style;if(!c.support.opacity&&b=3D=3D=3D"opacity"&&a.currentStyle)=
{f=3DOa.test(a.currentStyle.filter||"")?parseFloat(RegExp.$1)/100+"":"";r=
eturn =
f=3D=3D=3D""?"1":f}if(ha.test(b))b=3DPa;if(!d&&e&&e[b])f=3De[b];else =
if(rb){if(ha.test(b))b=3D"float";b=3Db.replace(lb,"-$1").toLowerCase();e=3D=
a.ownerDocument.defaultView;if(!e)return =
null;if(a=3De.getComputedStyle(a,null))f=3D=0A=
a.getPropertyValue(b);if(b=3D=3D=3D"opacity"&&f=3D=3D=3D"")f=3D"1"}else =
if(a.currentStyle){d=3Db.replace(ia,ja);f=3Da.currentStyle[b]||a.currentS=
tyle[d];if(!mb.test(f)&&nb.test(f)){b=3De.left;var =
j=3Da.runtimeStyle.left;a.runtimeStyle.left=3Da.currentStyle.left;e.left=3D=
d=3D=3D=3D"fontSize"?"1em":f||0;f=3De.pixelLeft+"px";e.left=3Db;a.runtime=
Style.left=3Dj}}return f},swap:function(a,b,d){var f=3D{};for(var e in =
b){f[e]=3Da.style[e];a.style[e]=3Db[e]}d.call(a);for(e in =
b)a.style[e]=3Df[e]}});if(c.expr&&c.expr.filters){c.expr.filters.hidden=3D=
function(a){var b=3D=0A=
a.offsetWidth,d=3Da.offsetHeight,f=3Da.nodeName.toLowerCase()=3D=3D=3D"tr=
";return =
b=3D=3D=3D0&&d=3D=3D=3D0&&!f?true:b>0&&d>0&&!f?false:c.curCSS(a,"display"=
)=3D=3D=3D"none"};c.expr.filters.visible=3Dfunction(a){return!c.expr.filt=
ers.hidden(a)}}var =
sb=3DJ(),tb=3D/<script(.|\s)*?\/script>/gi,ub=3D/select|textarea/i,vb=3D/=
color|date|datetime|email|hidden|month|number|password|range|search|tel|t=
ext|time|url|week/i,N=3D/=3D\?(&|$)/,ka=3D/\?/,wb=3D/(\?|&)_=3D.*?(&|$)/,=
xb=3D/^(\w+:)?\/\/([^\/?#]+)/,yb=3D/%20/g,zb=3Dc.fn.load;c.fn.extend({loa=
d:function(a,b,d){if(typeof a!=3D=3D=0A=
"string")return zb.call(this,a);else if(!this.length)return this;var =
f=3Da.indexOf(" ");if(f>=3D0){var =
e=3Da.slice(f,a.length);a=3Da.slice(0,f)}f=3D"GET";if(b)if(c.isFunction(b=
)){d=3Db;b=3Dnull}else if(typeof =
b=3D=3D=3D"object"){b=3Dc.param(b,c.ajaxSettings.traditional);f=3D"POST"}=
var =
j=3Dthis;c.ajax({url:a,type:f,dataType:"html",data:b,complete:function(i,=
o){if(o=3D=3D=3D"success"||o=3D=3D=3D"notmodified")j.html(e?c("<div =
/>").append(i.responseText.replace(tb,"")).find(e):i.responseText);d&&j.e=
ach(d,[i.responseText,o,i])}});return this},=0A=
serialize:function(){return =
c.param(this.serializeArray())},serializeArray:function(){return =
this.map(function(){return =
this.elements?c.makeArray(this.elements):this}).filter(function(){return =
this.name&&!this.disabled&&(this.checked||ub.test(this.nodeName)||vb.test=
(this.type))}).map(function(a,b){a=3Dc(this).val();return =
a=3D=3Dnull?null:c.isArray(a)?c.map(a,function(d){return{name:b.name,valu=
e:d}}):{name:b.name,value:a}}).get()}});c.each("ajaxStart ajaxStop =
ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),=0A=
function(a,b){c.fn[b]=3Dfunction(d){return =
this.bind(b,d)}});c.extend({get:function(a,b,d,f){if(c.isFunction(b)){f=3D=
f||d;d=3Db;b=3Dnull}return =
c.ajax({type:"GET",url:a,data:b,success:d,dataType:f})},getScript:functio=
n(a,b){return c.get(a,null,b,"script")},getJSON:function(a,b,d){return =
c.get(a,b,d,"json")},post:function(a,b,d,f){if(c.isFunction(b)){f=3Df||d;=
d=3Db;b=3D{}}return =
c.ajax({type:"POST",url:a,data:b,success:d,dataType:f})},ajaxSetup:functi=
on(a){c.extend(c.ajaxSettings,a)},ajaxSettings:{url:location.href,=0A=
global:true,type:"GET",contentType:"application/x-www-form-urlencoded",pr=
ocessData:true,async:true,xhr:A.XMLHttpRequest&&(A.location.protocol!=3D=3D=
"file:"||!A.ActiveXObject)?function(){return new =
A.XMLHttpRequest}:function(){try{return new =
A.ActiveXObject("Microsoft.XMLHTTP")}catch(a){}},accepts:{xml:"applicatio=
n/xml, text/xml",html:"text/html",script:"text/javascript, =
application/javascript",json:"application/json, =
text/javascript",text:"text/plain",_default:"*/*"}},lastModified:{},etag:=
{},ajax:function(a){function b(){e.success&&=0A=
e.success.call(k,o,i,x);e.global&&f("ajaxSuccess",[x,e])}function =
d(){e.complete&&e.complete.call(k,x,i);e.global&&f("ajaxComplete",[x,e]);=
e.global&&!--c.active&&c.event.trigger("ajaxStop")}function =
f(q,p){(e.context?c(e.context):c.event).trigger(q,p)}var =
e=3Dc.extend(true,{},c.ajaxSettings,a),j,i,o,k=3Da&&a.context||e,n=3De.ty=
pe.toUpperCase();if(e.data&&e.processData&&typeof =
e.data!=3D=3D"string")e.data=3Dc.param(e.data,e.traditional);if(e.dataTyp=
e=3D=3D=3D"jsonp"){if(n=3D=3D=3D"GET")N.test(e.url)||(e.url+=3D(ka.test(e=
.url)?=0A=
"&":"?")+(e.jsonp||"callback")+"=3D?");else =
if(!e.data||!N.test(e.data))e.data=3D(e.data?e.data+"&":"")+(e.jsonp||"ca=
llback")+"=3D?";e.dataType=3D"json"}if(e.dataType=3D=3D=3D"json"&&(e.data=
&&N.test(e.data)||N.test(e.url))){j=3De.jsonpCallback||"jsonp"+sb++;if(e.=
data)e.data=3D(e.data+"").replace(N,"=3D"+j+"$1");e.url=3De.url.replace(N=
,"=3D"+j+"$1");e.dataType=3D"script";A[j]=3DA[j]||function(q){o=3Dq;b();d=
();A[j]=3Dw;try{delete =
A[j]}catch(p){}z&&z.removeChild(C)}}if(e.dataType=3D=3D=3D"script"&&e.cac=
he=3D=3D=3Dnull)e.cache=3Dfalse;if(e.cache=3D=3D=3D=0A=
false&&n=3D=3D=3D"GET"){var =
r=3DJ(),u=3De.url.replace(wb,"$1_=3D"+r+"$2");e.url=3Du+(u=3D=3D=3De.url?=
(ka.test(e.url)?"&":"?")+"_=3D"+r:"")}if(e.data&&n=3D=3D=3D"GET")e.url+=3D=
(ka.test(e.url)?"&":"?")+e.data;e.global&&!c.active++&&c.event.trigger("a=
jaxStart");r=3D(r=3Dxb.exec(e.url))&&(r[1]&&r[1]!=3D=3Dlocation.protocol|=
|r[2]!=3D=3Dlocation.host);if(e.dataType=3D=3D=3D"script"&&n=3D=3D=3D"GET=
"&&r){var =
z=3Ds.getElementsByTagName("head")[0]||s.documentElement,C=3Ds.createElem=
ent("script");C.src=3De.url;if(e.scriptCharset)C.charset=3De.scriptCharse=
t;if(!j){var B=3D=0A=
false;C.onload=3DC.onreadystatechange=3Dfunction(){if(!B&&(!this.readySta=
te||this.readyState=3D=3D=3D"loaded"||this.readyState=3D=3D=3D"complete")=
){B=3Dtrue;b();d();C.onload=3DC.onreadystatechange=3Dnull;z&&C.parentNode=
&&z.removeChild(C)}}}z.insertBefore(C,z.firstChild);return w}var =
E=3Dfalse,x=3De.xhr();if(x){e.username?x.open(n,e.url,e.async,e.username,=
e.password):x.open(n,e.url,e.async);try{if(e.data||a&&a.contentType)x.set=
RequestHeader("Content-Type",e.contentType);if(e.ifModified){c.lastModifi=
ed[e.url]&&x.setRequestHeader("If-Modified-Since",=0A=
c.lastModified[e.url]);c.etag[e.url]&&x.setRequestHeader("If-None-Match",=
c.etag[e.url])}r||x.setRequestHeader("X-Requested-With","XMLHttpRequest")=
;x.setRequestHeader("Accept",e.dataType&&e.accepts[e.dataType]?e.accepts[=
e.dataType]+", =
*/*":e.accepts._default)}catch(ga){}if(e.beforeSend&&e.beforeSend.call(k,=
x,e)=3D=3D=3Dfalse){e.global&&!--c.active&&c.event.trigger("ajaxStop");x.=
abort();return false}e.global&&f("ajaxSend",[x,e]);var =
g=3Dx.onreadystatechange=3Dfunction(q){if(!x||x.readyState=3D=3D=3D0||q=3D=
=3D=3D"abort"){E||=0A=
d();E=3Dtrue;if(x)x.onreadystatechange=3Dc.noop}else =
if(!E&&x&&(x.readyState=3D=3D=3D4||q=3D=3D=3D"timeout")){E=3Dtrue;x.onrea=
dystatechange=3Dc.noop;i=3Dq=3D=3D=3D"timeout"?"timeout":!c.httpSuccess(x=
)?"error":e.ifModified&&c.httpNotModified(x,e.url)?"notmodified":"success=
";var =
p;if(i=3D=3D=3D"success")try{o=3Dc.httpData(x,e.dataType,e)}catch(v){i=3D=
"parsererror";p=3Dv}if(i=3D=3D=3D"success"||i=3D=3D=3D"notmodified")j||b(=
);else =
c.handleError(e,x,i,p);d();q=3D=3D=3D"timeout"&&x.abort();if(e.async)x=3D=
null}};try{var h=3Dx.abort;x.abort=3Dfunction(){x&&h.call(x);=0A=
g("abort")}}catch(l){}e.async&&e.timeout>0&&setTimeout(function(){x&&!E&&=
g("timeout")},e.timeout);try{x.send(n=3D=3D=3D"POST"||n=3D=3D=3D"PUT"||n=3D=
=3D=3D"DELETE"?e.data:null)}catch(m){c.handleError(e,x,null,m);d()}e.asyn=
c||g();return =
x}},handleError:function(a,b,d,f){if(a.error)a.error.call(a.context||a,b,=
d,f);if(a.global)(a.context?c(a.context):c.event).trigger("ajaxError",[b,=
a,f])},active:0,httpSuccess:function(a){try{return!a.status&&location.pro=
tocol=3D=3D=3D"file:"||a.status>=3D200&&a.status<300||a.status=3D=3D=3D30=
4||a.status=3D=3D=3D=0A=
1223||a.status=3D=3D=3D0}catch(b){}return =
false},httpNotModified:function(a,b){var =
d=3Da.getResponseHeader("Last-Modified"),f=3Da.getResponseHeader("Etag");=
if(d)c.lastModified[b]=3Dd;if(f)c.etag[b]=3Df;return =
a.status=3D=3D=3D304||a.status=3D=3D=3D0},httpData:function(a,b,d){var =
f=3Da.getResponseHeader("content-type")||"",e=3Db=3D=3D=3D"xml"||!b&&f.in=
dexOf("xml")>=3D0;a=3De?a.responseXML:a.responseText;e&&a.documentElement=
.nodeName=3D=3D=3D"parsererror"&&c.error("parsererror");if(d&&d.dataFilte=
r)a=3Dd.dataFilter(a,b);if(typeof a=3D=3D=3D"string")if(b=3D=3D=3D=0A=
"json"||!b&&f.indexOf("json")>=3D0)a=3Dc.parseJSON(a);else =
if(b=3D=3D=3D"script"||!b&&f.indexOf("javascript")>=3D0)c.globalEval(a);r=
eturn a},param:function(a,b){function =
d(i,o){if(c.isArray(o))c.each(o,function(k,n){b||/\[\]$/.test(i)?f(i,n):d=
(i+"["+(typeof =
n=3D=3D=3D"object"||c.isArray(n)?k:"")+"]",n)});else!b&&o!=3Dnull&&typeof=
 =
o=3D=3D=3D"object"?c.each(o,function(k,n){d(i+"["+k+"]",n)}):f(i,o)}funct=
ion =
f(i,o){o=3Dc.isFunction(o)?o():o;e[e.length]=3DencodeURIComponent(i)+"=3D=
"+encodeURIComponent(o)}var =
e=3D[];if(b=3D=3D=3Dw)b=3Dc.ajaxSettings.traditional;=0A=
if(c.isArray(a)||a.jquery)c.each(a,function(){f(this.name,this.value)});e=
lse for(var j in a)d(j,a[j]);return e.join("&").replace(yb,"+")}});var =
la=3D{},Ab=3D/toggle|show|hide/,Bb=3D/^([+-]=3D)?([\d+-.]+)(.*)$/,W,va=3D=
[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["wid=
th","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]]=
;c.fn.extend({show:function(a,b){if(a||a=3D=3D=3D0)return =
this.animate(K("show",3),a,b);else{a=3D0;for(b=3Dthis.length;a<b;a++){var=
 d=3Dc.data(this[a],"olddisplay");=0A=
this[a].style.display=3Dd||"";if(c.css(this[a],"display")=3D=3D=3D"none")=
{d=3Dthis[a].nodeName;var f;if(la[d])f=3Dla[d];else{var e=3Dc("<"+d+" =
/>").appendTo("body");f=3De.css("display");if(f=3D=3D=3D"none")f=3D"block=
";e.remove();la[d]=3Df}c.data(this[a],"olddisplay",f)}}a=3D0;for(b=3Dthis=
.length;a<b;a++)this[a].style.display=3Dc.data(this[a],"olddisplay")||"";=
return this}},hide:function(a,b){if(a||a=3D=3D=3D0)return =
this.animate(K("hide",3),a,b);else{a=3D0;for(b=3Dthis.length;a<b;a++){var=
 d=3Dc.data(this[a],"olddisplay");!d&&d!=3D=3D"none"&&c.data(this[a],=0A=
"olddisplay",c.css(this[a],"display"))}a=3D0;for(b=3Dthis.length;a<b;a++)=
this[a].style.display=3D"none";return =
this}},_toggle:c.fn.toggle,toggle:function(a,b){var d=3Dtypeof =
a=3D=3D=3D"boolean";if(c.isFunction(a)&&c.isFunction(b))this._toggle.appl=
y(this,arguments);else a=3D=3Dnull||d?this.each(function(){var =
f=3Dd?a:c(this).is(":hidden");c(this)[f?"show":"hide"]()}):this.animate(K=
("toggle",3),a,b);return this},fadeTo:function(a,b,d){return =
this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},=
a,d)},=0A=
animate:function(a,b,d,f){var =
e=3Dc.speed(b,d,f);if(c.isEmptyObject(a))return =
this.each(e.complete);return =
this[e.queue=3D=3D=3Dfalse?"each":"queue"](function(){var =
j=3Dc.extend({},e),i,o=3Dthis.nodeType=3D=3D=3D1&&c(this).is(":hidden"),k=
=3Dthis;for(i in a){var =
n=3Di.replace(ia,ja);if(i!=3D=3Dn){a[n]=3Da[i];delete =
a[i];i=3Dn}if(a[i]=3D=3D=3D"hide"&&o||a[i]=3D=3D=3D"show"&&!o)return =
j.complete.call(this);if((i=3D=3D=3D"height"||i=3D=3D=3D"width")&&this.st=
yle){j.display=3Dc.css(this,"display");j.overflow=3Dthis.style.overflow}i=
f(c.isArray(a[i])){(j.specialEasing=3D=0A=
j.specialEasing||{})[i]=3Da[i][1];a[i]=3Da[i][0]}}if(j.overflow!=3Dnull)t=
his.style.overflow=3D"hidden";j.curAnim=3Dc.extend({},a);c.each(a,functio=
n(r,u){var z=3Dnew =
c.fx(k,j,r);if(Ab.test(u))z[u=3D=3D=3D"toggle"?o?"show":"hide":u](a);else=
{var C=3DBb.exec(u),B=3Dz.cur(true)||0;if(C){u=3DparseFloat(C[2]);var =
E=3DC[3]||"px";if(E!=3D=3D"px"){k.style[r]=3D(u||1)+E;B=3D(u||1)/z.cur(tr=
ue)*B;k.style[r]=3DB+E}if(C[1])u=3D(C[1]=3D=3D=3D"-=3D"?-1:1)*u+B;z.custo=
m(B,u,E)}else z.custom(B,u,"")}});return true})},stop:function(a,b){var =
d=3Dc.timers;a&&this.queue([]);=0A=
this.each(function(){for(var =
f=3Dd.length-1;f>=3D0;f--)if(d[f].elem=3D=3D=3Dthis){b&&d[f](true);d.spli=
ce(f,1)}});b||this.dequeue();return =
this}});c.each({slideDown:K("show",1),slideUp:K("hide",1),slideToggle:K("=
toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"}},function(a,b=
){c.fn[a]=3Dfunction(d,f){return =
this.animate(b,d,f)}});c.extend({speed:function(a,b,d){var f=3Da&&typeof =
a=3D=3D=3D"object"?a:{complete:d||!d&&b||c.isFunction(a)&&a,duration:a,ea=
sing:d&&b||b&&!c.isFunction(b)&&b};f.duration=3Dc.fx.off?0:typeof =
f.duration=3D=3D=3D=0A=
"number"?f.duration:c.fx.speeds[f.duration]||c.fx.speeds._default;f.old=3D=
f.complete;f.complete=3Dfunction(){f.queue!=3D=3Dfalse&&c(this).dequeue()=
;c.isFunction(f.old)&&f.old.call(this)};return =
f},easing:{linear:function(a,b,d,f){return =
d+f*a},swing:function(a,b,d,f){return(-Math.cos(a*Math.PI)/2+0.5)*f+d}},t=
imers:[],fx:function(a,b,d){this.options=3Db;this.elem=3Da;this.prop=3Dd;=
if(!b.orig)b.orig=3D{}}});c.fx.prototype=3D{update:function(){this.option=
s.step&&this.options.step.call(this.elem,this.now,this);(c.fx.step[this.p=
rop]||=0A=
c.fx.step._default)(this);if((this.prop=3D=3D=3D"height"||this.prop=3D=3D=
=3D"width")&&this.elem.style)this.elem.style.display=3D"block"},cur:funct=
ion(a){if(this.elem[this.prop]!=3Dnull&&(!this.elem.style||this.elem.styl=
e[this.prop]=3D=3Dnull))return =
this.elem[this.prop];return(a=3DparseFloat(c.css(this.elem,this.prop,a)))=
&&a>-10000?a:parseFloat(c.curCSS(this.elem,this.prop))||0},custom:functio=
n(a,b,d){function f(j){return =
e.step(j)}this.startTime=3DJ();this.start=3Da;this.end=3Db;this.unit=3Dd|=
|this.unit||"px";this.now=3Dthis.start;=0A=
this.pos=3Dthis.state=3D0;var =
e=3Dthis;f.elem=3Dthis.elem;if(f()&&c.timers.push(f)&&!W)W=3DsetInterval(=
c.fx.tick,13)},show:function(){this.options.orig[this.prop]=3Dc.style(thi=
s.elem,this.prop);this.options.show=3Dtrue;this.custom(this.prop=3D=3D=3D=
"width"||this.prop=3D=3D=3D"height"?1:0,this.cur());c(this.elem).show()},=
hide:function(){this.options.orig[this.prop]=3Dc.style(this.elem,this.pro=
p);this.options.hide=3Dtrue;this.custom(this.cur(),0)},step:function(a){v=
ar =
b=3DJ(),d=3Dtrue;if(a||b>=3Dthis.options.duration+this.startTime){this.no=
w=3D=0A=
this.end;this.pos=3Dthis.state=3D1;this.update();this.options.curAnim[thi=
s.prop]=3Dtrue;for(var f in =
this.options.curAnim)if(this.options.curAnim[f]!=3D=3Dtrue)d=3Dfalse;if(d=
){if(this.options.display!=3Dnull){this.elem.style.overflow=3Dthis.option=
s.overflow;a=3Dc.data(this.elem,"olddisplay");this.elem.style.display=3Da=
?a:this.options.display;if(c.css(this.elem,"display")=3D=3D=3D"none")this=
.elem.style.display=3D"block"}this.options.hide&&c(this.elem).hide();if(t=
his.options.hide||this.options.show)for(var e in =
this.options.curAnim)c.style(this.elem,=0A=
e,this.options.orig[e]);this.options.complete.call(this.elem)}return =
false}else{e=3Db-this.startTime;this.state=3De/this.options.duration;a=3D=
this.options.easing||(c.easing.swing?"swing":"linear");this.pos=3Dc.easin=
g[this.options.specialEasing&&this.options.specialEasing[this.prop]||a](t=
his.state,e,0,1,this.options.duration);this.now=3Dthis.start+(this.end-th=
is.start)*this.pos;this.update()}return =
true}};c.extend(c.fx,{tick:function(){for(var =
a=3Dc.timers,b=3D0;b<a.length;b++)a[b]()||a.splice(b--,1);a.length||=0A=
c.fx.stop()},stop:function(){clearInterval(W);W=3Dnull},speeds:{slow:600,=
fast:200,_default:400},step:{opacity:function(a){c.style(a.elem,"opacity"=
,a.now)},_default:function(a){if(a.elem.style&&a.elem.style[a.prop]!=3Dnu=
ll)a.elem.style[a.prop]=3D(a.prop=3D=3D=3D"width"||a.prop=3D=3D=3D"height=
"?Math.max(0,a.now):a.now)+a.unit;else =
a.elem[a.prop]=3Da.now}}});if(c.expr&&c.expr.filters)c.expr.filters.anima=
ted=3Dfunction(a){return c.grep(c.timers,function(b){return =
a=3D=3D=3Db.elem}).length};c.fn.offset=3D"getBoundingClientRect"in =
s.documentElement?=0A=
function(a){var b=3Dthis[0];if(a)return =
this.each(function(e){c.offset.setOffset(this,a,e)});if(!b||!b.ownerDocum=
ent)return null;if(b=3D=3D=3Db.ownerDocument.body)return =
c.offset.bodyOffset(b);var =
d=3Db.getBoundingClientRect(),f=3Db.ownerDocument;b=3Df.body;f=3Df.docume=
ntElement;return{top:d.top+(self.pageYOffset||c.support.boxModel&&f.scrol=
lTop||b.scrollTop)-(f.clientTop||b.clientTop||0),left:d.left+(self.pageXO=
ffset||c.support.boxModel&&f.scrollLeft||b.scrollLeft)-(f.clientLeft||b.c=
lientLeft||0)}}:function(a){var b=3D=0A=
this[0];if(a)return =
this.each(function(r){c.offset.setOffset(this,a,r)});if(!b||!b.ownerDocum=
ent)return null;if(b=3D=3D=3Db.ownerDocument.body)return =
c.offset.bodyOffset(b);c.offset.initialize();var =
d=3Db.offsetParent,f=3Db,e=3Db.ownerDocument,j,i=3De.documentElement,o=3D=
e.body;f=3D(e=3De.defaultView)?e.getComputedStyle(b,null):b.currentStyle;=
for(var =
k=3Db.offsetTop,n=3Db.offsetLeft;(b=3Db.parentNode)&&b!=3D=3Do&&b!=3D=3Di=
;){if(c.offset.supportsFixedPosition&&f.position=3D=3D=3D"fixed")break;j=3D=
e?e.getComputedStyle(b,null):b.currentStyle;=0A=
k-=3Db.scrollTop;n-=3Db.scrollLeft;if(b=3D=3D=3Dd){k+=3Db.offsetTop;n+=3D=
b.offsetLeft;if(c.offset.doesNotAddBorder&&!(c.offset.doesAddBorderForTab=
leAndCells&&/^t(able|d|h)$/i.test(b.nodeName))){k+=3DparseFloat(j.borderT=
opWidth)||0;n+=3DparseFloat(j.borderLeftWidth)||0}f=3Dd;d=3Db.offsetParen=
t}if(c.offset.subtractsBorderForOverflowNotVisible&&j.overflow!=3D=3D"vis=
ible"){k+=3DparseFloat(j.borderTopWidth)||0;n+=3DparseFloat(j.borderLeftW=
idth)||0}f=3Dj}if(f.position=3D=3D=3D"relative"||f.position=3D=3D=3D"stat=
ic"){k+=3Do.offsetTop;n+=3Do.offsetLeft}if(c.offset.supportsFixedPosition=
&&=0A=
f.position=3D=3D=3D"fixed"){k+=3DMath.max(i.scrollTop,o.scrollTop);n+=3DM=
ath.max(i.scrollLeft,o.scrollLeft)}return{top:k,left:n}};c.offset=3D{init=
ialize:function(){var =
a=3Ds.body,b=3Ds.createElement("div"),d,f,e,j=3DparseFloat(c.curCSS(a,"ma=
rginTop",true))||0;c.extend(b.style,{position:"absolute",top:0,left:0,mar=
gin:0,border:0,width:"1px",height:"1px",visibility:"hidden"});b.innerHTML=
=3D"<div style=3D'position:absolute;top:0;left:0;margin:0;border:5px =
solid #000;padding:0;width:1px;height:1px;'><div></div></div><table =
style=3D'position:absolute;top:0;left:0;margin:0;border:5px solid =
#000;padding:0;width:1px;height:1px;' cellpadding=3D'0' =
cellspacing=3D'0'><tr><td></td></tr></table>";=0A=
a.insertBefore(b,a.firstChild);d=3Db.firstChild;f=3Dd.firstChild;e=3Dd.ne=
xtSibling.firstChild.firstChild;this.doesNotAddBorder=3Df.offsetTop!=3D=3D=
5;this.doesAddBorderForTableAndCells=3De.offsetTop=3D=3D=3D5;f.style.posi=
tion=3D"fixed";f.style.top=3D"20px";this.supportsFixedPosition=3Df.offset=
Top=3D=3D=3D20||f.offsetTop=3D=3D=3D15;f.style.position=3Df.style.top=3D"=
";d.style.overflow=3D"hidden";d.style.position=3D"relative";this.subtract=
sBorderForOverflowNotVisible=3Df.offsetTop=3D=3D=3D-5;this.doesNotInclude=
MarginInBodyOffset=3Da.offsetTop!=3D=3Dj;a.removeChild(b);=0A=
c.offset.initialize=3Dc.noop},bodyOffset:function(a){var =
b=3Da.offsetTop,d=3Da.offsetLeft;c.offset.initialize();if(c.offset.doesNo=
tIncludeMarginInBodyOffset){b+=3DparseFloat(c.curCSS(a,"marginTop",true))=
||0;d+=3DparseFloat(c.curCSS(a,"marginLeft",true))||0}return{top:b,left:d=
}},setOffset:function(a,b,d){if(/static/.test(c.curCSS(a,"position")))a.s=
tyle.position=3D"relative";var =
f=3Dc(a),e=3Df.offset(),j=3DparseInt(c.curCSS(a,"top",true),10)||0,i=3Dpa=
rseInt(c.curCSS(a,"left",true),10)||0;if(c.isFunction(b))b=3Db.call(a,=0A=
d,e);d=3D{top:b.top-e.top+j,left:b.left-e.left+i};"using"in =
b?b.using.call(a,d):f.css(d)}};c.fn.extend({position:function(){if(!this[=
0])return null;var =
a=3Dthis[0],b=3Dthis.offsetParent(),d=3Dthis.offset(),f=3D/^body|html$/i.=
test(b[0].nodeName)?{top:0,left:0}:b.offset();d.top-=3DparseFloat(c.curCS=
S(a,"marginTop",true))||0;d.left-=3DparseFloat(c.curCSS(a,"marginLeft",tr=
ue))||0;f.top+=3DparseFloat(c.curCSS(b[0],"borderTopWidth",true))||0;f.le=
ft+=3DparseFloat(c.curCSS(b[0],"borderLeftWidth",true))||0;return{top:d.t=
op-=0A=
f.top,left:d.left-f.left}},offsetParent:function(){return =
this.map(function(){for(var =
a=3Dthis.offsetParent||s.body;a&&!/^body|html$/i.test(a.nodeName)&&c.css(=
a,"position")=3D=3D=3D"static";)a=3Da.offsetParent;return =
a})}});c.each(["Left","Top"],function(a,b){var =
d=3D"scroll"+b;c.fn[d]=3Dfunction(f){var e=3Dthis[0],j;if(!e)return =
null;if(f!=3D=3Dw)return =
this.each(function(){if(j=3Dwa(this))j.scrollTo(!a?f:c(j).scrollLeft(),a?=
f:c(j).scrollTop());else this[d]=3Df});else =
return(j=3Dwa(e))?"pageXOffset"in j?j[a?"pageYOffset":=0A=
"pageXOffset"]:c.support.boxModel&&j.document.documentElement[d]||j.docum=
ent.body[d]:e[d]}});c.each(["Height","Width"],function(a,b){var =
d=3Db.toLowerCase();c.fn["inner"+b]=3Dfunction(){return =
this[0]?c.css(this[0],d,false,"padding"):null};c.fn["outer"+b]=3Dfunction=
(f){return =
this[0]?c.css(this[0],d,false,f?"margin":"border"):null};c.fn[d]=3Dfuncti=
on(f){var e=3Dthis[0];if(!e)return =
f=3D=3Dnull?null:this;if(c.isFunction(f))return =
this.each(function(j){var =
i=3Dc(this);i[d](f.call(this,j,i[d]()))});return"scrollTo"in=0A=
e&&e.document?e.document.compatMode=3D=3D=3D"CSS1Compat"&&e.document.docu=
mentElement["client"+b]||e.document.body["client"+b]:e.nodeType=3D=3D=3D9=
?Math.max(e.documentElement["client"+b],e.body["scroll"+b],e.documentElem=
ent["scroll"+b],e.body["offset"+b],e.documentElement["offset"+b]):f=3D=3D=
=3Dw?c.css(e,d):this.css(d,typeof =
f=3D=3D=3D"string"?f:f+"px")}});A.jQuery=3DA.$=3Dc})(window);=0A=

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/javascripts/prototype.js?1323190114

/*  Prototype JavaScript framework, version 1.6.0.3=0A=
 *  (c) 2005-2008 Sam Stephenson=0A=
 *=0A=
 *  Prototype is freely distributable under the terms of an MIT-style =
license.=0A=
 *  For details, see the Prototype web site: http://www.prototypejs.org/=0A=
 *=0A=
 =
*------------------------------------------------------------------------=
--*/=0A=
=0A=
var Prototype =3D {=0A=
  Version: '1.6.0.3',=0A=
=0A=
  Browser: {=0A=
    IE:     !!(window.attachEvent &&=0A=
      navigator.userAgent.indexOf('Opera') =3D=3D=3D -1),=0A=
    Opera:  navigator.userAgent.indexOf('Opera') > -1,=0A=
    WebKit: navigator.userAgent.indexOf('AppleWebKit/') > -1,=0A=
    Gecko:  navigator.userAgent.indexOf('Gecko') > -1 &&=0A=
      navigator.userAgent.indexOf('KHTML') =3D=3D=3D -1,=0A=
    MobileSafari: !!navigator.userAgent.match(/Apple.*Mobile.*Safari/)=0A=
  },=0A=
=0A=
  BrowserFeatures: {=0A=
    XPath: !!document.evaluate,=0A=
    SelectorsAPI: !!document.querySelector,=0A=
    ElementExtensions: !!window.HTMLElement,=0A=
    SpecificElementExtensions:=0A=
      document.createElement('div')['__proto__'] &&=0A=
      document.createElement('div')['__proto__'] !=3D=3D=0A=
        document.createElement('form')['__proto__']=0A=
  },=0A=
=0A=
  ScriptFragment: '<script[^>]*>([\\S\\s]*?)<\/script>',=0A=
  JSONFilter: /^\/\*-secure-([\s\S]*)\*\/\s*$/,=0A=
=0A=
  emptyFunction: function() { },=0A=
  K: function(x) { return x }=0A=
};=0A=
=0A=
if (Prototype.Browser.MobileSafari)=0A=
  Prototype.BrowserFeatures.SpecificElementExtensions =3D false;=0A=
=0A=
=0A=
/* Based on Alex Arnell's inheritance implementation. */=0A=
var Class =3D {=0A=
  create: function() {=0A=
    var parent =3D null, properties =3D $A(arguments);=0A=
    if (Object.isFunction(properties[0]))=0A=
      parent =3D properties.shift();=0A=
=0A=
    function klass() {=0A=
      this.initialize.apply(this, arguments);=0A=
    }=0A=
=0A=
    Object.extend(klass, Class.Methods);=0A=
    klass.superclass =3D parent;=0A=
    klass.subclasses =3D [];=0A=
=0A=
    if (parent) {=0A=
      var subclass =3D function() { };=0A=
      subclass.prototype =3D parent.prototype;=0A=
      klass.prototype =3D new subclass;=0A=
      parent.subclasses.push(klass);=0A=
    }=0A=
=0A=
    for (var i =3D 0; i < properties.length; i++)=0A=
      klass.addMethods(properties[i]);=0A=
=0A=
    if (!klass.prototype.initialize)=0A=
      klass.prototype.initialize =3D Prototype.emptyFunction;=0A=
=0A=
    klass.prototype.constructor =3D klass;=0A=
=0A=
    return klass;=0A=
  }=0A=
};=0A=
=0A=
Class.Methods =3D {=0A=
  addMethods: function(source) {=0A=
    var ancestor   =3D this.superclass && this.superclass.prototype;=0A=
    var properties =3D Object.keys(source);=0A=
=0A=
    if (!Object.keys({ toString: true }).length)=0A=
      properties.push("toString", "valueOf");=0A=
=0A=
    for (var i =3D 0, length =3D properties.length; i < length; i++) {=0A=
      var property =3D properties[i], value =3D source[property];=0A=
      if (ancestor && Object.isFunction(value) &&=0A=
          value.argumentNames().first() =3D=3D "$super") {=0A=
        var method =3D value;=0A=
        value =3D (function(m) {=0A=
          return function() { return ancestor[m].apply(this, arguments) =
};=0A=
        })(property).wrap(method);=0A=
=0A=
        value.valueOf =3D method.valueOf.bind(method);=0A=
        value.toString =3D method.toString.bind(method);=0A=
      }=0A=
      this.prototype[property] =3D value;=0A=
    }=0A=
=0A=
    return this;=0A=
  }=0A=
};=0A=
=0A=
var Abstract =3D { };=0A=
=0A=
Object.extend =3D function(destination, source) {=0A=
  for (var property in source)=0A=
    destination[property] =3D source[property];=0A=
  return destination;=0A=
};=0A=
=0A=
Object.extend(Object, {=0A=
  inspect: function(object) {=0A=
    try {=0A=
      if (Object.isUndefined(object)) return 'undefined';=0A=
      if (object =3D=3D=3D null) return 'null';=0A=
      return object.inspect ? object.inspect() : String(object);=0A=
    } catch (e) {=0A=
      if (e instanceof RangeError) return '...';=0A=
      throw e;=0A=
    }=0A=
  },=0A=
=0A=
  toJSON: function(object) {=0A=
    var type =3D typeof object;=0A=
    switch (type) {=0A=
      case 'undefined':=0A=
      case 'function':=0A=
      case 'unknown': return;=0A=
      case 'boolean': return object.toString();=0A=
    }=0A=
=0A=
    if (object =3D=3D=3D null) return 'null';=0A=
    if (object.toJSON) return object.toJSON();=0A=
    if (Object.isElement(object)) return;=0A=
=0A=
    var results =3D [];=0A=
    for (var property in object) {=0A=
      var value =3D Object.toJSON(object[property]);=0A=
      if (!Object.isUndefined(value))=0A=
        results.push(property.toJSON() + ': ' + value);=0A=
    }=0A=
=0A=
    return '{' + results.join(', ') + '}';=0A=
  },=0A=
=0A=
  toQueryString: function(object) {=0A=
    return $H(object).toQueryString();=0A=
  },=0A=
=0A=
  toHTML: function(object) {=0A=
    return object && object.toHTML ? object.toHTML() : =
String.interpret(object);=0A=
  },=0A=
=0A=
  keys: function(object) {=0A=
    var keys =3D [];=0A=
    for (var property in object)=0A=
      keys.push(property);=0A=
    return keys;=0A=
  },=0A=
=0A=
  values: function(object) {=0A=
    var values =3D [];=0A=
    for (var property in object)=0A=
      values.push(object[property]);=0A=
    return values;=0A=
  },=0A=
=0A=
  clone: function(object) {=0A=
    return Object.extend({ }, object);=0A=
  },=0A=
=0A=
  isElement: function(object) {=0A=
    return !!(object && object.nodeType =3D=3D 1);=0A=
  },=0A=
=0A=
  isArray: function(object) {=0A=
    return object !=3D null && typeof object =3D=3D "object" &&=0A=
      'splice' in object && 'join' in object;=0A=
  },=0A=
=0A=
  isHash: function(object) {=0A=
    return object instanceof Hash;=0A=
  },=0A=
=0A=
  isFunction: function(object) {=0A=
    return typeof object =3D=3D "function";=0A=
  },=0A=
=0A=
  isString: function(object) {=0A=
    return typeof object =3D=3D "string";=0A=
  },=0A=
=0A=
  isNumber: function(object) {=0A=
    return typeof object =3D=3D "number";=0A=
  },=0A=
=0A=
  isUndefined: function(object) {=0A=
    return typeof object =3D=3D "undefined";=0A=
  }=0A=
});=0A=
=0A=
Object.extend(Function.prototype, {=0A=
  argumentNames: function() {=0A=
    var names =3D =
this.toString().match(/^[\s\(]*function[^(]*\(([^\)]*)\)/)[1]=0A=
      .replace(/\s+/g, '').split(',');=0A=
    return names.length =3D=3D 1 && !names[0] ? [] : names;=0A=
  },=0A=
=0A=
  bind: function() {=0A=
    if (arguments.length < 2 && Object.isUndefined(arguments[0])) return =
this;=0A=
    var __method =3D this, args =3D $A(arguments), object =3D =
args.shift();=0A=
    return function() {=0A=
      return __method.apply(object, args.concat($A(arguments)));=0A=
    }=0A=
  },=0A=
=0A=
  bindAsEventListener: function() {=0A=
    var __method =3D this, args =3D $A(arguments), object =3D =
args.shift();=0A=
    return function(event) {=0A=
      return __method.apply(object, [event || =
window.event].concat(args));=0A=
    }=0A=
  },=0A=
=0A=
  curry: function() {=0A=
    if (!arguments.length) return this;=0A=
    var __method =3D this, args =3D $A(arguments);=0A=
    return function() {=0A=
      return __method.apply(this, args.concat($A(arguments)));=0A=
    }=0A=
  },=0A=
=0A=
  delay: function() {=0A=
    var __method =3D this, args =3D $A(arguments), timeout =3D =
args.shift() * 1000;=0A=
    return window.setTimeout(function() {=0A=
      return __method.apply(__method, args);=0A=
    }, timeout);=0A=
  },=0A=
=0A=
  defer: function() {=0A=
    var args =3D [0.01].concat($A(arguments));=0A=
    return this.delay.apply(this, args);=0A=
  },=0A=
=0A=
  wrap: function(wrapper) {=0A=
    var __method =3D this;=0A=
    return function() {=0A=
      return wrapper.apply(this, =
[__method.bind(this)].concat($A(arguments)));=0A=
    }=0A=
  },=0A=
=0A=
  methodize: function() {=0A=
    if (this._methodized) return this._methodized;=0A=
    var __method =3D this;=0A=
    return this._methodized =3D function() {=0A=
      return __method.apply(null, [this].concat($A(arguments)));=0A=
    };=0A=
  }=0A=
});=0A=
=0A=
Date.prototype.toJSON =3D function() {=0A=
  return '"' + this.getUTCFullYear() + '-' +=0A=
    (this.getUTCMonth() + 1).toPaddedString(2) + '-' +=0A=
    this.getUTCDate().toPaddedString(2) + 'T' +=0A=
    this.getUTCHours().toPaddedString(2) + ':' +=0A=
    this.getUTCMinutes().toPaddedString(2) + ':' +=0A=
    this.getUTCSeconds().toPaddedString(2) + 'Z"';=0A=
};=0A=
=0A=
var Try =3D {=0A=
  these: function() {=0A=
    var returnValue;=0A=
=0A=
    for (var i =3D 0, length =3D arguments.length; i < length; i++) {=0A=
      var lambda =3D arguments[i];=0A=
      try {=0A=
        returnValue =3D lambda();=0A=
        break;=0A=
      } catch (e) { }=0A=
    }=0A=
=0A=
    return returnValue;=0A=
  }=0A=
};=0A=
=0A=
RegExp.prototype.match =3D RegExp.prototype.test;=0A=
=0A=
RegExp.escape =3D function(str) {=0A=
  return String(str).replace(/([.*+?^=3D!:${}()|[\]\/\\])/g, '\\$1');=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var PeriodicalExecuter =3D Class.create({=0A=
  initialize: function(callback, frequency) {=0A=
    this.callback =3D callback;=0A=
    this.frequency =3D frequency;=0A=
    this.currentlyExecuting =3D false;=0A=
=0A=
    this.registerCallback();=0A=
  },=0A=
=0A=
  registerCallback: function() {=0A=
    this.timer =3D setInterval(this.onTimerEvent.bind(this), =
this.frequency * 1000);=0A=
  },=0A=
=0A=
  execute: function() {=0A=
    this.callback(this);=0A=
  },=0A=
=0A=
  stop: function() {=0A=
    if (!this.timer) return;=0A=
    clearInterval(this.timer);=0A=
    this.timer =3D null;=0A=
  },=0A=
=0A=
  onTimerEvent: function() {=0A=
    if (!this.currentlyExecuting) {=0A=
      try {=0A=
        this.currentlyExecuting =3D true;=0A=
        this.execute();=0A=
      } finally {=0A=
        this.currentlyExecuting =3D false;=0A=
      }=0A=
    }=0A=
  }=0A=
});=0A=
Object.extend(String, {=0A=
  interpret: function(value) {=0A=
    return value =3D=3D null ? '' : String(value);=0A=
  },=0A=
  specialChar: {=0A=
    '\b': '\\b',=0A=
    '\t': '\\t',=0A=
    '\n': '\\n',=0A=
    '\f': '\\f',=0A=
    '\r': '\\r',=0A=
    '\\': '\\\\'=0A=
  }=0A=
});=0A=
=0A=
Object.extend(String.prototype, {=0A=
  gsub: function(pattern, replacement) {=0A=
    var result =3D '', source =3D this, match;=0A=
    replacement =3D arguments.callee.prepareReplacement(replacement);=0A=
=0A=
    while (source.length > 0) {=0A=
      if (match =3D source.match(pattern)) {=0A=
        result +=3D source.slice(0, match.index);=0A=
        result +=3D String.interpret(replacement(match));=0A=
        source  =3D source.slice(match.index + match[0].length);=0A=
      } else {=0A=
        result +=3D source, source =3D '';=0A=
      }=0A=
    }=0A=
    return result;=0A=
  },=0A=
=0A=
  sub: function(pattern, replacement, count) {=0A=
    replacement =3D this.gsub.prepareReplacement(replacement);=0A=
    count =3D Object.isUndefined(count) ? 1 : count;=0A=
=0A=
    return this.gsub(pattern, function(match) {=0A=
      if (--count < 0) return match[0];=0A=
      return replacement(match);=0A=
    });=0A=
  },=0A=
=0A=
  scan: function(pattern, iterator) {=0A=
    this.gsub(pattern, iterator);=0A=
    return String(this);=0A=
  },=0A=
=0A=
  truncate: function(length, truncation) {=0A=
    length =3D length || 30;=0A=
    truncation =3D Object.isUndefined(truncation) ? '...' : truncation;=0A=
    return this.length > length ?=0A=
      this.slice(0, length - truncation.length) + truncation : =
String(this);=0A=
  },=0A=
=0A=
  strip: function() {=0A=
    return this.replace(/^\s+/, '').replace(/\s+$/, '');=0A=
  },=0A=
=0A=
  stripTags: function() {=0A=
    return this.replace(/<\/?[^>]+>/gi, '');=0A=
  },=0A=
=0A=
  stripScripts: function() {=0A=
    return this.replace(new RegExp(Prototype.ScriptFragment, 'img'), '');=0A=
  },=0A=
=0A=
  extractScripts: function() {=0A=
    var matchAll =3D new RegExp(Prototype.ScriptFragment, 'img');=0A=
    var matchOne =3D new RegExp(Prototype.ScriptFragment, 'im');=0A=
    return (this.match(matchAll) || []).map(function(scriptTag) {=0A=
      return (scriptTag.match(matchOne) || ['', ''])[1];=0A=
    });=0A=
  },=0A=
=0A=
  evalScripts: function() {=0A=
    return this.extractScripts().map(function(script) { return =
eval(script) });=0A=
  },=0A=
=0A=
  escapeHTML: function() {=0A=
    var self =3D arguments.callee;=0A=
    self.text.data =3D this;=0A=
    return self.div.innerHTML;=0A=
  },=0A=
=0A=
  unescapeHTML: function() {=0A=
    var div =3D new Element('div');=0A=
    div.innerHTML =3D this.stripTags();=0A=
    return div.childNodes[0] ? (div.childNodes.length > 1 ?=0A=
      $A(div.childNodes).inject('', function(memo, node) { return =
memo+node.nodeValue }) :=0A=
      div.childNodes[0].nodeValue) : '';=0A=
  },=0A=
=0A=
  toQueryParams: function(separator) {=0A=
    var match =3D this.strip().match(/([^?#]*)(#.*)?$/);=0A=
    if (!match) return { };=0A=
=0A=
    return match[1].split(separator || '&').inject({ }, function(hash, =
pair) {=0A=
      if ((pair =3D pair.split('=3D'))[0]) {=0A=
        var key =3D decodeURIComponent(pair.shift());=0A=
        var value =3D pair.length > 1 ? pair.join('=3D') : pair[0];=0A=
        if (value !=3D undefined) value =3D decodeURIComponent(value);=0A=
=0A=
        if (key in hash) {=0A=
          if (!Object.isArray(hash[key])) hash[key] =3D [hash[key]];=0A=
          hash[key].push(value);=0A=
        }=0A=
        else hash[key] =3D value;=0A=
      }=0A=
      return hash;=0A=
    });=0A=
  },=0A=
=0A=
  toArray: function() {=0A=
    return this.split('');=0A=
  },=0A=
=0A=
  succ: function() {=0A=
    return this.slice(0, this.length - 1) +=0A=
      String.fromCharCode(this.charCodeAt(this.length - 1) + 1);=0A=
  },=0A=
=0A=
  times: function(count) {=0A=
    return count < 1 ? '' : new Array(count + 1).join(this);=0A=
  },=0A=
=0A=
  camelize: function() {=0A=
    var parts =3D this.split('-'), len =3D parts.length;=0A=
    if (len =3D=3D 1) return parts[0];=0A=
=0A=
    var camelized =3D this.charAt(0) =3D=3D '-'=0A=
      ? parts[0].charAt(0).toUpperCase() + parts[0].substring(1)=0A=
      : parts[0];=0A=
=0A=
    for (var i =3D 1; i < len; i++)=0A=
      camelized +=3D parts[i].charAt(0).toUpperCase() + =
parts[i].substring(1);=0A=
=0A=
    return camelized;=0A=
  },=0A=
=0A=
  capitalize: function() {=0A=
    return this.charAt(0).toUpperCase() + =
this.substring(1).toLowerCase();=0A=
  },=0A=
=0A=
  underscore: function() {=0A=
    return this.gsub(/::/, =
'/').gsub(/([A-Z]+)([A-Z][a-z])/,'#{1}_#{2}').gsub(/([a-z\d])([A-Z])/,'#{=
1}_#{2}').gsub(/-/,'_').toLowerCase();=0A=
  },=0A=
=0A=
  dasherize: function() {=0A=
    return this.gsub(/_/,'-');=0A=
  },=0A=
=0A=
  inspect: function(useDoubleQuotes) {=0A=
    var escapedString =3D this.gsub(/[\x00-\x1f\\]/, function(match) {=0A=
      var character =3D String.specialChar[match[0]];=0A=
      return character ? character : '\\u00' + =
match[0].charCodeAt().toPaddedString(2, 16);=0A=
    });=0A=
    if (useDoubleQuotes) return '"' + escapedString.replace(/"/g, '\\"') =
+ '"';=0A=
    return "'" + escapedString.replace(/'/g, '\\\'') + "'";=0A=
  },=0A=
=0A=
  toJSON: function() {=0A=
    return this.inspect(true);=0A=
  },=0A=
=0A=
  unfilterJSON: function(filter) {=0A=
    return this.sub(filter || Prototype.JSONFilter, '#{1}');=0A=
  },=0A=
=0A=
  isJSON: function() {=0A=
    var str =3D this;=0A=
    if (str.blank()) return false;=0A=
    str =3D this.replace(/\\./g, '@').replace(/"[^"\\\n\r]*"/g, '');=0A=
    return (/^[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]*$/).test(str);=0A=
  },=0A=
=0A=
  evalJSON: function(sanitize) {=0A=
    var json =3D this.unfilterJSON();=0A=
    try {=0A=
      if (!sanitize || json.isJSON()) return eval('(' + json + ')');=0A=
    } catch (e) { }=0A=
    throw new SyntaxError('Badly formed JSON string: ' + this.inspect());=0A=
  },=0A=
=0A=
  include: function(pattern) {=0A=
    return this.indexOf(pattern) > -1;=0A=
  },=0A=
=0A=
  startsWith: function(pattern) {=0A=
    return this.indexOf(pattern) =3D=3D=3D 0;=0A=
  },=0A=
=0A=
  endsWith: function(pattern) {=0A=
    var d =3D this.length - pattern.length;=0A=
    return d >=3D 0 && this.lastIndexOf(pattern) =3D=3D=3D d;=0A=
  },=0A=
=0A=
  empty: function() {=0A=
    return this =3D=3D '';=0A=
  },=0A=
=0A=
  blank: function() {=0A=
    return /^\s*$/.test(this);=0A=
  },=0A=
=0A=
  interpolate: function(object, pattern) {=0A=
    return new Template(this, pattern).evaluate(object);=0A=
  }=0A=
});=0A=
=0A=
if (Prototype.Browser.WebKit || Prototype.Browser.IE) =
Object.extend(String.prototype, {=0A=
  escapeHTML: function() {=0A=
    return =
this.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');=0A=
  },=0A=
  unescapeHTML: function() {=0A=
    return =
this.stripTags().replace(/&amp;/g,'&').replace(/&lt;/g,'<').replace(/&gt;=
/g,'>');=0A=
  }=0A=
});=0A=
=0A=
String.prototype.gsub.prepareReplacement =3D function(replacement) {=0A=
  if (Object.isFunction(replacement)) return replacement;=0A=
  var template =3D new Template(replacement);=0A=
  return function(match) { return template.evaluate(match) };=0A=
};=0A=
=0A=
String.prototype.parseQuery =3D String.prototype.toQueryParams;=0A=
=0A=
Object.extend(String.prototype.escapeHTML, {=0A=
  div:  document.createElement('div'),=0A=
  text: document.createTextNode('')=0A=
});=0A=
=0A=
String.prototype.escapeHTML.div.appendChild(String.prototype.escapeHTML.t=
ext);=0A=
=0A=
var Template =3D Class.create({=0A=
  initialize: function(template, pattern) {=0A=
    this.template =3D template.toString();=0A=
    this.pattern =3D pattern || Template.Pattern;=0A=
  },=0A=
=0A=
  evaluate: function(object) {=0A=
    if (Object.isFunction(object.toTemplateReplacements))=0A=
      object =3D object.toTemplateReplacements();=0A=
=0A=
    return this.template.gsub(this.pattern, function(match) {=0A=
      if (object =3D=3D null) return '';=0A=
=0A=
      var before =3D match[1] || '';=0A=
      if (before =3D=3D '\\') return match[2];=0A=
=0A=
      var ctx =3D object, expr =3D match[3];=0A=
      var pattern =3D /^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;=0A=
      match =3D pattern.exec(expr);=0A=
      if (match =3D=3D null) return before;=0A=
=0A=
      while (match !=3D null) {=0A=
        var comp =3D match[1].startsWith('[') ? match[2].gsub('\\\\]', =
']') : match[1];=0A=
        ctx =3D ctx[comp];=0A=
        if (null =3D=3D ctx || '' =3D=3D match[3]) break;=0A=
        expr =3D expr.substring('[' =3D=3D match[3] ? match[1].length : =
match[0].length);=0A=
        match =3D pattern.exec(expr);=0A=
      }=0A=
=0A=
      return before + String.interpret(ctx);=0A=
    });=0A=
  }=0A=
});=0A=
Template.Pattern =3D /(^|.|\r|\n)(#\{(.*?)\})/;=0A=
=0A=
var $break =3D { };=0A=
=0A=
var Enumerable =3D {=0A=
  each: function(iterator, context) {=0A=
    var index =3D 0;=0A=
    try {=0A=
      this._each(function(value) {=0A=
        iterator.call(context, value, index++);=0A=
      });=0A=
    } catch (e) {=0A=
      if (e !=3D $break) throw e;=0A=
    }=0A=
    return this;=0A=
  },=0A=
=0A=
  eachSlice: function(number, iterator, context) {=0A=
    var index =3D -number, slices =3D [], array =3D this.toArray();=0A=
    if (number < 1) return array;=0A=
    while ((index +=3D number) < array.length)=0A=
      slices.push(array.slice(index, index+number));=0A=
    return slices.collect(iterator, context);=0A=
  },=0A=
=0A=
  all: function(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result =3D true;=0A=
    this.each(function(value, index) {=0A=
      result =3D result && !!iterator.call(context, value, index);=0A=
      if (!result) throw $break;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  any: function(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result =3D false;=0A=
    this.each(function(value, index) {=0A=
      if (result =3D !!iterator.call(context, value, index))=0A=
        throw $break;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  collect: function(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      results.push(iterator.call(context, value, index));=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  detect: function(iterator, context) {=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      if (iterator.call(context, value, index)) {=0A=
        result =3D value;=0A=
        throw $break;=0A=
      }=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  findAll: function(iterator, context) {=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      if (iterator.call(context, value, index))=0A=
        results.push(value);=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  grep: function(filter, iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var results =3D [];=0A=
=0A=
    if (Object.isString(filter))=0A=
      filter =3D new RegExp(filter);=0A=
=0A=
    this.each(function(value, index) {=0A=
      if (filter.match(value))=0A=
        results.push(iterator.call(context, value, index));=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  include: function(object) {=0A=
    if (Object.isFunction(this.indexOf))=0A=
      if (this.indexOf(object) !=3D -1) return true;=0A=
=0A=
    var found =3D false;=0A=
    this.each(function(value) {=0A=
      if (value =3D=3D object) {=0A=
        found =3D true;=0A=
        throw $break;=0A=
      }=0A=
    });=0A=
    return found;=0A=
  },=0A=
=0A=
  inGroupsOf: function(number, fillWith) {=0A=
    fillWith =3D Object.isUndefined(fillWith) ? null : fillWith;=0A=
    return this.eachSlice(number, function(slice) {=0A=
      while(slice.length < number) slice.push(fillWith);=0A=
      return slice;=0A=
    });=0A=
  },=0A=
=0A=
  inject: function(memo, iterator, context) {=0A=
    this.each(function(value, index) {=0A=
      memo =3D iterator.call(context, memo, value, index);=0A=
    });=0A=
    return memo;=0A=
  },=0A=
=0A=
  invoke: function(method) {=0A=
    var args =3D $A(arguments).slice(1);=0A=
    return this.map(function(value) {=0A=
      return value[method].apply(value, args);=0A=
    });=0A=
  },=0A=
=0A=
  max: function(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      value =3D iterator.call(context, value, index);=0A=
      if (result =3D=3D null || value >=3D result)=0A=
        result =3D value;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  min: function(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      value =3D iterator.call(context, value, index);=0A=
      if (result =3D=3D null || value < result)=0A=
        result =3D value;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  partition: function(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var trues =3D [], falses =3D [];=0A=
    this.each(function(value, index) {=0A=
      (iterator.call(context, value, index) ?=0A=
        trues : falses).push(value);=0A=
    });=0A=
    return [trues, falses];=0A=
  },=0A=
=0A=
  pluck: function(property) {=0A=
    var results =3D [];=0A=
    this.each(function(value) {=0A=
      results.push(value[property]);=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  reject: function(iterator, context) {=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      if (!iterator.call(context, value, index))=0A=
        results.push(value);=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  sortBy: function(iterator, context) {=0A=
    return this.map(function(value, index) {=0A=
      return {=0A=
        value: value,=0A=
        criteria: iterator.call(context, value, index)=0A=
      };=0A=
    }).sort(function(left, right) {=0A=
      var a =3D left.criteria, b =3D right.criteria;=0A=
      return a < b ? -1 : a > b ? 1 : 0;=0A=
    }).pluck('value');=0A=
  },=0A=
=0A=
  toArray: function() {=0A=
    return this.map();=0A=
  },=0A=
=0A=
  zip: function() {=0A=
    var iterator =3D Prototype.K, args =3D $A(arguments);=0A=
    if (Object.isFunction(args.last()))=0A=
      iterator =3D args.pop();=0A=
=0A=
    var collections =3D [this].concat(args).map($A);=0A=
    return this.map(function(value, index) {=0A=
      return iterator(collections.pluck(index));=0A=
    });=0A=
  },=0A=
=0A=
  size: function() {=0A=
    return this.toArray().length;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return '#<Enumerable:' + this.toArray().inspect() + '>';=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Enumerable, {=0A=
  map:     Enumerable.collect,=0A=
  find:    Enumerable.detect,=0A=
  select:  Enumerable.findAll,=0A=
  filter:  Enumerable.findAll,=0A=
  member:  Enumerable.include,=0A=
  entries: Enumerable.toArray,=0A=
  every:   Enumerable.all,=0A=
  some:    Enumerable.any=0A=
});=0A=
function $A(iterable) {=0A=
  if (!iterable) return [];=0A=
  if (iterable.toArray) return iterable.toArray();=0A=
  var length =3D iterable.length || 0, results =3D new Array(length);=0A=
  while (length--) results[length] =3D iterable[length];=0A=
  return results;=0A=
}=0A=
=0A=
if (Prototype.Browser.WebKit) {=0A=
  $A =3D function(iterable) {=0A=
    if (!iterable) return [];=0A=
    // In Safari, only use the `toArray` method if it's not a NodeList.=0A=
    // A NodeList is a function, has an function `item` property, and a =
numeric=0A=
    // `length` property. Adapted from Google Doctype.=0A=
    if (!(typeof iterable =3D=3D=3D 'function' && typeof iterable.length =
=3D=3D=3D=0A=
        'number' && typeof iterable.item =3D=3D=3D 'function') && =
iterable.toArray)=0A=
      return iterable.toArray();=0A=
    var length =3D iterable.length || 0, results =3D new Array(length);=0A=
    while (length--) results[length] =3D iterable[length];=0A=
    return results;=0A=
  };=0A=
}=0A=
=0A=
Array.from =3D $A;=0A=
=0A=
Object.extend(Array.prototype, Enumerable);=0A=
=0A=
if (!Array.prototype._reverse) Array.prototype._reverse =3D =
Array.prototype.reverse;=0A=
=0A=
Object.extend(Array.prototype, {=0A=
  _each: function(iterator) {=0A=
    for (var i =3D 0, length =3D this.length; i < length; i++)=0A=
      iterator(this[i]);=0A=
  },=0A=
=0A=
  clear: function() {=0A=
    this.length =3D 0;=0A=
    return this;=0A=
  },=0A=
=0A=
  first: function() {=0A=
    return this[0];=0A=
  },=0A=
=0A=
  last: function() {=0A=
    return this[this.length - 1];=0A=
  },=0A=
=0A=
  compact: function() {=0A=
    return this.select(function(value) {=0A=
      return value !=3D null;=0A=
    });=0A=
  },=0A=
=0A=
  flatten: function() {=0A=
    return this.inject([], function(array, value) {=0A=
      return array.concat(Object.isArray(value) ?=0A=
        value.flatten() : [value]);=0A=
    });=0A=
  },=0A=
=0A=
  without: function() {=0A=
    var values =3D $A(arguments);=0A=
    return this.select(function(value) {=0A=
      return !values.include(value);=0A=
    });=0A=
  },=0A=
=0A=
  reverse: function(inline) {=0A=
    return (inline !=3D=3D false ? this : this.toArray())._reverse();=0A=
  },=0A=
=0A=
  reduce: function() {=0A=
    return this.length > 1 ? this : this[0];=0A=
  },=0A=
=0A=
  uniq: function(sorted) {=0A=
    return this.inject([], function(array, value, index) {=0A=
      if (0 =3D=3D index || (sorted ? array.last() !=3D value : =
!array.include(value)))=0A=
        array.push(value);=0A=
      return array;=0A=
    });=0A=
  },=0A=
=0A=
  intersect: function(array) {=0A=
    return this.uniq().findAll(function(item) {=0A=
      return array.detect(function(value) { return item =3D=3D=3D value =
});=0A=
    });=0A=
  },=0A=
=0A=
  clone: function() {=0A=
    return [].concat(this);=0A=
  },=0A=
=0A=
  size: function() {=0A=
    return this.length;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return '[' + this.map(Object.inspect).join(', ') + ']';=0A=
  },=0A=
=0A=
  toJSON: function() {=0A=
    var results =3D [];=0A=
    this.each(function(object) {=0A=
      var value =3D Object.toJSON(object);=0A=
      if (!Object.isUndefined(value)) results.push(value);=0A=
    });=0A=
    return '[' + results.join(', ') + ']';=0A=
  }=0A=
});=0A=
=0A=
// use native browser JS 1.6 implementation if available=0A=
if (Object.isFunction(Array.prototype.forEach))=0A=
  Array.prototype._each =3D Array.prototype.forEach;=0A=
=0A=
if (!Array.prototype.indexOf) Array.prototype.indexOf =3D function(item, =
i) {=0A=
  i || (i =3D 0);=0A=
  var length =3D this.length;=0A=
  if (i < 0) i =3D length + i;=0A=
  for (; i < length; i++)=0A=
    if (this[i] =3D=3D=3D item) return i;=0A=
  return -1;=0A=
};=0A=
=0A=
if (!Array.prototype.lastIndexOf) Array.prototype.lastIndexOf =3D =
function(item, i) {=0A=
  i =3D isNaN(i) ? this.length : (i < 0 ? this.length + i : i) + 1;=0A=
  var n =3D this.slice(0, i).reverse().indexOf(item);=0A=
  return (n < 0) ? n : i - n - 1;=0A=
};=0A=
=0A=
Array.prototype.toArray =3D Array.prototype.clone;=0A=
=0A=
function $w(string) {=0A=
  if (!Object.isString(string)) return [];=0A=
  string =3D string.strip();=0A=
  return string ? string.split(/\s+/) : [];=0A=
}=0A=
=0A=
if (Prototype.Browser.Opera){=0A=
  Array.prototype.concat =3D function() {=0A=
    var array =3D [];=0A=
    for (var i =3D 0, length =3D this.length; i < length; i++) =
array.push(this[i]);=0A=
    for (var i =3D 0, length =3D arguments.length; i < length; i++) {=0A=
      if (Object.isArray(arguments[i])) {=0A=
        for (var j =3D 0, arrayLength =3D arguments[i].length; j < =
arrayLength; j++)=0A=
          array.push(arguments[i][j]);=0A=
      } else {=0A=
        array.push(arguments[i]);=0A=
      }=0A=
    }=0A=
    return array;=0A=
  };=0A=
}=0A=
Object.extend(Number.prototype, {=0A=
  toColorPart: function() {=0A=
    return this.toPaddedString(2, 16);=0A=
  },=0A=
=0A=
  succ: function() {=0A=
    return this + 1;=0A=
  },=0A=
=0A=
  times: function(iterator, context) {=0A=
    $R(0, this, true).each(iterator, context);=0A=
    return this;=0A=
  },=0A=
=0A=
  toPaddedString: function(length, radix) {=0A=
    var string =3D this.toString(radix || 10);=0A=
    return '0'.times(length - string.length) + string;=0A=
  },=0A=
=0A=
  toJSON: function() {=0A=
    return isFinite(this) ? this.toString() : 'null';=0A=
  }=0A=
});=0A=
=0A=
$w('abs round ceil floor').each(function(method){=0A=
  Number.prototype[method] =3D Math[method].methodize();=0A=
});=0A=
function $H(object) {=0A=
  return new Hash(object);=0A=
};=0A=
=0A=
var Hash =3D Class.create(Enumerable, (function() {=0A=
=0A=
  function toQueryPair(key, value) {=0A=
    if (Object.isUndefined(value)) return key;=0A=
    return key + '=3D' + encodeURIComponent(String.interpret(value));=0A=
  }=0A=
=0A=
  return {=0A=
    initialize: function(object) {=0A=
      this._object =3D Object.isHash(object) ? object.toObject() : =
Object.clone(object);=0A=
    },=0A=
=0A=
    _each: function(iterator) {=0A=
      for (var key in this._object) {=0A=
        var value =3D this._object[key], pair =3D [key, value];=0A=
        pair.key =3D key;=0A=
        pair.value =3D value;=0A=
        iterator(pair);=0A=
      }=0A=
    },=0A=
=0A=
    set: function(key, value) {=0A=
      return this._object[key] =3D value;=0A=
    },=0A=
=0A=
    get: function(key) {=0A=
      // simulating poorly supported hasOwnProperty=0A=
      if (this._object[key] !=3D=3D Object.prototype[key])=0A=
        return this._object[key];=0A=
    },=0A=
=0A=
    unset: function(key) {=0A=
      var value =3D this._object[key];=0A=
      delete this._object[key];=0A=
      return value;=0A=
    },=0A=
=0A=
    toObject: function() {=0A=
      return Object.clone(this._object);=0A=
    },=0A=
=0A=
    keys: function() {=0A=
      return this.pluck('key');=0A=
    },=0A=
=0A=
    values: function() {=0A=
      return this.pluck('value');=0A=
    },=0A=
=0A=
    index: function(value) {=0A=
      var match =3D this.detect(function(pair) {=0A=
        return pair.value =3D=3D=3D value;=0A=
      });=0A=
      return match && match.key;=0A=
    },=0A=
=0A=
    merge: function(object) {=0A=
      return this.clone().update(object);=0A=
    },=0A=
=0A=
    update: function(object) {=0A=
      return new Hash(object).inject(this, function(result, pair) {=0A=
        result.set(pair.key, pair.value);=0A=
        return result;=0A=
      });=0A=
    },=0A=
=0A=
    toQueryString: function() {=0A=
      return this.inject([], function(results, pair) {=0A=
        var key =3D encodeURIComponent(pair.key), values =3D pair.value;=0A=
=0A=
        if (values && typeof values =3D=3D 'object') {=0A=
          if (Object.isArray(values))=0A=
            return results.concat(values.map(toQueryPair.curry(key)));=0A=
        } else results.push(toQueryPair(key, values));=0A=
        return results;=0A=
      }).join('&');=0A=
    },=0A=
=0A=
    inspect: function() {=0A=
      return '#<Hash:{' + this.map(function(pair) {=0A=
        return pair.map(Object.inspect).join(': ');=0A=
      }).join(', ') + '}>';=0A=
    },=0A=
=0A=
    toJSON: function() {=0A=
      return Object.toJSON(this.toObject());=0A=
    },=0A=
=0A=
    clone: function() {=0A=
      return new Hash(this);=0A=
    }=0A=
  }=0A=
})());=0A=
=0A=
Hash.prototype.toTemplateReplacements =3D Hash.prototype.toObject;=0A=
Hash.from =3D $H;=0A=
var ObjectRange =3D Class.create(Enumerable, {=0A=
  initialize: function(start, end, exclusive) {=0A=
    this.start =3D start;=0A=
    this.end =3D end;=0A=
    this.exclusive =3D exclusive;=0A=
  },=0A=
=0A=
  _each: function(iterator) {=0A=
    var value =3D this.start;=0A=
    while (this.include(value)) {=0A=
      iterator(value);=0A=
      value =3D value.succ();=0A=
    }=0A=
  },=0A=
=0A=
  include: function(value) {=0A=
    if (value < this.start)=0A=
      return false;=0A=
    if (this.exclusive)=0A=
      return value < this.end;=0A=
    return value <=3D this.end;=0A=
  }=0A=
});=0A=
=0A=
var $R =3D function(start, end, exclusive) {=0A=
  return new ObjectRange(start, end, exclusive);=0A=
};=0A=
=0A=
var Ajax =3D {=0A=
  getTransport: function() {=0A=
    return Try.these(=0A=
      function() {return new XMLHttpRequest()},=0A=
      function() {return new ActiveXObject('Msxml2.XMLHTTP')},=0A=
      function() {return new ActiveXObject('Microsoft.XMLHTTP')}=0A=
    ) || false;=0A=
  },=0A=
=0A=
  activeRequestCount: 0=0A=
};=0A=
=0A=
Ajax.Responders =3D {=0A=
  responders: [],=0A=
=0A=
  _each: function(iterator) {=0A=
    this.responders._each(iterator);=0A=
  },=0A=
=0A=
  register: function(responder) {=0A=
    if (!this.include(responder))=0A=
      this.responders.push(responder);=0A=
  },=0A=
=0A=
  unregister: function(responder) {=0A=
    this.responders =3D this.responders.without(responder);=0A=
  },=0A=
=0A=
  dispatch: function(callback, request, transport, json) {=0A=
    this.each(function(responder) {=0A=
      if (Object.isFunction(responder[callback])) {=0A=
        try {=0A=
          responder[callback].apply(responder, [request, transport, =
json]);=0A=
        } catch (e) { }=0A=
      }=0A=
    });=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Ajax.Responders, Enumerable);=0A=
=0A=
Ajax.Responders.register({=0A=
  onCreate:   function() { Ajax.activeRequestCount++ },=0A=
  onComplete: function() { Ajax.activeRequestCount-- }=0A=
});=0A=
=0A=
Ajax.Base =3D Class.create({=0A=
  initialize: function(options) {=0A=
    this.options =3D {=0A=
      method:       'post',=0A=
      asynchronous: true,=0A=
      contentType:  'application/x-www-form-urlencoded',=0A=
      encoding:     'UTF-8',=0A=
      parameters:   '',=0A=
      evalJSON:     true,=0A=
      evalJS:       true=0A=
    };=0A=
    Object.extend(this.options, options || { });=0A=
=0A=
    this.options.method =3D this.options.method.toLowerCase();=0A=
=0A=
    if (Object.isString(this.options.parameters))=0A=
      this.options.parameters =3D =
this.options.parameters.toQueryParams();=0A=
    else if (Object.isHash(this.options.parameters))=0A=
      this.options.parameters =3D this.options.parameters.toObject();=0A=
  }=0A=
});=0A=
=0A=
Ajax.Request =3D Class.create(Ajax.Base, {=0A=
  _complete: false,=0A=
=0A=
  initialize: function($super, url, options) {=0A=
    $super(options);=0A=
    this.transport =3D Ajax.getTransport();=0A=
    this.request(url);=0A=
  },=0A=
=0A=
  request: function(url) {=0A=
    this.url =3D url;=0A=
    this.method =3D this.options.method;=0A=
    var params =3D Object.clone(this.options.parameters);=0A=
=0A=
    if (!['get', 'post'].include(this.method)) {=0A=
      // simulate other verbs over post=0A=
      params['_method'] =3D this.method;=0A=
      this.method =3D 'post';=0A=
    }=0A=
=0A=
    this.parameters =3D params;=0A=
=0A=
    if (params =3D Object.toQueryString(params)) {=0A=
      // when GET, append parameters to URL=0A=
      if (this.method =3D=3D 'get')=0A=
        this.url +=3D (this.url.include('?') ? '&' : '?') + params;=0A=
      else if (/Konqueror|Safari|KHTML/.test(navigator.userAgent))=0A=
        params +=3D '&_=3D';=0A=
    }=0A=
=0A=
    try {=0A=
      var response =3D new Ajax.Response(this);=0A=
      if (this.options.onCreate) this.options.onCreate(response);=0A=
      Ajax.Responders.dispatch('onCreate', this, response);=0A=
=0A=
      this.transport.open(this.method.toUpperCase(), this.url,=0A=
        this.options.asynchronous);=0A=
=0A=
      if (this.options.asynchronous) =
this.respondToReadyState.bind(this).defer(1);=0A=
=0A=
      this.transport.onreadystatechange =3D =
this.onStateChange.bind(this);=0A=
      this.setRequestHeaders();=0A=
=0A=
      this.body =3D this.method =3D=3D 'post' ? (this.options.postBody =
|| params) : null;=0A=
      this.transport.send(this.body);=0A=
=0A=
      /* Force Firefox to handle ready state 4 for synchronous requests =
*/=0A=
      if (!this.options.asynchronous && this.transport.overrideMimeType)=0A=
        this.onStateChange();=0A=
=0A=
    }=0A=
    catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  onStateChange: function() {=0A=
    var readyState =3D this.transport.readyState;=0A=
    if (readyState > 1 && !((readyState =3D=3D 4) && this._complete))=0A=
      this.respondToReadyState(this.transport.readyState);=0A=
  },=0A=
=0A=
  setRequestHeaders: function() {=0A=
    var headers =3D {=0A=
      'X-Requested-With': 'XMLHttpRequest',=0A=
      'X-Prototype-Version': Prototype.Version,=0A=
      'Accept': 'text/javascript, text/html, application/xml, text/xml, =
*/*'=0A=
    };=0A=
=0A=
    if (this.method =3D=3D 'post') {=0A=
      headers['Content-type'] =3D this.options.contentType +=0A=
        (this.options.encoding ? '; charset=3D' + this.options.encoding =
: '');=0A=
=0A=
      /* Force "Connection: close" for older Mozilla browsers to work=0A=
       * around a bug where XMLHttpRequest sends an incorrect=0A=
       * Content-length header. See Mozilla Bugzilla #246651.=0A=
       */=0A=
      if (this.transport.overrideMimeType &&=0A=
          (navigator.userAgent.match(/Gecko\/(\d{4})/) || [0,2005])[1] < =
2005)=0A=
            headers['Connection'] =3D 'close';=0A=
    }=0A=
=0A=
    // user-defined headers=0A=
    if (typeof this.options.requestHeaders =3D=3D 'object') {=0A=
      var extras =3D this.options.requestHeaders;=0A=
=0A=
      if (Object.isFunction(extras.push))=0A=
        for (var i =3D 0, length =3D extras.length; i < length; i +=3D 2)=0A=
          headers[extras[i]] =3D extras[i+1];=0A=
      else=0A=
        $H(extras).each(function(pair) { headers[pair.key] =3D =
pair.value });=0A=
    }=0A=
=0A=
    for (var name in headers)=0A=
      this.transport.setRequestHeader(name, headers[name]);=0A=
  },=0A=
=0A=
  success: function() {=0A=
    var status =3D this.getStatus();=0A=
    return !status || (status >=3D 200 && status < 300);=0A=
  },=0A=
=0A=
  getStatus: function() {=0A=
    try {=0A=
      return this.transport.status || 0;=0A=
    } catch (e) { return 0 }=0A=
  },=0A=
=0A=
  respondToReadyState: function(readyState) {=0A=
    var state =3D Ajax.Request.Events[readyState], response =3D new =
Ajax.Response(this);=0A=
=0A=
    if (state =3D=3D 'Complete') {=0A=
      try {=0A=
        this._complete =3D true;=0A=
        (this.options['on' + response.status]=0A=
         || this.options['on' + (this.success() ? 'Success' : 'Failure')]=0A=
         || Prototype.emptyFunction)(response, response.headerJSON);=0A=
      } catch (e) {=0A=
        this.dispatchException(e);=0A=
      }=0A=
=0A=
      var contentType =3D response.getHeader('Content-type');=0A=
      if (this.options.evalJS =3D=3D 'force'=0A=
          || (this.options.evalJS && this.isSameOrigin() && contentType=0A=
          && =
contentType.match(/^\s*(text|application)\/(x-)?(java|ecma)script(;.*)?\s=
*$/i)))=0A=
        this.evalResponse();=0A=
    }=0A=
=0A=
    try {=0A=
      (this.options['on' + state] || Prototype.emptyFunction)(response, =
response.headerJSON);=0A=
      Ajax.Responders.dispatch('on' + state, this, response, =
response.headerJSON);=0A=
    } catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
=0A=
    if (state =3D=3D 'Complete') {=0A=
      // avoid memory leak in MSIE: clean up=0A=
      this.transport.onreadystatechange =3D Prototype.emptyFunction;=0A=
    }=0A=
  },=0A=
=0A=
  isSameOrigin: function() {=0A=
    var m =3D this.url.match(/^\s*https?:\/\/[^\/]*/);=0A=
    return !m || (m[0] =3D=3D =
'#{protocol}//#{domain}#{port}'.interpolate({=0A=
      protocol: location.protocol,=0A=
      domain: document.domain,=0A=
      port: location.port ? ':' + location.port : ''=0A=
    }));=0A=
  },=0A=
=0A=
  getHeader: function(name) {=0A=
    try {=0A=
      return this.transport.getResponseHeader(name) || null;=0A=
    } catch (e) { return null }=0A=
  },=0A=
=0A=
  evalResponse: function() {=0A=
    try {=0A=
      return eval((this.transport.responseText || '').unfilterJSON());=0A=
    } catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  dispatchException: function(exception) {=0A=
    (this.options.onException || Prototype.emptyFunction)(this, =
exception);=0A=
    Ajax.Responders.dispatch('onException', this, exception);=0A=
  }=0A=
});=0A=
=0A=
Ajax.Request.Events =3D=0A=
  ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];=0A=
=0A=
Ajax.Response =3D Class.create({=0A=
  initialize: function(request){=0A=
    this.request =3D request;=0A=
    var transport  =3D this.transport  =3D request.transport,=0A=
        readyState =3D this.readyState =3D transport.readyState;=0A=
=0A=
    if((readyState > 2 && !Prototype.Browser.IE) || readyState =3D=3D 4) =
{=0A=
      this.status       =3D this.getStatus();=0A=
      this.statusText   =3D this.getStatusText();=0A=
      this.responseText =3D String.interpret(transport.responseText);=0A=
      this.headerJSON   =3D this._getHeaderJSON();=0A=
    }=0A=
=0A=
    if(readyState =3D=3D 4) {=0A=
      var xml =3D transport.responseXML;=0A=
      this.responseXML  =3D Object.isUndefined(xml) ? null : xml;=0A=
      this.responseJSON =3D this._getResponseJSON();=0A=
    }=0A=
  },=0A=
=0A=
  status:      0,=0A=
  statusText: '',=0A=
=0A=
  getStatus: Ajax.Request.prototype.getStatus,=0A=
=0A=
  getStatusText: function() {=0A=
    try {=0A=
      return this.transport.statusText || '';=0A=
    } catch (e) { return '' }=0A=
  },=0A=
=0A=
  getHeader: Ajax.Request.prototype.getHeader,=0A=
=0A=
  getAllHeaders: function() {=0A=
    try {=0A=
      return this.getAllResponseHeaders();=0A=
    } catch (e) { return null }=0A=
  },=0A=
=0A=
  getResponseHeader: function(name) {=0A=
    return this.transport.getResponseHeader(name);=0A=
  },=0A=
=0A=
  getAllResponseHeaders: function() {=0A=
    return this.transport.getAllResponseHeaders();=0A=
  },=0A=
=0A=
  _getHeaderJSON: function() {=0A=
    var json =3D this.getHeader('X-JSON');=0A=
    if (!json) return null;=0A=
    json =3D decodeURIComponent(escape(json));=0A=
    try {=0A=
      return json.evalJSON(this.request.options.sanitizeJSON ||=0A=
        !this.request.isSameOrigin());=0A=
    } catch (e) {=0A=
      this.request.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  _getResponseJSON: function() {=0A=
    var options =3D this.request.options;=0A=
    if (!options.evalJSON || (options.evalJSON !=3D 'force' &&=0A=
      !(this.getHeader('Content-type') || =
'').include('application/json')) ||=0A=
        this.responseText.blank())=0A=
          return null;=0A=
    try {=0A=
      return this.responseText.evalJSON(options.sanitizeJSON ||=0A=
        !this.request.isSameOrigin());=0A=
    } catch (e) {=0A=
      this.request.dispatchException(e);=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Ajax.Updater =3D Class.create(Ajax.Request, {=0A=
  initialize: function($super, container, url, options) {=0A=
    this.container =3D {=0A=
      success: (container.success || container),=0A=
      failure: (container.failure || (container.success ? null : =
container))=0A=
    };=0A=
=0A=
    options =3D Object.clone(options);=0A=
    var onComplete =3D options.onComplete;=0A=
    options.onComplete =3D (function(response, json) {=0A=
      this.updateContent(response.responseText);=0A=
      if (Object.isFunction(onComplete)) onComplete(response, json);=0A=
    }).bind(this);=0A=
=0A=
    $super(url, options);=0A=
  },=0A=
=0A=
  updateContent: function(responseText) {=0A=
    var receiver =3D this.container[this.success() ? 'success' : =
'failure'],=0A=
        options =3D this.options;=0A=
=0A=
    if (!options.evalScripts) responseText =3D =
responseText.stripScripts();=0A=
=0A=
    if (receiver =3D $(receiver)) {=0A=
      if (options.insertion) {=0A=
        if (Object.isString(options.insertion)) {=0A=
          var insertion =3D { }; insertion[options.insertion] =3D =
responseText;=0A=
          receiver.insert(insertion);=0A=
        }=0A=
        else options.insertion(receiver, responseText);=0A=
      }=0A=
      else receiver.update(responseText);=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Ajax.PeriodicalUpdater =3D Class.create(Ajax.Base, {=0A=
  initialize: function($super, container, url, options) {=0A=
    $super(options);=0A=
    this.onComplete =3D this.options.onComplete;=0A=
=0A=
    this.frequency =3D (this.options.frequency || 2);=0A=
    this.decay =3D (this.options.decay || 1);=0A=
=0A=
    this.updater =3D { };=0A=
    this.container =3D container;=0A=
    this.url =3D url;=0A=
=0A=
    this.start();=0A=
  },=0A=
=0A=
  start: function() {=0A=
    this.options.onComplete =3D this.updateComplete.bind(this);=0A=
    this.onTimerEvent();=0A=
  },=0A=
=0A=
  stop: function() {=0A=
    this.updater.options.onComplete =3D undefined;=0A=
    clearTimeout(this.timer);=0A=
    (this.onComplete || Prototype.emptyFunction).apply(this, arguments);=0A=
  },=0A=
=0A=
  updateComplete: function(response) {=0A=
    if (this.options.decay) {=0A=
      this.decay =3D (response.responseText =3D=3D this.lastText ?=0A=
        this.decay * this.options.decay : 1);=0A=
=0A=
      this.lastText =3D response.responseText;=0A=
    }=0A=
    this.timer =3D this.onTimerEvent.bind(this).delay(this.decay * =
this.frequency);=0A=
  },=0A=
=0A=
  onTimerEvent: function() {=0A=
    this.updater =3D new Ajax.Updater(this.container, this.url, =
this.options);=0A=
  }=0A=
});=0A=
function $(element) {=0A=
  if (arguments.length > 1) {=0A=
    for (var i =3D 0, elements =3D [], length =3D arguments.length; i < =
length; i++)=0A=
      elements.push($(arguments[i]));=0A=
    return elements;=0A=
  }=0A=
  if (Object.isString(element))=0A=
    element =3D document.getElementById(element);=0A=
  return Element.extend(element);=0A=
}=0A=
=0A=
if (Prototype.BrowserFeatures.XPath) {=0A=
  document._getElementsByXPath =3D function(expression, parentElement) {=0A=
    var results =3D [];=0A=
    var query =3D document.evaluate(expression, $(parentElement) || =
document,=0A=
      null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);=0A=
    for (var i =3D 0, length =3D query.snapshotLength; i < length; i++)=0A=
      results.push(Element.extend(query.snapshotItem(i)));=0A=
    return results;=0A=
  };=0A=
}=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
if (!window.Node) var Node =3D { };=0A=
=0A=
if (!Node.ELEMENT_NODE) {=0A=
  // DOM level 2 ECMAScript Language Binding=0A=
  Object.extend(Node, {=0A=
    ELEMENT_NODE: 1,=0A=
    ATTRIBUTE_NODE: 2,=0A=
    TEXT_NODE: 3,=0A=
    CDATA_SECTION_NODE: 4,=0A=
    ENTITY_REFERENCE_NODE: 5,=0A=
    ENTITY_NODE: 6,=0A=
    PROCESSING_INSTRUCTION_NODE: 7,=0A=
    COMMENT_NODE: 8,=0A=
    DOCUMENT_NODE: 9,=0A=
    DOCUMENT_TYPE_NODE: 10,=0A=
    DOCUMENT_FRAGMENT_NODE: 11,=0A=
    NOTATION_NODE: 12=0A=
  });=0A=
}=0A=
=0A=
(function() {=0A=
  var element =3D this.Element;=0A=
  this.Element =3D function(tagName, attributes) {=0A=
    attributes =3D attributes || { };=0A=
    tagName =3D tagName.toLowerCase();=0A=
    var cache =3D Element.cache;=0A=
    if (Prototype.Browser.IE && attributes.name) {=0A=
      tagName =3D '<' + tagName + ' name=3D"' + attributes.name + '">';=0A=
      delete attributes.name;=0A=
      return Element.writeAttribute(document.createElement(tagName), =
attributes);=0A=
    }=0A=
    if (!cache[tagName]) cache[tagName] =3D =
Element.extend(document.createElement(tagName));=0A=
    return Element.writeAttribute(cache[tagName].cloneNode(false), =
attributes);=0A=
  };=0A=
  Object.extend(this.Element, element || { });=0A=
  if (element) this.Element.prototype =3D element.prototype;=0A=
}).call(window);=0A=
=0A=
Element.cache =3D { };=0A=
=0A=
Element.Methods =3D {=0A=
  visible: function(element) {=0A=
    return $(element).style.display !=3D 'none';=0A=
  },=0A=
=0A=
  toggle: function(element) {=0A=
    element =3D $(element);=0A=
    Element[Element.visible(element) ? 'hide' : 'show'](element);=0A=
    return element;=0A=
  },=0A=
=0A=
  hide: function(element) {=0A=
    element =3D $(element);=0A=
    element.style.display =3D 'none';=0A=
    return element;=0A=
  },=0A=
=0A=
  show: function(element) {=0A=
    element =3D $(element);=0A=
    element.style.display =3D '';=0A=
    return element;=0A=
  },=0A=
=0A=
  remove: function(element) {=0A=
    element =3D $(element);=0A=
    element.parentNode.removeChild(element);=0A=
    return element;=0A=
  },=0A=
=0A=
  update: function(element, content) {=0A=
    element =3D $(element);=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    if (Object.isElement(content)) return =
element.update().insert(content);=0A=
    content =3D Object.toHTML(content);=0A=
    element.innerHTML =3D content.stripScripts();=0A=
    content.evalScripts.bind(content).defer();=0A=
    return element;=0A=
  },=0A=
=0A=
  replace: function(element, content) {=0A=
    element =3D $(element);=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    else if (!Object.isElement(content)) {=0A=
      content =3D Object.toHTML(content);=0A=
      var range =3D element.ownerDocument.createRange();=0A=
      range.selectNode(element);=0A=
      content.evalScripts.bind(content).defer();=0A=
      content =3D range.createContextualFragment(content.stripScripts());=0A=
    }=0A=
    element.parentNode.replaceChild(content, element);=0A=
    return element;=0A=
  },=0A=
=0A=
  insert: function(element, insertions) {=0A=
    element =3D $(element);=0A=
=0A=
    if (Object.isString(insertions) || Object.isNumber(insertions) ||=0A=
        Object.isElement(insertions) || (insertions && =
(insertions.toElement || insertions.toHTML)))=0A=
          insertions =3D {bottom:insertions};=0A=
=0A=
    var content, insert, tagName, childNodes;=0A=
=0A=
    for (var position in insertions) {=0A=
      content  =3D insertions[position];=0A=
      position =3D position.toLowerCase();=0A=
      insert =3D Element._insertionTranslations[position];=0A=
=0A=
      if (content && content.toElement) content =3D content.toElement();=0A=
      if (Object.isElement(content)) {=0A=
        insert(element, content);=0A=
        continue;=0A=
      }=0A=
=0A=
      content =3D Object.toHTML(content);=0A=
=0A=
      tagName =3D ((position =3D=3D 'before' || position =3D=3D 'after')=0A=
        ? element.parentNode : element).tagName.toUpperCase();=0A=
=0A=
      childNodes =3D Element._getContentFromAnonymousElement(tagName, =
content.stripScripts());=0A=
=0A=
      if (position =3D=3D 'top' || position =3D=3D 'after') =
childNodes.reverse();=0A=
      childNodes.each(insert.curry(element));=0A=
=0A=
      content.evalScripts.bind(content).defer();=0A=
    }=0A=
=0A=
    return element;=0A=
  },=0A=
=0A=
  wrap: function(element, wrapper, attributes) {=0A=
    element =3D $(element);=0A=
    if (Object.isElement(wrapper))=0A=
      $(wrapper).writeAttribute(attributes || { });=0A=
    else if (Object.isString(wrapper)) wrapper =3D new Element(wrapper, =
attributes);=0A=
    else wrapper =3D new Element('div', wrapper);=0A=
    if (element.parentNode)=0A=
      element.parentNode.replaceChild(wrapper, element);=0A=
    wrapper.appendChild(element);=0A=
    return wrapper;=0A=
  },=0A=
=0A=
  inspect: function(element) {=0A=
    element =3D $(element);=0A=
    var result =3D '<' + element.tagName.toLowerCase();=0A=
    $H({'id': 'id', 'className': 'class'}).each(function(pair) {=0A=
      var property =3D pair.first(), attribute =3D pair.last();=0A=
      var value =3D (element[property] || '').toString();=0A=
      if (value) result +=3D ' ' + attribute + '=3D' + =
value.inspect(true);=0A=
    });=0A=
    return result + '>';=0A=
  },=0A=
=0A=
  recursivelyCollect: function(element, property) {=0A=
    element =3D $(element);=0A=
    var elements =3D [];=0A=
    while (element =3D element[property])=0A=
      if (element.nodeType =3D=3D 1)=0A=
        elements.push(Element.extend(element));=0A=
    return elements;=0A=
  },=0A=
=0A=
  ancestors: function(element) {=0A=
    return $(element).recursivelyCollect('parentNode');=0A=
  },=0A=
=0A=
  descendants: function(element) {=0A=
    return $(element).select("*");=0A=
  },=0A=
=0A=
  firstDescendant: function(element) {=0A=
    element =3D $(element).firstChild;=0A=
    while (element && element.nodeType !=3D 1) element =3D =
element.nextSibling;=0A=
    return $(element);=0A=
  },=0A=
=0A=
  immediateDescendants: function(element) {=0A=
    if (!(element =3D $(element).firstChild)) return [];=0A=
    while (element && element.nodeType !=3D 1) element =3D =
element.nextSibling;=0A=
    if (element) return [element].concat($(element).nextSiblings());=0A=
    return [];=0A=
  },=0A=
=0A=
  previousSiblings: function(element) {=0A=
    return $(element).recursivelyCollect('previousSibling');=0A=
  },=0A=
=0A=
  nextSiblings: function(element) {=0A=
    return $(element).recursivelyCollect('nextSibling');=0A=
  },=0A=
=0A=
  siblings: function(element) {=0A=
    element =3D $(element);=0A=
    return =
element.previousSiblings().reverse().concat(element.nextSiblings());=0A=
  },=0A=
=0A=
  match: function(element, selector) {=0A=
    if (Object.isString(selector))=0A=
      selector =3D new Selector(selector);=0A=
    return selector.match($(element));=0A=
  },=0A=
=0A=
  up: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return $(element.parentNode);=0A=
    var ancestors =3D element.ancestors();=0A=
    return Object.isNumber(expression) ? ancestors[expression] :=0A=
      Selector.findElement(ancestors, expression, index);=0A=
  },=0A=
=0A=
  down: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return element.firstDescendant();=0A=
    return Object.isNumber(expression) ? =
element.descendants()[expression] :=0A=
      Element.select(element, expression)[index || 0];=0A=
  },=0A=
=0A=
  previous: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return =
$(Selector.handlers.previousElementSibling(element));=0A=
    var previousSiblings =3D element.previousSiblings();=0A=
    return Object.isNumber(expression) ? previousSiblings[expression] :=0A=
      Selector.findElement(previousSiblings, expression, index);=0A=
  },=0A=
=0A=
  next: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return =
$(Selector.handlers.nextElementSibling(element));=0A=
    var nextSiblings =3D element.nextSiblings();=0A=
    return Object.isNumber(expression) ? nextSiblings[expression] :=0A=
      Selector.findElement(nextSiblings, expression, index);=0A=
  },=0A=
=0A=
  select: function() {=0A=
    var args =3D $A(arguments), element =3D $(args.shift());=0A=
    return Selector.findChildElements(element, args);=0A=
  },=0A=
=0A=
  adjacent: function() {=0A=
    var args =3D $A(arguments), element =3D $(args.shift());=0A=
    return Selector.findChildElements(element.parentNode, =
args).without(element);=0A=
  },=0A=
=0A=
  identify: function(element) {=0A=
    element =3D $(element);=0A=
    var id =3D element.readAttribute('id'), self =3D arguments.callee;=0A=
    if (id) return id;=0A=
    do { id =3D 'anonymous_element_' + self.counter++ } while ($(id));=0A=
    element.writeAttribute('id', id);=0A=
    return id;=0A=
  },=0A=
=0A=
  readAttribute: function(element, name) {=0A=
    element =3D $(element);=0A=
    if (Prototype.Browser.IE) {=0A=
      var t =3D Element._attributeTranslations.read;=0A=
      if (t.values[name]) return t.values[name](element, name);=0A=
      if (t.names[name]) name =3D t.names[name];=0A=
      if (name.include(':')) {=0A=
        return (!element.attributes || !element.attributes[name]) ? null =
:=0A=
         element.attributes[name].value;=0A=
      }=0A=
    }=0A=
    return element.getAttribute(name);=0A=
  },=0A=
=0A=
  writeAttribute: function(element, name, value) {=0A=
    element =3D $(element);=0A=
    var attributes =3D { }, t =3D Element._attributeTranslations.write;=0A=
=0A=
    if (typeof name =3D=3D 'object') attributes =3D name;=0A=
    else attributes[name] =3D Object.isUndefined(value) ? true : value;=0A=
=0A=
    for (var attr in attributes) {=0A=
      name =3D t.names[attr] || attr;=0A=
      value =3D attributes[attr];=0A=
      if (t.values[attr]) name =3D t.values[attr](element, value);=0A=
      if (value =3D=3D=3D false || value =3D=3D=3D null)=0A=
        element.removeAttribute(name);=0A=
      else if (value =3D=3D=3D true)=0A=
        element.setAttribute(name, name);=0A=
      else element.setAttribute(name, value);=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  getHeight: function(element) {=0A=
    return $(element).getDimensions().height;=0A=
  },=0A=
=0A=
  getWidth: function(element) {=0A=
    return $(element).getDimensions().width;=0A=
  },=0A=
=0A=
  classNames: function(element) {=0A=
    return new Element.ClassNames(element);=0A=
  },=0A=
=0A=
  hasClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    var elementClassName =3D element.className;=0A=
    return (elementClassName.length > 0 && (elementClassName =3D=3D =
className ||=0A=
      new RegExp("(^|\\s)" + className + =
"(\\s|$)").test(elementClassName)));=0A=
  },=0A=
=0A=
  addClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    if (!element.hasClassName(className))=0A=
      element.className +=3D (element.className ? ' ' : '') + className;=0A=
    return element;=0A=
  },=0A=
=0A=
  removeClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    element.className =3D element.className.replace(=0A=
      new RegExp("(^|\\s+)" + className + "(\\s+|$)"), ' ').strip();=0A=
    return element;=0A=
  },=0A=
=0A=
  toggleClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    return element[element.hasClassName(className) ?=0A=
      'removeClassName' : 'addClassName'](className);=0A=
  },=0A=
=0A=
  // removes whitespace-only text node children=0A=
  cleanWhitespace: function(element) {=0A=
    element =3D $(element);=0A=
    var node =3D element.firstChild;=0A=
    while (node) {=0A=
      var nextNode =3D node.nextSibling;=0A=
      if (node.nodeType =3D=3D 3 && !/\S/.test(node.nodeValue))=0A=
        element.removeChild(node);=0A=
      node =3D nextNode;=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  empty: function(element) {=0A=
    return $(element).innerHTML.blank();=0A=
  },=0A=
=0A=
  descendantOf: function(element, ancestor) {=0A=
    element =3D $(element), ancestor =3D $(ancestor);=0A=
=0A=
    if (element.compareDocumentPosition)=0A=
      return (element.compareDocumentPosition(ancestor) & 8) =3D=3D=3D 8;=0A=
=0A=
    if (ancestor.contains)=0A=
      return ancestor.contains(element) && ancestor !=3D=3D element;=0A=
=0A=
    while (element =3D element.parentNode)=0A=
      if (element =3D=3D ancestor) return true;=0A=
=0A=
    return false;=0A=
  },=0A=
=0A=
  scrollTo: function(element) {=0A=
    element =3D $(element);=0A=
    var pos =3D element.cumulativeOffset();=0A=
    window.scrollTo(pos[0], pos[1]);=0A=
    return element;=0A=
  },=0A=
=0A=
  getStyle: function(element, style) {=0A=
    element =3D $(element);=0A=
    style =3D style =3D=3D 'float' ? 'cssFloat' : style.camelize();=0A=
    var value =3D element.style[style];=0A=
    if (!value || value =3D=3D 'auto') {=0A=
      var css =3D document.defaultView.getComputedStyle(element, null);=0A=
      value =3D css ? css[style] : null;=0A=
    }=0A=
    if (style =3D=3D 'opacity') return value ? parseFloat(value) : 1.0;=0A=
    return value =3D=3D 'auto' ? null : value;=0A=
  },=0A=
=0A=
  getOpacity: function(element) {=0A=
    return $(element).getStyle('opacity');=0A=
  },=0A=
=0A=
  setStyle: function(element, styles) {=0A=
    element =3D $(element);=0A=
    var elementStyle =3D element.style, match;=0A=
    if (Object.isString(styles)) {=0A=
      element.style.cssText +=3D ';' + styles;=0A=
      return styles.include('opacity') ?=0A=
        element.setOpacity(styles.match(/opacity:\s*(\d?\.?\d*)/)[1]) : =
element;=0A=
    }=0A=
    for (var property in styles)=0A=
      if (property =3D=3D 'opacity') =
element.setOpacity(styles[property]);=0A=
      else=0A=
        elementStyle[(property =3D=3D 'float' || property =3D=3D =
'cssFloat') ?=0A=
          (Object.isUndefined(elementStyle.styleFloat) ? 'cssFloat' : =
'styleFloat') :=0A=
            property] =3D styles[property];=0A=
=0A=
    return element;=0A=
  },=0A=
=0A=
  setOpacity: function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1 || value =3D=3D=3D '') ? =
'' :=0A=
      (value < 0.00001) ? 0 : value;=0A=
    return element;=0A=
  },=0A=
=0A=
  getDimensions: function(element) {=0A=
    element =3D $(element);=0A=
    var display =3D element.getStyle('display');=0A=
    if (display !=3D 'none' && display !=3D null) // Safari bug=0A=
      return {width: element.offsetWidth, height: element.offsetHeight};=0A=
=0A=
    // All *Width and *Height properties give 0 on elements with display =
none,=0A=
    // so enable the element temporarily=0A=
    var els =3D element.style;=0A=
    var originalVisibility =3D els.visibility;=0A=
    var originalPosition =3D els.position;=0A=
    var originalDisplay =3D els.display;=0A=
    els.visibility =3D 'hidden';=0A=
    els.position =3D 'absolute';=0A=
    els.display =3D 'block';=0A=
    var originalWidth =3D element.clientWidth;=0A=
    var originalHeight =3D element.clientHeight;=0A=
    els.display =3D originalDisplay;=0A=
    els.position =3D originalPosition;=0A=
    els.visibility =3D originalVisibility;=0A=
    return {width: originalWidth, height: originalHeight};=0A=
  },=0A=
=0A=
  makePositioned: function(element) {=0A=
    element =3D $(element);=0A=
    var pos =3D Element.getStyle(element, 'position');=0A=
    if (pos =3D=3D 'static' || !pos) {=0A=
      element._madePositioned =3D true;=0A=
      element.style.position =3D 'relative';=0A=
      // Opera returns the offset relative to the positioning context, =
when an=0A=
      // element is position relative but top and left have not been =
defined=0A=
      if (Prototype.Browser.Opera) {=0A=
        element.style.top =3D 0;=0A=
        element.style.left =3D 0;=0A=
      }=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  undoPositioned: function(element) {=0A=
    element =3D $(element);=0A=
    if (element._madePositioned) {=0A=
      element._madePositioned =3D undefined;=0A=
      element.style.position =3D=0A=
        element.style.top =3D=0A=
        element.style.left =3D=0A=
        element.style.bottom =3D=0A=
        element.style.right =3D '';=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  makeClipping: function(element) {=0A=
    element =3D $(element);=0A=
    if (element._overflow) return element;=0A=
    element._overflow =3D Element.getStyle(element, 'overflow') || =
'auto';=0A=
    if (element._overflow !=3D=3D 'hidden')=0A=
      element.style.overflow =3D 'hidden';=0A=
    return element;=0A=
  },=0A=
=0A=
  undoClipping: function(element) {=0A=
    element =3D $(element);=0A=
    if (!element._overflow) return element;=0A=
    element.style.overflow =3D element._overflow =3D=3D 'auto' ? '' : =
element._overflow;=0A=
    element._overflow =3D null;=0A=
    return element;=0A=
  },=0A=
=0A=
  cumulativeOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      element =3D element.offsetParent;=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  positionedOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      element =3D element.offsetParent;=0A=
      if (element) {=0A=
        if (element.tagName.toUpperCase() =3D=3D 'BODY') break;=0A=
        var p =3D Element.getStyle(element, 'position');=0A=
        if (p !=3D=3D 'static') break;=0A=
      }=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  absolutize: function(element) {=0A=
    element =3D $(element);=0A=
    if (element.getStyle('position') =3D=3D 'absolute') return element;=0A=
    // Position.prepare(); // To be done manually by Scripty when it =
needs it.=0A=
=0A=
    var offsets =3D element.positionedOffset();=0A=
    var top     =3D offsets[1];=0A=
    var left    =3D offsets[0];=0A=
    var width   =3D element.clientWidth;=0A=
    var height  =3D element.clientHeight;=0A=
=0A=
    element._originalLeft   =3D left - parseFloat(element.style.left  || =
0);=0A=
    element._originalTop    =3D top  - parseFloat(element.style.top || =
0);=0A=
    element._originalWidth  =3D element.style.width;=0A=
    element._originalHeight =3D element.style.height;=0A=
=0A=
    element.style.position =3D 'absolute';=0A=
    element.style.top    =3D top + 'px';=0A=
    element.style.left   =3D left + 'px';=0A=
    element.style.width  =3D width + 'px';=0A=
    element.style.height =3D height + 'px';=0A=
    return element;=0A=
  },=0A=
=0A=
  relativize: function(element) {=0A=
    element =3D $(element);=0A=
    if (element.getStyle('position') =3D=3D 'relative') return element;=0A=
    // Position.prepare(); // To be done manually by Scripty when it =
needs it.=0A=
=0A=
    element.style.position =3D 'relative';=0A=
    var top  =3D parseFloat(element.style.top  || 0) - =
(element._originalTop || 0);=0A=
    var left =3D parseFloat(element.style.left || 0) - =
(element._originalLeft || 0);=0A=
=0A=
    element.style.top    =3D top + 'px';=0A=
    element.style.left   =3D left + 'px';=0A=
    element.style.height =3D element._originalHeight;=0A=
    element.style.width  =3D element._originalWidth;=0A=
    return element;=0A=
  },=0A=
=0A=
  cumulativeScrollOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.scrollTop  || 0;=0A=
      valueL +=3D element.scrollLeft || 0;=0A=
      element =3D element.parentNode;=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  getOffsetParent: function(element) {=0A=
    if (element.offsetParent) return $(element.offsetParent);=0A=
    if (element =3D=3D document.body) return $(element);=0A=
=0A=
    while ((element =3D element.parentNode) && element !=3D =
document.body)=0A=
      if (Element.getStyle(element, 'position') !=3D 'static')=0A=
        return $(element);=0A=
=0A=
    return $(document.body);=0A=
  },=0A=
=0A=
  viewportOffset: function(forElement) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
=0A=
    var element =3D forElement;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
=0A=
      // Safari fix=0A=
      if (element.offsetParent =3D=3D document.body &&=0A=
        Element.getStyle(element, 'position') =3D=3D 'absolute') break;=0A=
=0A=
    } while (element =3D element.offsetParent);=0A=
=0A=
    element =3D forElement;=0A=
    do {=0A=
      if (!Prototype.Browser.Opera || (element.tagName && =
(element.tagName.toUpperCase() =3D=3D 'BODY'))) {=0A=
        valueT -=3D element.scrollTop  || 0;=0A=
        valueL -=3D element.scrollLeft || 0;=0A=
      }=0A=
    } while (element =3D element.parentNode);=0A=
=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  clonePosition: function(element, source) {=0A=
    var options =3D Object.extend({=0A=
      setLeft:    true,=0A=
      setTop:     true,=0A=
      setWidth:   true,=0A=
      setHeight:  true,=0A=
      offsetTop:  0,=0A=
      offsetLeft: 0=0A=
    }, arguments[2] || { });=0A=
=0A=
    // find page position of source=0A=
    source =3D $(source);=0A=
    var p =3D source.viewportOffset();=0A=
=0A=
    // find coordinate system to use=0A=
    element =3D $(element);=0A=
    var delta =3D [0, 0];=0A=
    var parent =3D null;=0A=
    // delta [0,0] will do fine with position: fixed elements,=0A=
    // position:absolute needs offsetParent deltas=0A=
    if (Element.getStyle(element, 'position') =3D=3D 'absolute') {=0A=
      parent =3D element.getOffsetParent();=0A=
      delta =3D parent.viewportOffset();=0A=
    }=0A=
=0A=
    // correct by body offsets (fixes Safari)=0A=
    if (parent =3D=3D document.body) {=0A=
      delta[0] -=3D document.body.offsetLeft;=0A=
      delta[1] -=3D document.body.offsetTop;=0A=
    }=0A=
=0A=
    // set position=0A=
    if (options.setLeft)   element.style.left  =3D (p[0] - delta[0] + =
options.offsetLeft) + 'px';=0A=
    if (options.setTop)    element.style.top   =3D (p[1] - delta[1] + =
options.offsetTop) + 'px';=0A=
    if (options.setWidth)  element.style.width =3D source.offsetWidth + =
'px';=0A=
    if (options.setHeight) element.style.height =3D source.offsetHeight =
+ 'px';=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
Element.Methods.identify.counter =3D 1;=0A=
=0A=
Object.extend(Element.Methods, {=0A=
  getElementsBySelector: Element.Methods.select,=0A=
  childElements: Element.Methods.immediateDescendants=0A=
});=0A=
=0A=
Element._attributeTranslations =3D {=0A=
  write: {=0A=
    names: {=0A=
      className: 'class',=0A=
      htmlFor:   'for'=0A=
    },=0A=
    values: { }=0A=
  }=0A=
};=0A=
=0A=
if (Prototype.Browser.Opera) {=0A=
  Element.Methods.getStyle =3D Element.Methods.getStyle.wrap(=0A=
    function(proceed, element, style) {=0A=
      switch (style) {=0A=
        case 'left': case 'top': case 'right': case 'bottom':=0A=
          if (proceed(element, 'position') =3D=3D=3D 'static') return =
null;=0A=
        case 'height': case 'width':=0A=
          // returns '0px' for hidden elements; we want it to return null=0A=
          if (!Element.visible(element)) return null;=0A=
=0A=
          // returns the border-box dimensions rather than the =
content-box=0A=
          // dimensions, so we subtract padding and borders from the =
value=0A=
          var dim =3D parseInt(proceed(element, style), 10);=0A=
=0A=
          if (dim !=3D=3D element['offset' + style.capitalize()])=0A=
            return dim + 'px';=0A=
=0A=
          var properties;=0A=
          if (style =3D=3D=3D 'height') {=0A=
            properties =3D ['border-top-width', 'padding-top',=0A=
             'padding-bottom', 'border-bottom-width'];=0A=
          }=0A=
          else {=0A=
            properties =3D ['border-left-width', 'padding-left',=0A=
             'padding-right', 'border-right-width'];=0A=
          }=0A=
          return properties.inject(dim, function(memo, property) {=0A=
            var val =3D proceed(element, property);=0A=
            return val =3D=3D=3D null ? memo : memo - parseInt(val, 10);=0A=
          }) + 'px';=0A=
        default: return proceed(element, style);=0A=
      }=0A=
    }=0A=
  );=0A=
=0A=
  Element.Methods.readAttribute =3D Element.Methods.readAttribute.wrap(=0A=
    function(proceed, element, attribute) {=0A=
      if (attribute =3D=3D=3D 'title') return element.title;=0A=
      return proceed(element, attribute);=0A=
    }=0A=
  );=0A=
}=0A=
=0A=
else if (Prototype.Browser.IE) {=0A=
  // IE doesn't report offsets correctly for static elements, so we =
change them=0A=
  // to "relative" to get the values, then change them back.=0A=
  Element.Methods.getOffsetParent =3D =
Element.Methods.getOffsetParent.wrap(=0A=
    function(proceed, element) {=0A=
      element =3D $(element);=0A=
      // IE throws an error if element is not in document=0A=
      try { element.offsetParent }=0A=
      catch(e) { return $(document.body) }=0A=
      var position =3D element.getStyle('position');=0A=
      if (position !=3D=3D 'static') return proceed(element);=0A=
      element.setStyle({ position: 'relative' });=0A=
      var value =3D proceed(element);=0A=
      element.setStyle({ position: position });=0A=
      return value;=0A=
    }=0A=
  );=0A=
=0A=
  $w('positionedOffset viewportOffset').each(function(method) {=0A=
    Element.Methods[method] =3D Element.Methods[method].wrap(=0A=
      function(proceed, element) {=0A=
        element =3D $(element);=0A=
        try { element.offsetParent }=0A=
        catch(e) { return Element._returnOffset(0,0) }=0A=
        var position =3D element.getStyle('position');=0A=
        if (position !=3D=3D 'static') return proceed(element);=0A=
        // Trigger hasLayout on the offset parent so that IE6 reports=0A=
        // accurate offsetTop and offsetLeft values for position: fixed.=0A=
        var offsetParent =3D element.getOffsetParent();=0A=
        if (offsetParent && offsetParent.getStyle('position') =3D=3D=3D =
'fixed')=0A=
          offsetParent.setStyle({ zoom: 1 });=0A=
        element.setStyle({ position: 'relative' });=0A=
        var value =3D proceed(element);=0A=
        element.setStyle({ position: position });=0A=
        return value;=0A=
      }=0A=
    );=0A=
  });=0A=
=0A=
  Element.Methods.cumulativeOffset =3D =
Element.Methods.cumulativeOffset.wrap(=0A=
    function(proceed, element) {=0A=
      try { element.offsetParent }=0A=
      catch(e) { return Element._returnOffset(0,0) }=0A=
      return proceed(element);=0A=
    }=0A=
  );=0A=
=0A=
  Element.Methods.getStyle =3D function(element, style) {=0A=
    element =3D $(element);=0A=
    style =3D (style =3D=3D 'float' || style =3D=3D 'cssFloat') ? =
'styleFloat' : style.camelize();=0A=
    var value =3D element.style[style];=0A=
    if (!value && element.currentStyle) value =3D =
element.currentStyle[style];=0A=
=0A=
    if (style =3D=3D 'opacity') {=0A=
      if (value =3D (element.getStyle('filter') || =
'').match(/alpha\(opacity=3D(.*)\)/))=0A=
        if (value[1]) return parseFloat(value[1]) / 100;=0A=
      return 1.0;=0A=
    }=0A=
=0A=
    if (value =3D=3D 'auto') {=0A=
      if ((style =3D=3D 'width' || style =3D=3D 'height') && =
(element.getStyle('display') !=3D 'none'))=0A=
        return element['offset' + style.capitalize()] + 'px';=0A=
      return null;=0A=
    }=0A=
    return value;=0A=
  };=0A=
=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    function stripAlpha(filter){=0A=
      return filter.replace(/alpha\([^\)]*\)/gi,'');=0A=
    }=0A=
    element =3D $(element);=0A=
    var currentStyle =3D element.currentStyle;=0A=
    if ((currentStyle && !currentStyle.hasLayout) ||=0A=
      (!currentStyle && element.style.zoom =3D=3D 'normal'))=0A=
        element.style.zoom =3D 1;=0A=
=0A=
    var filter =3D element.getStyle('filter'), style =3D element.style;=0A=
    if (value =3D=3D 1 || value =3D=3D=3D '') {=0A=
      (filter =3D stripAlpha(filter)) ?=0A=
        style.filter =3D filter : style.removeAttribute('filter');=0A=
      return element;=0A=
    } else if (value < 0.00001) value =3D 0;=0A=
    style.filter =3D stripAlpha(filter) +=0A=
      'alpha(opacity=3D' + (value * 100) + ')';=0A=
    return element;=0A=
  };=0A=
=0A=
  Element._attributeTranslations =3D {=0A=
    read: {=0A=
      names: {=0A=
        'class': 'className',=0A=
        'for':   'htmlFor'=0A=
      },=0A=
      values: {=0A=
        _getAttr: function(element, attribute) {=0A=
          return element.getAttribute(attribute, 2);=0A=
        },=0A=
        _getAttrNode: function(element, attribute) {=0A=
          var node =3D element.getAttributeNode(attribute);=0A=
          return node ? node.value : "";=0A=
        },=0A=
        _getEv: function(element, attribute) {=0A=
          attribute =3D element.getAttribute(attribute);=0A=
          return attribute ? attribute.toString().slice(23, -2) : null;=0A=
        },=0A=
        _flag: function(element, attribute) {=0A=
          return $(element).hasAttribute(attribute) ? attribute : null;=0A=
        },=0A=
        style: function(element) {=0A=
          return element.style.cssText.toLowerCase();=0A=
        },=0A=
        title: function(element) {=0A=
          return element.title;=0A=
        }=0A=
      }=0A=
    }=0A=
  };=0A=
=0A=
  Element._attributeTranslations.write =3D {=0A=
    names: Object.extend({=0A=
      cellpadding: 'cellPadding',=0A=
      cellspacing: 'cellSpacing'=0A=
    }, Element._attributeTranslations.read.names),=0A=
    values: {=0A=
      checked: function(element, value) {=0A=
        element.checked =3D !!value;=0A=
      },=0A=
=0A=
      style: function(element, value) {=0A=
        element.style.cssText =3D value ? value : '';=0A=
      }=0A=
    }=0A=
  };=0A=
=0A=
  Element._attributeTranslations.has =3D {};=0A=
=0A=
  $w('colSpan rowSpan vAlign dateTime accessKey tabIndex ' +=0A=
      'encType maxLength readOnly longDesc =
frameBorder').each(function(attr) {=0A=
    Element._attributeTranslations.write.names[attr.toLowerCase()] =3D =
attr;=0A=
    Element._attributeTranslations.has[attr.toLowerCase()] =3D attr;=0A=
  });=0A=
=0A=
  (function(v) {=0A=
    Object.extend(v, {=0A=
      href:        v._getAttr,=0A=
      src:         v._getAttr,=0A=
      type:        v._getAttr,=0A=
      action:      v._getAttrNode,=0A=
      disabled:    v._flag,=0A=
      checked:     v._flag,=0A=
      readonly:    v._flag,=0A=
      multiple:    v._flag,=0A=
      onload:      v._getEv,=0A=
      onunload:    v._getEv,=0A=
      onclick:     v._getEv,=0A=
      ondblclick:  v._getEv,=0A=
      onmousedown: v._getEv,=0A=
      onmouseup:   v._getEv,=0A=
      onmouseover: v._getEv,=0A=
      onmousemove: v._getEv,=0A=
      onmouseout:  v._getEv,=0A=
      onfocus:     v._getEv,=0A=
      onblur:      v._getEv,=0A=
      onkeypress:  v._getEv,=0A=
      onkeydown:   v._getEv,=0A=
      onkeyup:     v._getEv,=0A=
      onsubmit:    v._getEv,=0A=
      onreset:     v._getEv,=0A=
      onselect:    v._getEv,=0A=
      onchange:    v._getEv=0A=
    });=0A=
  })(Element._attributeTranslations.read.values);=0A=
}=0A=
=0A=
else if (Prototype.Browser.Gecko && =
/rv:1\.8\.0/.test(navigator.userAgent)) {=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1) ? 0.999999 :=0A=
      (value =3D=3D=3D '') ? '' : (value < 0.00001) ? 0 : value;=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
else if (Prototype.Browser.WebKit) {=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1 || value =3D=3D=3D '') ? =
'' :=0A=
      (value < 0.00001) ? 0 : value;=0A=
=0A=
    if (value =3D=3D 1)=0A=
      if(element.tagName.toUpperCase() =3D=3D 'IMG' && element.width) {=0A=
        element.width++; element.width--;=0A=
      } else try {=0A=
        var n =3D document.createTextNode(' ');=0A=
        element.appendChild(n);=0A=
        element.removeChild(n);=0A=
      } catch (e) { }=0A=
=0A=
    return element;=0A=
  };=0A=
=0A=
  // Safari returns margins on body which is incorrect if the child is =
absolutely=0A=
  // positioned.  For performance reasons, redefine =
Element#cumulativeOffset for=0A=
  // KHTML/WebKit only.=0A=
  Element.Methods.cumulativeOffset =3D function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      if (element.offsetParent =3D=3D document.body)=0A=
        if (Element.getStyle(element, 'position') =3D=3D 'absolute') =
break;=0A=
=0A=
      element =3D element.offsetParent;=0A=
    } while (element);=0A=
=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  };=0A=
}=0A=
=0A=
if (Prototype.Browser.IE || Prototype.Browser.Opera) {=0A=
  // IE and Opera are missing .innerHTML support for TABLE-related and =
SELECT elements=0A=
  Element.Methods.update =3D function(element, content) {=0A=
    element =3D $(element);=0A=
=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    if (Object.isElement(content)) return =
element.update().insert(content);=0A=
=0A=
    content =3D Object.toHTML(content);=0A=
    var tagName =3D element.tagName.toUpperCase();=0A=
=0A=
    if (tagName in Element._insertionTranslations.tags) {=0A=
      $A(element.childNodes).each(function(node) { =
element.removeChild(node) });=0A=
      Element._getContentFromAnonymousElement(tagName, =
content.stripScripts())=0A=
        .each(function(node) { element.appendChild(node) });=0A=
    }=0A=
    else element.innerHTML =3D content.stripScripts();=0A=
=0A=
    content.evalScripts.bind(content).defer();=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
if ('outerHTML' in document.createElement('div')) {=0A=
  Element.Methods.replace =3D function(element, content) {=0A=
    element =3D $(element);=0A=
=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    if (Object.isElement(content)) {=0A=
      element.parentNode.replaceChild(content, element);=0A=
      return element;=0A=
    }=0A=
=0A=
    content =3D Object.toHTML(content);=0A=
    var parent =3D element.parentNode, tagName =3D =
parent.tagName.toUpperCase();=0A=
=0A=
    if (Element._insertionTranslations.tags[tagName]) {=0A=
      var nextSibling =3D element.next();=0A=
      var fragments =3D Element._getContentFromAnonymousElement(tagName, =
content.stripScripts());=0A=
      parent.removeChild(element);=0A=
      if (nextSibling)=0A=
        fragments.each(function(node) { parent.insertBefore(node, =
nextSibling) });=0A=
      else=0A=
        fragments.each(function(node) { parent.appendChild(node) });=0A=
    }=0A=
    else element.outerHTML =3D content.stripScripts();=0A=
=0A=
    content.evalScripts.bind(content).defer();=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
Element._returnOffset =3D function(l, t) {=0A=
  var result =3D [l, t];=0A=
  result.left =3D l;=0A=
  result.top =3D t;=0A=
  return result;=0A=
};=0A=
=0A=
Element._getContentFromAnonymousElement =3D function(tagName, html) {=0A=
  var div =3D new Element('div'), t =3D =
Element._insertionTranslations.tags[tagName];=0A=
  if (t) {=0A=
    div.innerHTML =3D t[0] + html + t[1];=0A=
    t[2].times(function() { div =3D div.firstChild });=0A=
  } else div.innerHTML =3D html;=0A=
  return $A(div.childNodes);=0A=
};=0A=
=0A=
Element._insertionTranslations =3D {=0A=
  before: function(element, node) {=0A=
    element.parentNode.insertBefore(node, element);=0A=
  },=0A=
  top: function(element, node) {=0A=
    element.insertBefore(node, element.firstChild);=0A=
  },=0A=
  bottom: function(element, node) {=0A=
    element.appendChild(node);=0A=
  },=0A=
  after: function(element, node) {=0A=
    element.parentNode.insertBefore(node, element.nextSibling);=0A=
  },=0A=
  tags: {=0A=
    TABLE:  ['<table>',                '</table>',                   1],=0A=
    TBODY:  ['<table><tbody>',         '</tbody></table>',           2],=0A=
    TR:     ['<table><tbody><tr>',     '</tr></tbody></table>',      3],=0A=
    TD:     ['<table><tbody><tr><td>', '</td></tr></tbody></table>', 4],=0A=
    SELECT: ['<select>',               '</select>',                  1]=0A=
  }=0A=
};=0A=
=0A=
(function() {=0A=
  Object.extend(this.tags, {=0A=
    THEAD: this.tags.TBODY,=0A=
    TFOOT: this.tags.TBODY,=0A=
    TH:    this.tags.TD=0A=
  });=0A=
}).call(Element._insertionTranslations);=0A=
=0A=
Element.Methods.Simulated =3D {=0A=
  hasAttribute: function(element, attribute) {=0A=
    attribute =3D Element._attributeTranslations.has[attribute] || =
attribute;=0A=
    var node =3D $(element).getAttributeNode(attribute);=0A=
    return !!(node && node.specified);=0A=
  }=0A=
};=0A=
=0A=
Element.Methods.ByTag =3D { };=0A=
=0A=
Object.extend(Element, Element.Methods);=0A=
=0A=
if (!Prototype.BrowserFeatures.ElementExtensions &&=0A=
    document.createElement('div')['__proto__']) {=0A=
  window.HTMLElement =3D { };=0A=
  window.HTMLElement.prototype =3D =
document.createElement('div')['__proto__'];=0A=
  Prototype.BrowserFeatures.ElementExtensions =3D true;=0A=
}=0A=
=0A=
Element.extend =3D (function() {=0A=
  if (Prototype.BrowserFeatures.SpecificElementExtensions)=0A=
    return Prototype.K;=0A=
=0A=
  var Methods =3D { }, ByTag =3D Element.Methods.ByTag;=0A=
=0A=
  var extend =3D Object.extend(function(element) {=0A=
    if (!element || element._extendedByPrototype ||=0A=
        element.nodeType !=3D 1 || element =3D=3D window) return element;=0A=
=0A=
    var methods =3D Object.clone(Methods),=0A=
      tagName =3D element.tagName.toUpperCase(), property, value;=0A=
=0A=
    // extend methods for specific tags=0A=
    if (ByTag[tagName]) Object.extend(methods, ByTag[tagName]);=0A=
=0A=
    for (property in methods) {=0A=
      value =3D methods[property];=0A=
      if (Object.isFunction(value) && !(property in element))=0A=
        element[property] =3D value.methodize();=0A=
    }=0A=
=0A=
    element._extendedByPrototype =3D Prototype.emptyFunction;=0A=
    return element;=0A=
=0A=
  }, {=0A=
    refresh: function() {=0A=
      // extend methods for all tags (Safari doesn't need this)=0A=
      if (!Prototype.BrowserFeatures.ElementExtensions) {=0A=
        Object.extend(Methods, Element.Methods);=0A=
        Object.extend(Methods, Element.Methods.Simulated);=0A=
      }=0A=
    }=0A=
  });=0A=
=0A=
  extend.refresh();=0A=
  return extend;=0A=
})();=0A=
=0A=
Element.hasAttribute =3D function(element, attribute) {=0A=
  if (element.hasAttribute) return element.hasAttribute(attribute);=0A=
  return Element.Methods.Simulated.hasAttribute(element, attribute);=0A=
};=0A=
=0A=
Element.addMethods =3D function(methods) {=0A=
  var F =3D Prototype.BrowserFeatures, T =3D Element.Methods.ByTag;=0A=
=0A=
  if (!methods) {=0A=
    Object.extend(Form, Form.Methods);=0A=
    Object.extend(Form.Element, Form.Element.Methods);=0A=
    Object.extend(Element.Methods.ByTag, {=0A=
      "FORM":     Object.clone(Form.Methods),=0A=
      "INPUT":    Object.clone(Form.Element.Methods),=0A=
      "SELECT":   Object.clone(Form.Element.Methods),=0A=
      "TEXTAREA": Object.clone(Form.Element.Methods)=0A=
    });=0A=
  }=0A=
=0A=
  if (arguments.length =3D=3D 2) {=0A=
    var tagName =3D methods;=0A=
    methods =3D arguments[1];=0A=
  }=0A=
=0A=
  if (!tagName) Object.extend(Element.Methods, methods || { });=0A=
  else {=0A=
    if (Object.isArray(tagName)) tagName.each(extend);=0A=
    else extend(tagName);=0A=
  }=0A=
=0A=
  function extend(tagName) {=0A=
    tagName =3D tagName.toUpperCase();=0A=
    if (!Element.Methods.ByTag[tagName])=0A=
      Element.Methods.ByTag[tagName] =3D { };=0A=
    Object.extend(Element.Methods.ByTag[tagName], methods);=0A=
  }=0A=
=0A=
  function copy(methods, destination, onlyIfAbsent) {=0A=
    onlyIfAbsent =3D onlyIfAbsent || false;=0A=
    for (var property in methods) {=0A=
      var value =3D methods[property];=0A=
      if (!Object.isFunction(value)) continue;=0A=
      if (!onlyIfAbsent || !(property in destination))=0A=
        destination[property] =3D value.methodize();=0A=
    }=0A=
  }=0A=
=0A=
  function findDOMClass(tagName) {=0A=
    var klass;=0A=
    var trans =3D {=0A=
      "OPTGROUP": "OptGroup", "TEXTAREA": "TextArea", "P": "Paragraph",=0A=
      "FIELDSET": "FieldSet", "UL": "UList", "OL": "OList", "DL": =
"DList",=0A=
      "DIR": "Directory", "H1": "Heading", "H2": "Heading", "H3": =
"Heading",=0A=
      "H4": "Heading", "H5": "Heading", "H6": "Heading", "Q": "Quote",=0A=
      "INS": "Mod", "DEL": "Mod", "A": "Anchor", "IMG": "Image", =
"CAPTION":=0A=
      "TableCaption", "COL": "TableCol", "COLGROUP": "TableCol", "THEAD":=0A=
      "TableSection", "TFOOT": "TableSection", "TBODY": "TableSection", =
"TR":=0A=
      "TableRow", "TH": "TableCell", "TD": "TableCell", "FRAMESET":=0A=
      "FrameSet", "IFRAME": "IFrame"=0A=
    };=0A=
    if (trans[tagName]) klass =3D 'HTML' + trans[tagName] + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
    klass =3D 'HTML' + tagName + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
    klass =3D 'HTML' + tagName.capitalize() + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
=0A=
    window[klass] =3D { };=0A=
    window[klass].prototype =3D =
document.createElement(tagName)['__proto__'];=0A=
    return window[klass];=0A=
  }=0A=
=0A=
  if (F.ElementExtensions) {=0A=
    copy(Element.Methods, HTMLElement.prototype);=0A=
    copy(Element.Methods.Simulated, HTMLElement.prototype, true);=0A=
  }=0A=
=0A=
  if (F.SpecificElementExtensions) {=0A=
    for (var tag in Element.Methods.ByTag) {=0A=
      var klass =3D findDOMClass(tag);=0A=
      if (Object.isUndefined(klass)) continue;=0A=
      copy(T[tag], klass.prototype);=0A=
    }=0A=
  }=0A=
=0A=
  Object.extend(Element, Element.Methods);=0A=
  delete Element.ByTag;=0A=
=0A=
  if (Element.extend.refresh) Element.extend.refresh();=0A=
  Element.cache =3D { };=0A=
};=0A=
=0A=
document.viewport =3D {=0A=
  getDimensions: function() {=0A=
    var dimensions =3D { }, B =3D Prototype.Browser;=0A=
    $w('width height').each(function(d) {=0A=
      var D =3D d.capitalize();=0A=
      if (B.WebKit && !document.evaluate) {=0A=
        // Safari <3.0 needs self.innerWidth/Height=0A=
        dimensions[d] =3D self['inner' + D];=0A=
      } else if (B.Opera && parseFloat(window.opera.version()) < 9.5) {=0A=
        // Opera <9.5 needs document.body.clientWidth/Height=0A=
        dimensions[d] =3D document.body['client' + D]=0A=
      } else {=0A=
        dimensions[d] =3D document.documentElement['client' + D];=0A=
      }=0A=
    });=0A=
    return dimensions;=0A=
  },=0A=
=0A=
  getWidth: function() {=0A=
    return this.getDimensions().width;=0A=
  },=0A=
=0A=
  getHeight: function() {=0A=
    return this.getDimensions().height;=0A=
  },=0A=
=0A=
  getScrollOffsets: function() {=0A=
    return Element._returnOffset(=0A=
      window.pageXOffset || document.documentElement.scrollLeft || =
document.body.scrollLeft,=0A=
      window.pageYOffset || document.documentElement.scrollTop || =
document.body.scrollTop);=0A=
  }=0A=
};=0A=
/* Portions of the Selector class are derived from Jack Slocum's =
DomQuery,=0A=
 * part of YUI-Ext version 0.40, distributed under the terms of an =
MIT-style=0A=
 * license.  Please see http://www.yui-ext.com/ for more information. */=0A=
=0A=
var Selector =3D Class.create({=0A=
  initialize: function(expression) {=0A=
    this.expression =3D expression.strip();=0A=
=0A=
    if (this.shouldUseSelectorsAPI()) {=0A=
      this.mode =3D 'selectorsAPI';=0A=
    } else if (this.shouldUseXPath()) {=0A=
      this.mode =3D 'xpath';=0A=
      this.compileXPathMatcher();=0A=
    } else {=0A=
      this.mode =3D "normal";=0A=
      this.compileMatcher();=0A=
    }=0A=
=0A=
  },=0A=
=0A=
  shouldUseXPath: function() {=0A=
    if (!Prototype.BrowserFeatures.XPath) return false;=0A=
=0A=
    var e =3D this.expression;=0A=
=0A=
    // Safari 3 chokes on :*-of-type and :empty=0A=
    if (Prototype.Browser.WebKit &&=0A=
     (e.include("-of-type") || e.include(":empty")))=0A=
      return false;=0A=
=0A=
    // XPath can't do namespaced attributes, nor can it read=0A=
    // the "checked" property from DOM nodes=0A=
    if ((/(\[[\w-]*?:|:checked)/).test(e))=0A=
      return false;=0A=
=0A=
    return true;=0A=
  },=0A=
=0A=
  shouldUseSelectorsAPI: function() {=0A=
    if (!Prototype.BrowserFeatures.SelectorsAPI) return false;=0A=
=0A=
    if (!Selector._div) Selector._div =3D new Element('div');=0A=
=0A=
    // Make sure the browser treats the selector as valid. Test on an=0A=
    // isolated element to minimize cost of this check.=0A=
    try {=0A=
      Selector._div.querySelector(this.expression);=0A=
    } catch(e) {=0A=
      return false;=0A=
    }=0A=
=0A=
    return true;=0A=
  },=0A=
=0A=
  compileMatcher: function() {=0A=
    var e =3D this.expression, ps =3D Selector.patterns, h =3D =
Selector.handlers,=0A=
        c =3D Selector.criteria, le, p, m;=0A=
=0A=
    if (Selector._cache[e]) {=0A=
      this.matcher =3D Selector._cache[e];=0A=
      return;=0A=
    }=0A=
=0A=
    this.matcher =3D ["this.matcher =3D function(root) {",=0A=
                    "var r =3D root, h =3D Selector.handlers, c =3D =
false, n;"];=0A=
=0A=
    while (e && le !=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i in ps) {=0A=
        p =3D ps[i];=0A=
        if (m =3D e.match(p)) {=0A=
          this.matcher.push(Object.isFunction(c[i]) ? c[i](m) :=0A=
            new Template(c[i]).evaluate(m));=0A=
          e =3D e.replace(m[0], '');=0A=
          break;=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    this.matcher.push("return h.unique(n);\n}");=0A=
    eval(this.matcher.join('\n'));=0A=
    Selector._cache[this.expression] =3D this.matcher;=0A=
  },=0A=
=0A=
  compileXPathMatcher: function() {=0A=
    var e =3D this.expression, ps =3D Selector.patterns,=0A=
        x =3D Selector.xpath, le, m;=0A=
=0A=
    if (Selector._cache[e]) {=0A=
      this.xpath =3D Selector._cache[e]; return;=0A=
    }=0A=
=0A=
    this.matcher =3D ['.//*'];=0A=
    while (e && le !=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i in ps) {=0A=
        if (m =3D e.match(ps[i])) {=0A=
          this.matcher.push(Object.isFunction(x[i]) ? x[i](m) :=0A=
            new Template(x[i]).evaluate(m));=0A=
          e =3D e.replace(m[0], '');=0A=
          break;=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    this.xpath =3D this.matcher.join('');=0A=
    Selector._cache[this.expression] =3D this.xpath;=0A=
  },=0A=
=0A=
  findElements: function(root) {=0A=
    root =3D root || document;=0A=
    var e =3D this.expression, results;=0A=
=0A=
    switch (this.mode) {=0A=
      case 'selectorsAPI':=0A=
        // querySelectorAll queries document-wide, then filters to =
descendants=0A=
        // of the context element. That's not what we want.=0A=
        // Add an explicit context to the selector if necessary.=0A=
        if (root !=3D=3D document) {=0A=
          var oldId =3D root.id, id =3D $(root).identify();=0A=
          e =3D "#" + id + " " + e;=0A=
        }=0A=
=0A=
        results =3D $A(root.querySelectorAll(e)).map(Element.extend);=0A=
        root.id =3D oldId;=0A=
=0A=
        return results;=0A=
      case 'xpath':=0A=
        return document._getElementsByXPath(this.xpath, root);=0A=
      default:=0A=
       return this.matcher(root);=0A=
    }=0A=
  },=0A=
=0A=
  match: function(element) {=0A=
    this.tokens =3D [];=0A=
=0A=
    var e =3D this.expression, ps =3D Selector.patterns, as =3D =
Selector.assertions;=0A=
    var le, p, m;=0A=
=0A=
    while (e && le !=3D=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i in ps) {=0A=
        p =3D ps[i];=0A=
        if (m =3D e.match(p)) {=0A=
          // use the Selector.assertions methods unless the selector=0A=
          // is too complex.=0A=
          if (as[i]) {=0A=
            this.tokens.push([i, Object.clone(m)]);=0A=
            e =3D e.replace(m[0], '');=0A=
          } else {=0A=
            // reluctantly do a document-wide search=0A=
            // and look for a match in the array=0A=
            return this.findElements(document).include(element);=0A=
          }=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    var match =3D true, name, matches;=0A=
    for (var i =3D 0, token; token =3D this.tokens[i]; i++) {=0A=
      name =3D token[0], matches =3D token[1];=0A=
      if (!Selector.assertions[name](element, matches)) {=0A=
        match =3D false; break;=0A=
      }=0A=
    }=0A=
=0A=
    return match;=0A=
  },=0A=
=0A=
  toString: function() {=0A=
    return this.expression;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return "#<Selector:" + this.expression.inspect() + ">";=0A=
  }=0A=
});=0A=
=0A=
Object.extend(Selector, {=0A=
  _cache: { },=0A=
=0A=
  xpath: {=0A=
    descendant:   "//*",=0A=
    child:        "/*",=0A=
    adjacent:     "/following-sibling::*[1]",=0A=
    laterSibling: '/following-sibling::*',=0A=
    tagName:      function(m) {=0A=
      if (m[1] =3D=3D '*') return '';=0A=
      return "[local-name()=3D'" + m[1].toLowerCase() +=0A=
             "' or local-name()=3D'" + m[1].toUpperCase() + "']";=0A=
    },=0A=
    className:    "[contains(concat(' ', @class, ' '), ' #{1} ')]",=0A=
    id:           "[@id=3D'#{1}']",=0A=
    attrPresence: function(m) {=0A=
      m[1] =3D m[1].toLowerCase();=0A=
      return new Template("[@#{1}]").evaluate(m);=0A=
    },=0A=
    attr: function(m) {=0A=
      m[1] =3D m[1].toLowerCase();=0A=
      m[3] =3D m[5] || m[6];=0A=
      return new Template(Selector.xpath.operators[m[2]]).evaluate(m);=0A=
    },=0A=
    pseudo: function(m) {=0A=
      var h =3D Selector.xpath.pseudos[m[1]];=0A=
      if (!h) return '';=0A=
      if (Object.isFunction(h)) return h(m);=0A=
      return new Template(Selector.xpath.pseudos[m[1]]).evaluate(m);=0A=
    },=0A=
    operators: {=0A=
      '=3D':  "[@#{1}=3D'#{3}']",=0A=
      '!=3D': "[@#{1}!=3D'#{3}']",=0A=
      '^=3D': "[starts-with(@#{1}, '#{3}')]",=0A=
      '$=3D': "[substring(@#{1}, (string-length(@#{1}) - =
string-length('#{3}') + 1))=3D'#{3}']",=0A=
      '*=3D': "[contains(@#{1}, '#{3}')]",=0A=
      '~=3D': "[contains(concat(' ', @#{1}, ' '), ' #{3} ')]",=0A=
      '|=3D': "[contains(concat('-', @#{1}, '-'), '-#{3}-')]"=0A=
    },=0A=
    pseudos: {=0A=
      'first-child': '[not(preceding-sibling::*)]',=0A=
      'last-child':  '[not(following-sibling::*)]',=0A=
      'only-child':  '[not(preceding-sibling::* or =
following-sibling::*)]',=0A=
      'empty':       "[count(*) =3D 0 and (count(text()) =3D 0)]",=0A=
      'checked':     "[@checked]",=0A=
      'disabled':    "[(@disabled) and (@type!=3D'hidden')]",=0A=
      'enabled':     "[not(@disabled) and (@type!=3D'hidden')]",=0A=
      'not': function(m) {=0A=
        var e =3D m[6], p =3D Selector.patterns,=0A=
            x =3D Selector.xpath, le, v;=0A=
=0A=
        var exclusion =3D [];=0A=
        while (e && le !=3D e && (/\S/).test(e)) {=0A=
          le =3D e;=0A=
          for (var i in p) {=0A=
            if (m =3D e.match(p[i])) {=0A=
              v =3D Object.isFunction(x[i]) ? x[i](m) : new =
Template(x[i]).evaluate(m);=0A=
              exclusion.push("(" + v.substring(1, v.length - 1) + ")");=0A=
              e =3D e.replace(m[0], '');=0A=
              break;=0A=
            }=0A=
          }=0A=
        }=0A=
        return "[not(" + exclusion.join(" and ") + ")]";=0A=
      },=0A=
      'nth-child':      function(m) {=0A=
        return =
Selector.xpath.pseudos.nth("(count(./preceding-sibling::*) + 1) ", m);=0A=
      },=0A=
      'nth-last-child': function(m) {=0A=
        return =
Selector.xpath.pseudos.nth("(count(./following-sibling::*) + 1) ", m);=0A=
      },=0A=
      'nth-of-type':    function(m) {=0A=
        return Selector.xpath.pseudos.nth("position() ", m);=0A=
      },=0A=
      'nth-last-of-type': function(m) {=0A=
        return Selector.xpath.pseudos.nth("(last() + 1 - position()) ", =
m);=0A=
      },=0A=
      'first-of-type':  function(m) {=0A=
        m[6] =3D "1"; return Selector.xpath.pseudos['nth-of-type'](m);=0A=
      },=0A=
      'last-of-type':   function(m) {=0A=
        m[6] =3D "1"; return =
Selector.xpath.pseudos['nth-last-of-type'](m);=0A=
      },=0A=
      'only-of-type':   function(m) {=0A=
        var p =3D Selector.xpath.pseudos; return p['first-of-type'](m) + =
p['last-of-type'](m);=0A=
      },=0A=
      nth: function(fragment, m) {=0A=
        var mm, formula =3D m[6], predicate;=0A=
        if (formula =3D=3D 'even') formula =3D '2n+0';=0A=
        if (formula =3D=3D 'odd')  formula =3D '2n+1';=0A=
        if (mm =3D formula.match(/^(\d+)$/)) // digit only=0A=
          return '[' + fragment + "=3D " + mm[1] + ']';=0A=
        if (mm =3D formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // an+b=0A=
          if (mm[1] =3D=3D "-") mm[1] =3D -1;=0A=
          var a =3D mm[1] ? Number(mm[1]) : 1;=0A=
          var b =3D mm[2] ? Number(mm[2]) : 0;=0A=
          predicate =3D "[((#{fragment} - #{b}) mod #{a} =3D 0) and " +=0A=
          "((#{fragment} - #{b}) div #{a} >=3D 0)]";=0A=
          return new Template(predicate).evaluate({=0A=
            fragment: fragment, a: a, b: b });=0A=
        }=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  criteria: {=0A=
    tagName:      'n =3D h.tagName(n, r, "#{1}", c);      c =3D false;',=0A=
    className:    'n =3D h.className(n, r, "#{1}", c);    c =3D false;',=0A=
    id:           'n =3D h.id(n, r, "#{1}", c);           c =3D false;',=0A=
    attrPresence: 'n =3D h.attrPresence(n, r, "#{1}", c); c =3D false;',=0A=
    attr: function(m) {=0A=
      m[3] =3D (m[5] || m[6]);=0A=
      return new Template('n =3D h.attr(n, r, "#{1}", "#{3}", "#{2}", =
c); c =3D false;').evaluate(m);=0A=
    },=0A=
    pseudo: function(m) {=0A=
      if (m[6]) m[6] =3D m[6].replace(/"/g, '\\"');=0A=
      return new Template('n =3D h.pseudo(n, "#{1}", "#{6}", r, c); c =
=3D false;').evaluate(m);=0A=
    },=0A=
    descendant:   'c =3D "descendant";',=0A=
    child:        'c =3D "child";',=0A=
    adjacent:     'c =3D "adjacent";',=0A=
    laterSibling: 'c =3D "laterSibling";'=0A=
  },=0A=
=0A=
  patterns: {=0A=
    // combinators must be listed first=0A=
    // (and descendant needs to be last combinator)=0A=
    laterSibling: /^\s*~\s*/,=0A=
    child:        /^\s*>\s*/,=0A=
    adjacent:     /^\s*\+\s*/,=0A=
    descendant:   /^\s/,=0A=
=0A=
    // selectors follow=0A=
    tagName:      /^\s*(\*|[\w\-]+)(\b|$)?/,=0A=
    id:           /^#([\w\-\*]+)(\b|$)/,=0A=
    className:    /^\.([\w\-\*]+)(\b|$)/,=0A=
    pseudo:=0A=
/^:((first|last|nth|nth-last|only)(-child|-of-type)|empty|checked|(en|dis=
)abled|not)(\((.*?)\))?(\b|$|(?=3D\s|[:+~>]))/,=0A=
    attrPresence: /^\[((?:[\w]+:)?[\w]+)\]/,=0A=
    attr:         =
/\[((?:[\w-]*:)?[\w-]+)\s*(?:([!^$*~|]?=3D)\s*((['"])([^\4]*?)\4|([^'"][^=
\]]*?)))?\]/=0A=
  },=0A=
=0A=
  // for Selector.match and Element#match=0A=
  assertions: {=0A=
    tagName: function(element, matches) {=0A=
      return matches[1].toUpperCase() =3D=3D =
element.tagName.toUpperCase();=0A=
    },=0A=
=0A=
    className: function(element, matches) {=0A=
      return Element.hasClassName(element, matches[1]);=0A=
    },=0A=
=0A=
    id: function(element, matches) {=0A=
      return element.id =3D=3D=3D matches[1];=0A=
    },=0A=
=0A=
    attrPresence: function(element, matches) {=0A=
      return Element.hasAttribute(element, matches[1]);=0A=
    },=0A=
=0A=
    attr: function(element, matches) {=0A=
      var nodeValue =3D Element.readAttribute(element, matches[1]);=0A=
      return nodeValue && Selector.operators[matches[2]](nodeValue, =
matches[5] || matches[6]);=0A=
    }=0A=
  },=0A=
=0A=
  handlers: {=0A=
    // UTILITY FUNCTIONS=0A=
    // joins two collections=0A=
    concat: function(a, b) {=0A=
      for (var i =3D 0, node; node =3D b[i]; i++)=0A=
        a.push(node);=0A=
      return a;=0A=
    },=0A=
=0A=
    // marks an array of nodes for counting=0A=
    mark: function(nodes) {=0A=
      var _true =3D Prototype.emptyFunction;=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        node._countedByPrototype =3D _true;=0A=
      return nodes;=0A=
    },=0A=
=0A=
    unmark: function(nodes) {=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        node._countedByPrototype =3D undefined;=0A=
      return nodes;=0A=
    },=0A=
=0A=
    // mark each child node with its position (for nth calls)=0A=
    // "ofType" flag indicates whether we're indexing for nth-of-type=0A=
    // rather than nth-child=0A=
    index: function(parentNode, reverse, ofType) {=0A=
      parentNode._countedByPrototype =3D Prototype.emptyFunction;=0A=
      if (reverse) {=0A=
        for (var nodes =3D parentNode.childNodes, i =3D nodes.length - =
1, j =3D 1; i >=3D 0; i--) {=0A=
          var node =3D nodes[i];=0A=
          if (node.nodeType =3D=3D 1 && (!ofType || =
node._countedByPrototype)) node.nodeIndex =3D j++;=0A=
        }=0A=
      } else {=0A=
        for (var i =3D 0, j =3D 1, nodes =3D parentNode.childNodes; node =
=3D nodes[i]; i++)=0A=
          if (node.nodeType =3D=3D 1 && (!ofType || =
node._countedByPrototype)) node.nodeIndex =3D j++;=0A=
      }=0A=
    },=0A=
=0A=
    // filters out duplicates and extends all nodes=0A=
    unique: function(nodes) {=0A=
      if (nodes.length =3D=3D 0) return nodes;=0A=
      var results =3D [], n;=0A=
      for (var i =3D 0, l =3D nodes.length; i < l; i++)=0A=
        if (!(n =3D nodes[i])._countedByPrototype) {=0A=
          n._countedByPrototype =3D Prototype.emptyFunction;=0A=
          results.push(Element.extend(n));=0A=
        }=0A=
      return Selector.handlers.unmark(results);=0A=
    },=0A=
=0A=
    // COMBINATOR FUNCTIONS=0A=
    descendant: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        h.concat(results, node.getElementsByTagName('*'));=0A=
      return results;=0A=
    },=0A=
=0A=
    child: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        for (var j =3D 0, child; child =3D node.childNodes[j]; j++)=0A=
          if (child.nodeType =3D=3D 1 && child.tagName !=3D '!') =
results.push(child);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    adjacent: function(nodes) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        var next =3D this.nextElementSibling(node);=0A=
        if (next) results.push(next);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    laterSibling: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        h.concat(results, Element.nextSiblings(node));=0A=
      return results;=0A=
    },=0A=
=0A=
    nextElementSibling: function(node) {=0A=
      while (node =3D node.nextSibling)=0A=
        if (node.nodeType =3D=3D 1) return node;=0A=
      return null;=0A=
    },=0A=
=0A=
    previousElementSibling: function(node) {=0A=
      while (node =3D node.previousSibling)=0A=
        if (node.nodeType =3D=3D 1) return node;=0A=
      return null;=0A=
    },=0A=
=0A=
    // TOKEN FUNCTIONS=0A=
    tagName: function(nodes, root, tagName, combinator) {=0A=
      var uTagName =3D tagName.toUpperCase();=0A=
      var results =3D [], h =3D Selector.handlers;=0A=
      if (nodes) {=0A=
        if (combinator) {=0A=
          // fastlane for ordinary descendant combinators=0A=
          if (combinator =3D=3D "descendant") {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              h.concat(results, node.getElementsByTagName(tagName));=0A=
            return results;=0A=
          } else nodes =3D this[combinator](nodes);=0A=
          if (tagName =3D=3D "*") return nodes;=0A=
        }=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node.tagName.toUpperCase() =3D=3D=3D uTagName) =
results.push(node);=0A=
        return results;=0A=
      } else return root.getElementsByTagName(tagName);=0A=
    },=0A=
=0A=
    id: function(nodes, root, id, combinator) {=0A=
      var targetNode =3D $(id), h =3D Selector.handlers;=0A=
      if (!targetNode) return [];=0A=
      if (!nodes && root =3D=3D document) return [targetNode];=0A=
      if (nodes) {=0A=
        if (combinator) {=0A=
          if (combinator =3D=3D 'child') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (targetNode.parentNode =3D=3D node) return [targetNode];=0A=
          } else if (combinator =3D=3D 'descendant') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (Element.descendantOf(targetNode, node)) return =
[targetNode];=0A=
          } else if (combinator =3D=3D 'adjacent') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (Selector.handlers.previousElementSibling(targetNode) =
=3D=3D node)=0A=
                return [targetNode];=0A=
          } else nodes =3D h[combinator](nodes);=0A=
        }=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node =3D=3D targetNode) return [targetNode];=0A=
        return [];=0A=
      }=0A=
      return (targetNode && Element.descendantOf(targetNode, root)) ? =
[targetNode] : [];=0A=
    },=0A=
=0A=
    className: function(nodes, root, className, combinator) {=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      return Selector.handlers.byClassName(nodes, root, className);=0A=
    },=0A=
=0A=
    byClassName: function(nodes, root, className) {=0A=
      if (!nodes) nodes =3D Selector.handlers.descendant([root]);=0A=
      var needle =3D ' ' + className + ' ';=0A=
      for (var i =3D 0, results =3D [], node, nodeClassName; node =3D =
nodes[i]; i++) {=0A=
        nodeClassName =3D node.className;=0A=
        if (nodeClassName.length =3D=3D 0) continue;=0A=
        if (nodeClassName =3D=3D className || (' ' + nodeClassName + ' =
').include(needle))=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    attrPresence: function(nodes, root, attr, combinator) {=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      var results =3D [];=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        if (Element.hasAttribute(node, attr)) results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    attr: function(nodes, root, attr, value, operator, combinator) {=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      var handler =3D Selector.operators[operator], results =3D [];=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++) {=0A=
        var nodeValue =3D Element.readAttribute(node, attr);=0A=
        if (nodeValue =3D=3D=3D null) continue;=0A=
        if (handler(nodeValue, value)) results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    pseudo: function(nodes, name, value, root, combinator) {=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      return Selector.pseudos[name](nodes, value, root);=0A=
    }=0A=
  },=0A=
=0A=
  pseudos: {=0A=
    'first-child': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        if (Selector.handlers.previousElementSibling(node)) continue;=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
    'last-child': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        if (Selector.handlers.nextElementSibling(node)) continue;=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
    'only-child': function(nodes, value, root) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!h.previousElementSibling(node) && =
!h.nextElementSibling(node))=0A=
          results.push(node);=0A=
      return results;=0A=
    },=0A=
    'nth-child':        function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root);=0A=
    },=0A=
    'nth-last-child':   function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, true);=0A=
    },=0A=
    'nth-of-type':      function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, false, true);=0A=
    },=0A=
    'nth-last-of-type': function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, true, true);=0A=
    },=0A=
    'first-of-type':    function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, "1", root, false, true);=0A=
    },=0A=
    'last-of-type':     function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, "1", root, true, true);=0A=
    },=0A=
    'only-of-type':     function(nodes, formula, root) {=0A=
      var p =3D Selector.pseudos;=0A=
      return p['last-of-type'](p['first-of-type'](nodes, formula, root), =
formula, root);=0A=
    },=0A=
=0A=
    // handles the an+b logic=0A=
    getIndices: function(a, b, total) {=0A=
      if (a =3D=3D 0) return b > 0 ? [b] : [];=0A=
      return $R(1, total).inject([], function(memo, i) {=0A=
        if (0 =3D=3D (i - b) % a && (i - b) / a >=3D 0) memo.push(i);=0A=
        return memo;=0A=
      });=0A=
    },=0A=
=0A=
    // handles nth(-last)-child, nth(-last)-of-type, and =
(first|last)-of-type=0A=
    nth: function(nodes, formula, root, reverse, ofType) {=0A=
      if (nodes.length =3D=3D 0) return [];=0A=
      if (formula =3D=3D 'even') formula =3D '2n+0';=0A=
      if (formula =3D=3D 'odd')  formula =3D '2n+1';=0A=
      var h =3D Selector.handlers, results =3D [], indexed =3D [], m;=0A=
      h.mark(nodes);=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++) {=0A=
        if (!node.parentNode._countedByPrototype) {=0A=
          h.index(node.parentNode, reverse, ofType);=0A=
          indexed.push(node.parentNode);=0A=
        }=0A=
      }=0A=
      if (formula.match(/^\d+$/)) { // just a number=0A=
        formula =3D Number(formula);=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node.nodeIndex =3D=3D formula) results.push(node);=0A=
      } else if (m =3D formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // =
an+b=0A=
        if (m[1] =3D=3D "-") m[1] =3D -1;=0A=
        var a =3D m[1] ? Number(m[1]) : 1;=0A=
        var b =3D m[2] ? Number(m[2]) : 0;=0A=
        var indices =3D Selector.pseudos.getIndices(a, b, nodes.length);=0A=
        for (var i =3D 0, node, l =3D indices.length; node =3D nodes[i]; =
i++) {=0A=
          for (var j =3D 0; j < l; j++)=0A=
            if (node.nodeIndex =3D=3D indices[j]) results.push(node);=0A=
        }=0A=
      }=0A=
      h.unmark(nodes);=0A=
      h.unmark(indexed);=0A=
      return results;=0A=
    },=0A=
=0A=
    'empty': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        // IE treats comments as element nodes=0A=
        if (node.tagName =3D=3D '!' || node.firstChild) continue;=0A=
        results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    'not': function(nodes, selector, root) {=0A=
      var h =3D Selector.handlers, selectorType, m;=0A=
      var exclusions =3D new Selector(selector).findElements(root);=0A=
      h.mark(exclusions);=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!node._countedByPrototype) results.push(node);=0A=
      h.unmark(exclusions);=0A=
      return results;=0A=
    },=0A=
=0A=
    'enabled': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!node.disabled && (!node.type || node.type !=3D=3D 'hidden'))=0A=
          results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    'disabled': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (node.disabled) results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    'checked': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (node.checked) results.push(node);=0A=
      return results;=0A=
    }=0A=
  },=0A=
=0A=
  operators: {=0A=
    '=3D':  function(nv, v) { return nv =3D=3D v; },=0A=
    '!=3D': function(nv, v) { return nv !=3D v; },=0A=
    '^=3D': function(nv, v) { return nv =3D=3D v || nv && =
nv.startsWith(v); },=0A=
    '$=3D': function(nv, v) { return nv =3D=3D v || nv && =
nv.endsWith(v); },=0A=
    '*=3D': function(nv, v) { return nv =3D=3D v || nv && nv.include(v); =
},=0A=
    '$=3D': function(nv, v) { return nv.endsWith(v); },=0A=
    '*=3D': function(nv, v) { return nv.include(v); },=0A=
    '~=3D': function(nv, v) { return (' ' + nv + ' ').include(' ' + v + =
' '); },=0A=
    '|=3D': function(nv, v) { return ('-' + (nv || "").toUpperCase() +=0A=
     '-').include('-' + (v || "").toUpperCase() + '-'); }=0A=
  },=0A=
=0A=
  split: function(expression) {=0A=
    var expressions =3D [];=0A=
    expression.scan(/(([\w#:.~>+()\s-]+|\*|\[.*?\])+)\s*(,|$)/, =
function(m) {=0A=
      expressions.push(m[1].strip());=0A=
    });=0A=
    return expressions;=0A=
  },=0A=
=0A=
  matchElements: function(elements, expression) {=0A=
    var matches =3D $$(expression), h =3D Selector.handlers;=0A=
    h.mark(matches);=0A=
    for (var i =3D 0, results =3D [], element; element =3D elements[i]; =
i++)=0A=
      if (element._countedByPrototype) results.push(element);=0A=
    h.unmark(matches);=0A=
    return results;=0A=
  },=0A=
=0A=
  findElement: function(elements, expression, index) {=0A=
    if (Object.isNumber(expression)) {=0A=
      index =3D expression; expression =3D false;=0A=
    }=0A=
    return Selector.matchElements(elements, expression || '*')[index || =
0];=0A=
  },=0A=
=0A=
  findChildElements: function(element, expressions) {=0A=
    expressions =3D Selector.split(expressions.join(','));=0A=
    var results =3D [], h =3D Selector.handlers;=0A=
    for (var i =3D 0, l =3D expressions.length, selector; i < l; i++) {=0A=
      selector =3D new Selector(expressions[i].strip());=0A=
      h.concat(results, selector.findElements(element));=0A=
    }=0A=
    return (l > 1) ? h.unique(results) : results;=0A=
  }=0A=
});=0A=
=0A=
if (Prototype.Browser.IE) {=0A=
  Object.extend(Selector.handlers, {=0A=
    // IE returns comment nodes on getElementsByTagName("*").=0A=
    // Filter them out.=0A=
    concat: function(a, b) {=0A=
      for (var i =3D 0, node; node =3D b[i]; i++)=0A=
        if (node.tagName !=3D=3D "!") a.push(node);=0A=
      return a;=0A=
    },=0A=
=0A=
    // IE improperly serializes _countedByPrototype in (inner|outer)HTML.=0A=
    unmark: function(nodes) {=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        node.removeAttribute('_countedByPrototype');=0A=
      return nodes;=0A=
    }=0A=
  });=0A=
}=0A=
=0A=
function $$() {=0A=
  return Selector.findChildElements(document, $A(arguments));=0A=
}=0A=
var Form =3D {=0A=
  reset: function(form) {=0A=
    $(form).reset();=0A=
    return form;=0A=
  },=0A=
=0A=
  serializeElements: function(elements, options) {=0A=
    if (typeof options !=3D 'object') options =3D { hash: !!options };=0A=
    else if (Object.isUndefined(options.hash)) options.hash =3D true;=0A=
    var key, value, submitted =3D false, submit =3D options.submit;=0A=
=0A=
    var data =3D elements.inject({ }, function(result, element) {=0A=
      if (!element.disabled && element.name) {=0A=
        key =3D element.name; value =3D $(element).getValue();=0A=
        if (value !=3D null && element.type !=3D 'file' && (element.type =
!=3D 'submit' || (!submitted &&=0A=
            submit !=3D=3D false && (!submit || key =3D=3D submit) && =
(submitted =3D true)))) {=0A=
          if (key in result) {=0A=
            // a key is already present; construct an array of values=0A=
            if (!Object.isArray(result[key])) result[key] =3D =
[result[key]];=0A=
            result[key].push(value);=0A=
          }=0A=
          else result[key] =3D value;=0A=
        }=0A=
      }=0A=
      return result;=0A=
    });=0A=
=0A=
    return options.hash ? data : Object.toQueryString(data);=0A=
  }=0A=
};=0A=
=0A=
Form.Methods =3D {=0A=
  serialize: function(form, options) {=0A=
    return Form.serializeElements(Form.getElements(form), options);=0A=
  },=0A=
=0A=
  getElements: function(form) {=0A=
    return $A($(form).getElementsByTagName('*')).inject([],=0A=
      function(elements, child) {=0A=
        if (Form.Element.Serializers[child.tagName.toLowerCase()])=0A=
          elements.push(Element.extend(child));=0A=
        return elements;=0A=
      }=0A=
    );=0A=
  },=0A=
=0A=
  getInputs: function(form, typeName, name) {=0A=
    form =3D $(form);=0A=
    var inputs =3D form.getElementsByTagName('input');=0A=
=0A=
    if (!typeName && !name) return $A(inputs).map(Element.extend);=0A=
=0A=
    for (var i =3D 0, matchingInputs =3D [], length =3D inputs.length; i =
< length; i++) {=0A=
      var input =3D inputs[i];=0A=
      if ((typeName && input.type !=3D typeName) || (name && input.name =
!=3D name))=0A=
        continue;=0A=
      matchingInputs.push(Element.extend(input));=0A=
    }=0A=
=0A=
    return matchingInputs;=0A=
  },=0A=
=0A=
  disable: function(form) {=0A=
    form =3D $(form);=0A=
    Form.getElements(form).invoke('disable');=0A=
    return form;=0A=
  },=0A=
=0A=
  enable: function(form) {=0A=
    form =3D $(form);=0A=
    Form.getElements(form).invoke('enable');=0A=
    return form;=0A=
  },=0A=
=0A=
  findFirstElement: function(form) {=0A=
    var elements =3D $(form).getElements().findAll(function(element) {=0A=
      return 'hidden' !=3D element.type && !element.disabled;=0A=
    });=0A=
    var firstByIndex =3D elements.findAll(function(element) {=0A=
      return element.hasAttribute('tabIndex') && element.tabIndex >=3D 0;=0A=
    }).sortBy(function(element) { return element.tabIndex }).first();=0A=
=0A=
    return firstByIndex ? firstByIndex : elements.find(function(element) =
{=0A=
      return ['input', 'select', =
'textarea'].include(element.tagName.toLowerCase());=0A=
    });=0A=
  },=0A=
=0A=
  focusFirstElement: function(form) {=0A=
    form =3D $(form);=0A=
    form.findFirstElement().activate();=0A=
    return form;=0A=
  },=0A=
=0A=
  request: function(form, options) {=0A=
    form =3D $(form), options =3D Object.clone(options || { });=0A=
=0A=
    var params =3D options.parameters, action =3D =
form.readAttribute('action') || '';=0A=
    if (action.blank()) action =3D window.location.href;=0A=
    options.parameters =3D form.serialize(true);=0A=
=0A=
    if (params) {=0A=
      if (Object.isString(params)) params =3D params.toQueryParams();=0A=
      Object.extend(options.parameters, params);=0A=
    }=0A=
=0A=
    if (form.hasAttribute('method') && !options.method)=0A=
      options.method =3D form.method;=0A=
=0A=
    return new Ajax.Request(action, options);=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Form.Element =3D {=0A=
  focus: function(element) {=0A=
    $(element).focus();=0A=
    return element;=0A=
  },=0A=
=0A=
  select: function(element) {=0A=
    $(element).select();=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
Form.Element.Methods =3D {=0A=
  serialize: function(element) {=0A=
    element =3D $(element);=0A=
    if (!element.disabled && element.name) {=0A=
      var value =3D element.getValue();=0A=
      if (value !=3D undefined) {=0A=
        var pair =3D { };=0A=
        pair[element.name] =3D value;=0A=
        return Object.toQueryString(pair);=0A=
      }=0A=
    }=0A=
    return '';=0A=
  },=0A=
=0A=
  getValue: function(element) {=0A=
    element =3D $(element);=0A=
    var method =3D element.tagName.toLowerCase();=0A=
    return Form.Element.Serializers[method](element);=0A=
  },=0A=
=0A=
  setValue: function(element, value) {=0A=
    element =3D $(element);=0A=
    var method =3D element.tagName.toLowerCase();=0A=
    Form.Element.Serializers[method](element, value);=0A=
    return element;=0A=
  },=0A=
=0A=
  clear: function(element) {=0A=
    $(element).value =3D '';=0A=
    return element;=0A=
  },=0A=
=0A=
  present: function(element) {=0A=
    return $(element).value !=3D '';=0A=
  },=0A=
=0A=
  activate: function(element) {=0A=
    element =3D $(element);=0A=
    try {=0A=
      element.focus();=0A=
      if (element.select && (element.tagName.toLowerCase() !=3D 'input' =
||=0A=
          !['button', 'reset', 'submit'].include(element.type)))=0A=
        element.select();=0A=
    } catch (e) { }=0A=
    return element;=0A=
  },=0A=
=0A=
  disable: function(element) {=0A=
    element =3D $(element);=0A=
    element.disabled =3D true;=0A=
    return element;=0A=
  },=0A=
=0A=
  enable: function(element) {=0A=
    element =3D $(element);=0A=
    element.disabled =3D false;=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Field =3D Form.Element;=0A=
var $F =3D Form.Element.Methods.getValue;=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Form.Element.Serializers =3D {=0A=
  input: function(element, value) {=0A=
    switch (element.type.toLowerCase()) {=0A=
      case 'checkbox':=0A=
      case 'radio':=0A=
        return Form.Element.Serializers.inputSelector(element, value);=0A=
      default:=0A=
        return Form.Element.Serializers.textarea(element, value);=0A=
    }=0A=
  },=0A=
=0A=
  inputSelector: function(element, value) {=0A=
    if (Object.isUndefined(value)) return element.checked ? =
element.value : null;=0A=
    else element.checked =3D !!value;=0A=
  },=0A=
=0A=
  textarea: function(element, value) {=0A=
    if (Object.isUndefined(value)) return element.value;=0A=
    else element.value =3D value;=0A=
  },=0A=
=0A=
  select: function(element, value) {=0A=
    if (Object.isUndefined(value))=0A=
      return this[element.type =3D=3D 'select-one' ?=0A=
        'selectOne' : 'selectMany'](element);=0A=
    else {=0A=
      var opt, currentValue, single =3D !Object.isArray(value);=0A=
      for (var i =3D 0, length =3D element.length; i < length; i++) {=0A=
        opt =3D element.options[i];=0A=
        currentValue =3D this.optionValue(opt);=0A=
        if (single) {=0A=
          if (currentValue =3D=3D value) {=0A=
            opt.selected =3D true;=0A=
            return;=0A=
          }=0A=
        }=0A=
        else opt.selected =3D value.include(currentValue);=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  selectOne: function(element) {=0A=
    var index =3D element.selectedIndex;=0A=
    return index >=3D 0 ? this.optionValue(element.options[index]) : =
null;=0A=
  },=0A=
=0A=
  selectMany: function(element) {=0A=
    var values, length =3D element.length;=0A=
    if (!length) return null;=0A=
=0A=
    for (var i =3D 0, values =3D []; i < length; i++) {=0A=
      var opt =3D element.options[i];=0A=
      if (opt.selected) values.push(this.optionValue(opt));=0A=
    }=0A=
    return values;=0A=
  },=0A=
=0A=
  optionValue: function(opt) {=0A=
    // extend element because hasAttribute may not be native=0A=
    return Element.extend(opt).hasAttribute('value') ? opt.value : =
opt.text;=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Abstract.TimedObserver =3D Class.create(PeriodicalExecuter, {=0A=
  initialize: function($super, element, frequency, callback) {=0A=
    $super(callback, frequency);=0A=
    this.element   =3D $(element);=0A=
    this.lastValue =3D this.getValue();=0A=
  },=0A=
=0A=
  execute: function() {=0A=
    var value =3D this.getValue();=0A=
    if (Object.isString(this.lastValue) && Object.isString(value) ?=0A=
        this.lastValue !=3D value : String(this.lastValue) !=3D =
String(value)) {=0A=
      this.callback(this.element, value);=0A=
      this.lastValue =3D value;=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Form.Element.Observer =3D Class.create(Abstract.TimedObserver, {=0A=
  getValue: function() {=0A=
    return Form.Element.getValue(this.element);=0A=
  }=0A=
});=0A=
=0A=
Form.Observer =3D Class.create(Abstract.TimedObserver, {=0A=
  getValue: function() {=0A=
    return Form.serialize(this.element);=0A=
  }=0A=
});=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Abstract.EventObserver =3D Class.create({=0A=
  initialize: function(element, callback) {=0A=
    this.element  =3D $(element);=0A=
    this.callback =3D callback;=0A=
=0A=
    this.lastValue =3D this.getValue();=0A=
    if (this.element.tagName.toLowerCase() =3D=3D 'form')=0A=
      this.registerFormCallbacks();=0A=
    else=0A=
      this.registerCallback(this.element);=0A=
  },=0A=
=0A=
  onElementEvent: function() {=0A=
    var value =3D this.getValue();=0A=
    if (this.lastValue !=3D value) {=0A=
      this.callback(this.element, value);=0A=
      this.lastValue =3D value;=0A=
    }=0A=
  },=0A=
=0A=
  registerFormCallbacks: function() {=0A=
    Form.getElements(this.element).each(this.registerCallback, this);=0A=
  },=0A=
=0A=
  registerCallback: function(element) {=0A=
    if (element.type) {=0A=
      switch (element.type.toLowerCase()) {=0A=
        case 'checkbox':=0A=
        case 'radio':=0A=
          Event.observe(element, 'click', =
this.onElementEvent.bind(this));=0A=
          break;=0A=
        default:=0A=
          Event.observe(element, 'change', =
this.onElementEvent.bind(this));=0A=
          break;=0A=
      }=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Form.Element.EventObserver =3D Class.create(Abstract.EventObserver, {=0A=
  getValue: function() {=0A=
    return Form.Element.getValue(this.element);=0A=
  }=0A=
});=0A=
=0A=
Form.EventObserver =3D Class.create(Abstract.EventObserver, {=0A=
  getValue: function() {=0A=
    return Form.serialize(this.element);=0A=
  }=0A=
});=0A=
if (!window.Event) var Event =3D { };=0A=
=0A=
Object.extend(Event, {=0A=
  KEY_BACKSPACE: 8,=0A=
  KEY_TAB:       9,=0A=
  KEY_RETURN:   13,=0A=
  KEY_ESC:      27,=0A=
  KEY_LEFT:     37,=0A=
  KEY_UP:       38,=0A=
  KEY_RIGHT:    39,=0A=
  KEY_DOWN:     40,=0A=
  KEY_DELETE:   46,=0A=
  KEY_HOME:     36,=0A=
  KEY_END:      35,=0A=
  KEY_PAGEUP:   33,=0A=
  KEY_PAGEDOWN: 34,=0A=
  KEY_INSERT:   45,=0A=
=0A=
  cache: { },=0A=
=0A=
  relatedTarget: function(event) {=0A=
    var element;=0A=
    switch(event.type) {=0A=
      case 'mouseover': element =3D event.fromElement; break;=0A=
      case 'mouseout':  element =3D event.toElement;   break;=0A=
      default: return null;=0A=
    }=0A=
    return Element.extend(element);=0A=
  }=0A=
});=0A=
=0A=
Event.Methods =3D (function() {=0A=
  var isButton;=0A=
=0A=
  if (Prototype.Browser.IE) {=0A=
    var buttonMap =3D { 0: 1, 1: 4, 2: 2 };=0A=
    isButton =3D function(event, code) {=0A=
      return event.button =3D=3D buttonMap[code];=0A=
    };=0A=
=0A=
  } else if (Prototype.Browser.WebKit) {=0A=
    isButton =3D function(event, code) {=0A=
      switch (code) {=0A=
        case 0: return event.which =3D=3D 1 && !event.metaKey;=0A=
        case 1: return event.which =3D=3D 1 && event.metaKey;=0A=
        default: return false;=0A=
      }=0A=
    };=0A=
=0A=
  } else {=0A=
    isButton =3D function(event, code) {=0A=
      return event.which ? (event.which =3D=3D=3D code + 1) : =
(event.button =3D=3D=3D code);=0A=
    };=0A=
  }=0A=
=0A=
  return {=0A=
    isLeftClick:   function(event) { return isButton(event, 0) },=0A=
    isMiddleClick: function(event) { return isButton(event, 1) },=0A=
    isRightClick:  function(event) { return isButton(event, 2) },=0A=
=0A=
    element: function(event) {=0A=
      event =3D Event.extend(event);=0A=
=0A=
      var node          =3D event.target,=0A=
          type          =3D event.type,=0A=
          currentTarget =3D event.currentTarget;=0A=
=0A=
      if (currentTarget && currentTarget.tagName) {=0A=
        // Firefox screws up the "click" event when moving between radio =
buttons=0A=
        // via arrow keys. It also screws up the "load" and "error" =
events on images,=0A=
        // reporting the document as the target instead of the original =
image.=0A=
        if (type =3D=3D=3D 'load' || type =3D=3D=3D 'error' ||=0A=
          (type =3D=3D=3D 'click' && currentTarget.tagName.toLowerCase() =
=3D=3D=3D 'input'=0A=
            && currentTarget.type =3D=3D=3D 'radio'))=0A=
              node =3D currentTarget;=0A=
      }=0A=
      if (node.nodeType =3D=3D Node.TEXT_NODE) node =3D node.parentNode;=0A=
      return Element.extend(node);=0A=
    },=0A=
=0A=
    findElement: function(event, expression) {=0A=
      var element =3D Event.element(event);=0A=
      if (!expression) return element;=0A=
      var elements =3D [element].concat(element.ancestors());=0A=
      return Selector.findElement(elements, expression, 0);=0A=
    },=0A=
=0A=
    pointer: function(event) {=0A=
      var docElement =3D document.documentElement,=0A=
      body =3D document.body || { scrollLeft: 0, scrollTop: 0 };=0A=
      return {=0A=
        x: event.pageX || (event.clientX +=0A=
          (docElement.scrollLeft || body.scrollLeft) -=0A=
          (docElement.clientLeft || 0)),=0A=
        y: event.pageY || (event.clientY +=0A=
          (docElement.scrollTop || body.scrollTop) -=0A=
          (docElement.clientTop || 0))=0A=
      };=0A=
    },=0A=
=0A=
    pointerX: function(event) { return Event.pointer(event).x },=0A=
    pointerY: function(event) { return Event.pointer(event).y },=0A=
=0A=
    stop: function(event) {=0A=
      Event.extend(event);=0A=
      event.preventDefault();=0A=
      event.stopPropagation();=0A=
      event.stopped =3D true;=0A=
    }=0A=
  };=0A=
})();=0A=
=0A=
Event.extend =3D (function() {=0A=
  var methods =3D Object.keys(Event.Methods).inject({ }, function(m, =
name) {=0A=
    m[name] =3D Event.Methods[name].methodize();=0A=
    return m;=0A=
  });=0A=
=0A=
  if (Prototype.Browser.IE) {=0A=
    Object.extend(methods, {=0A=
      stopPropagation: function() { this.cancelBubble =3D true },=0A=
      preventDefault:  function() { this.returnValue =3D false },=0A=
      inspect: function() { return "[object Event]" }=0A=
    });=0A=
=0A=
    return function(event) {=0A=
      if (!event) return false;=0A=
      if (event._extendedByPrototype) return event;=0A=
=0A=
      event._extendedByPrototype =3D Prototype.emptyFunction;=0A=
      var pointer =3D Event.pointer(event);=0A=
      Object.extend(event, {=0A=
        target: event.srcElement,=0A=
        relatedTarget: Event.relatedTarget(event),=0A=
        pageX:  pointer.x,=0A=
        pageY:  pointer.y=0A=
      });=0A=
      return Object.extend(event, methods);=0A=
    };=0A=
=0A=
  } else {=0A=
    Event.prototype =3D Event.prototype || =
document.createEvent("HTMLEvents")['__proto__'];=0A=
    Object.extend(Event.prototype, methods);=0A=
    return Prototype.K;=0A=
  }=0A=
})();=0A=
=0A=
Object.extend(Event, (function() {=0A=
  var cache =3D Event.cache;=0A=
=0A=
  function getEventID(element) {=0A=
    if (element._prototypeEventID) return element._prototypeEventID[0];=0A=
    arguments.callee.id =3D arguments.callee.id || 1;=0A=
    return element._prototypeEventID =3D [++arguments.callee.id];=0A=
  }=0A=
=0A=
  function getDOMEventName(eventName) {=0A=
    if (eventName && eventName.include(':')) return "dataavailable";=0A=
    return eventName;=0A=
  }=0A=
=0A=
  function getCacheForID(id) {=0A=
    return cache[id] =3D cache[id] || { };=0A=
  }=0A=
=0A=
  function getWrappersForEventName(id, eventName) {=0A=
    var c =3D getCacheForID(id);=0A=
    return c[eventName] =3D c[eventName] || [];=0A=
  }=0A=
=0A=
  function createWrapper(element, eventName, handler) {=0A=
    var id =3D getEventID(element);=0A=
    var c =3D getWrappersForEventName(id, eventName);=0A=
    if (c.pluck("handler").include(handler)) return false;=0A=
=0A=
    var wrapper =3D function(event) {=0A=
      if (!Event || !Event.extend ||=0A=
        (event.eventName && event.eventName !=3D eventName))=0A=
          return false;=0A=
=0A=
      Event.extend(event);=0A=
      handler.call(element, event);=0A=
    };=0A=
=0A=
    wrapper.handler =3D handler;=0A=
    c.push(wrapper);=0A=
    return wrapper;=0A=
  }=0A=
=0A=
  function findWrapper(id, eventName, handler) {=0A=
    var c =3D getWrappersForEventName(id, eventName);=0A=
    return c.find(function(wrapper) { return wrapper.handler =3D=3D =
handler });=0A=
  }=0A=
=0A=
  function destroyWrapper(id, eventName, handler) {=0A=
    var c =3D getCacheForID(id);=0A=
    if (!c[eventName]) return false;=0A=
    c[eventName] =3D c[eventName].without(findWrapper(id, eventName, =
handler));=0A=
  }=0A=
=0A=
  function destroyCache() {=0A=
    for (var id in cache)=0A=
      for (var eventName in cache[id])=0A=
        cache[id][eventName] =3D null;=0A=
  }=0A=
=0A=
=0A=
  // Internet Explorer needs to remove event handlers on page unload=0A=
  // in order to avoid memory leaks.=0A=
  if (window.attachEvent) {=0A=
    window.attachEvent("onunload", destroyCache);=0A=
  }=0A=
=0A=
  // Safari has a dummy event handler on page unload so that it won't=0A=
  // use its bfcache. Safari <=3D 3.1 has an issue with restoring the =
"document"=0A=
  // object when page is returned to via the back button using its =
bfcache.=0A=
  if (Prototype.Browser.WebKit) {=0A=
    window.addEventListener('unload', Prototype.emptyFunction, false);=0A=
  }=0A=
=0A=
  return {=0A=
    observe: function(element, eventName, handler) {=0A=
      element =3D $(element);=0A=
      var name =3D getDOMEventName(eventName);=0A=
=0A=
      var wrapper =3D createWrapper(element, eventName, handler);=0A=
      if (!wrapper) return element;=0A=
=0A=
      if (element.addEventListener) {=0A=
        element.addEventListener(name, wrapper, false);=0A=
      } else {=0A=
        element.attachEvent("on" + name, wrapper);=0A=
      }=0A=
=0A=
      return element;=0A=
    },=0A=
=0A=
    stopObserving: function(element, eventName, handler) {=0A=
      element =3D $(element);=0A=
      var id =3D getEventID(element), name =3D =
getDOMEventName(eventName);=0A=
=0A=
      if (!handler && eventName) {=0A=
        getWrappersForEventName(id, eventName).each(function(wrapper) {=0A=
          element.stopObserving(eventName, wrapper.handler);=0A=
        });=0A=
        return element;=0A=
=0A=
      } else if (!eventName) {=0A=
        Object.keys(getCacheForID(id)).each(function(eventName) {=0A=
          element.stopObserving(eventName);=0A=
        });=0A=
        return element;=0A=
      }=0A=
=0A=
      var wrapper =3D findWrapper(id, eventName, handler);=0A=
      if (!wrapper) return element;=0A=
=0A=
      if (element.removeEventListener) {=0A=
        element.removeEventListener(name, wrapper, false);=0A=
      } else {=0A=
        element.detachEvent("on" + name, wrapper);=0A=
      }=0A=
=0A=
      destroyWrapper(id, eventName, handler);=0A=
=0A=
      return element;=0A=
    },=0A=
=0A=
    fire: function(element, eventName, memo) {=0A=
      element =3D $(element);=0A=
      if (element =3D=3D document && document.createEvent && =
!element.dispatchEvent)=0A=
        element =3D document.documentElement;=0A=
=0A=
      var event;=0A=
      if (document.createEvent) {=0A=
        event =3D document.createEvent("HTMLEvents");=0A=
        event.initEvent("dataavailable", true, true);=0A=
      } else {=0A=
        event =3D document.createEventObject();=0A=
        event.eventType =3D "ondataavailable";=0A=
      }=0A=
=0A=
      event.eventName =3D eventName;=0A=
      event.memo =3D memo || { };=0A=
=0A=
      if (document.createEvent) {=0A=
        element.dispatchEvent(event);=0A=
      } else {=0A=
        element.fireEvent(event.eventType, event);=0A=
      }=0A=
=0A=
      return Event.extend(event);=0A=
    }=0A=
  };=0A=
})());=0A=
=0A=
Object.extend(Event, Event.Methods);=0A=
=0A=
Element.addMethods({=0A=
  fire:          Event.fire,=0A=
  observe:       Event.observe,=0A=
  stopObserving: Event.stopObserving=0A=
});=0A=
=0A=
Object.extend(document, {=0A=
  fire:          Element.Methods.fire.methodize(),=0A=
  observe:       Element.Methods.observe.methodize(),=0A=
  stopObserving: Element.Methods.stopObserving.methodize(),=0A=
  loaded:        false=0A=
});=0A=
=0A=
(function() {=0A=
  /* Support for the DOMContentLoaded event is based on work by Dan Webb,=0A=
     Matthias Miller, Dean Edwards and John Resig. */=0A=
=0A=
  var timer;=0A=
=0A=
  function fireContentLoadedEvent() {=0A=
    if (document.loaded) return;=0A=
    if (timer) window.clearInterval(timer);=0A=
    document.fire("dom:loaded");=0A=
    document.loaded =3D true;=0A=
  }=0A=
=0A=
  if (document.addEventListener) {=0A=
    if (Prototype.Browser.WebKit) {=0A=
      timer =3D window.setInterval(function() {=0A=
        if (/loaded|complete/.test(document.readyState))=0A=
          fireContentLoadedEvent();=0A=
      }, 0);=0A=
=0A=
      Event.observe(window, "load", fireContentLoadedEvent);=0A=
=0A=
    } else {=0A=
      document.addEventListener("DOMContentLoaded",=0A=
        fireContentLoadedEvent, false);=0A=
    }=0A=
=0A=
  } else {=0A=
    document.write("<script id=3D__onDOMContentLoaded defer =
src=3D//:><\/script>");=0A=
    $("__onDOMContentLoaded").onreadystatechange =3D function() {=0A=
      if (this.readyState =3D=3D "complete") {=0A=
        this.onreadystatechange =3D null;=0A=
        fireContentLoadedEvent();=0A=
      }=0A=
    };=0A=
  }=0A=
})();=0A=
/*------------------------------- DEPRECATED =
-------------------------------*/=0A=
=0A=
Hash.toQueryString =3D Object.toQueryString;=0A=
=0A=
var Toggle =3D { display: Element.toggle };=0A=
=0A=
Element.Methods.childOf =3D Element.Methods.descendantOf;=0A=
=0A=
var Insertion =3D {=0A=
  Before: function(element, content) {=0A=
    return Element.insert(element, {before:content});=0A=
  },=0A=
=0A=
  Top: function(element, content) {=0A=
    return Element.insert(element, {top:content});=0A=
  },=0A=
=0A=
  Bottom: function(element, content) {=0A=
    return Element.insert(element, {bottom:content});=0A=
  },=0A=
=0A=
  After: function(element, content) {=0A=
    return Element.insert(element, {after:content});=0A=
  }=0A=
};=0A=
=0A=
var $continue =3D new Error('"throw $continue" is deprecated, use =
"return" instead');=0A=
=0A=
// This should be moved to script.aculo.us; notice the deprecated methods=0A=
// further below, that map to the newer Element methods.=0A=
var Position =3D {=0A=
  // set to true if needed, warning: firefox performance problems=0A=
  // NOT neeeded for page scrolling, only if draggable contained in=0A=
  // scrollable elements=0A=
  includeScrollOffsets: false,=0A=
=0A=
  // must be called before calling withinIncludingScrolloffset, every =
time the=0A=
  // page is scrolled=0A=
  prepare: function() {=0A=
    this.deltaX =3D  window.pageXOffset=0A=
                || document.documentElement.scrollLeft=0A=
                || document.body.scrollLeft=0A=
                || 0;=0A=
    this.deltaY =3D  window.pageYOffset=0A=
                || document.documentElement.scrollTop=0A=
                || document.body.scrollTop=0A=
                || 0;=0A=
  },=0A=
=0A=
  // caches x/y coordinate pair to use with overlap=0A=
  within: function(element, x, y) {=0A=
    if (this.includeScrollOffsets)=0A=
      return this.withinIncludingScrolloffsets(element, x, y);=0A=
    this.xcomp =3D x;=0A=
    this.ycomp =3D y;=0A=
    this.offset =3D Element.cumulativeOffset(element);=0A=
=0A=
    return (y >=3D this.offset[1] &&=0A=
            y <  this.offset[1] + element.offsetHeight &&=0A=
            x >=3D this.offset[0] &&=0A=
            x <  this.offset[0] + element.offsetWidth);=0A=
  },=0A=
=0A=
  withinIncludingScrolloffsets: function(element, x, y) {=0A=
    var offsetcache =3D Element.cumulativeScrollOffset(element);=0A=
=0A=
    this.xcomp =3D x + offsetcache[0] - this.deltaX;=0A=
    this.ycomp =3D y + offsetcache[1] - this.deltaY;=0A=
    this.offset =3D Element.cumulativeOffset(element);=0A=
=0A=
    return (this.ycomp >=3D this.offset[1] &&=0A=
            this.ycomp <  this.offset[1] + element.offsetHeight &&=0A=
            this.xcomp >=3D this.offset[0] &&=0A=
            this.xcomp <  this.offset[0] + element.offsetWidth);=0A=
  },=0A=
=0A=
  // within must be called directly before=0A=
  overlap: function(mode, element) {=0A=
    if (!mode) return 0;=0A=
    if (mode =3D=3D 'vertical')=0A=
      return ((this.offset[1] + element.offsetHeight) - this.ycomp) /=0A=
        element.offsetHeight;=0A=
    if (mode =3D=3D 'horizontal')=0A=
      return ((this.offset[0] + element.offsetWidth) - this.xcomp) /=0A=
        element.offsetWidth;=0A=
  },=0A=
=0A=
  // Deprecation layer -- use newer Element methods now (1.5.2).=0A=
=0A=
  cumulativeOffset: Element.Methods.cumulativeOffset,=0A=
=0A=
  positionedOffset: Element.Methods.positionedOffset,=0A=
=0A=
  absolutize: function(element) {=0A=
    Position.prepare();=0A=
    return Element.absolutize(element);=0A=
  },=0A=
=0A=
  relativize: function(element) {=0A=
    Position.prepare();=0A=
    return Element.relativize(element);=0A=
  },=0A=
=0A=
  realOffset: Element.Methods.cumulativeScrollOffset,=0A=
=0A=
  offsetParent: Element.Methods.getOffsetParent,=0A=
=0A=
  page: Element.Methods.viewportOffset,=0A=
=0A=
  clone: function(source, target, options) {=0A=
    options =3D options || { };=0A=
    return Element.clonePosition(target, source, options);=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
if (!document.getElementsByClassName) document.getElementsByClassName =
=3D function(instanceMethods){=0A=
  function iter(name) {=0A=
    return name.blank() ? null : "[contains(concat(' ', @class, ' '), ' =
" + name + " ')]";=0A=
  }=0A=
=0A=
  instanceMethods.getElementsByClassName =3D =
Prototype.BrowserFeatures.XPath ?=0A=
  function(element, className) {=0A=
    className =3D className.toString().strip();=0A=
    var cond =3D /\s/.test(className) ? $w(className).map(iter).join('') =
: iter(className);=0A=
    return cond ? document._getElementsByXPath('.//*' + cond, element) : =
[];=0A=
  } : function(element, className) {=0A=
    className =3D className.toString().strip();=0A=
    var elements =3D [], classNames =3D (/\s/.test(className) ? =
$w(className) : null);=0A=
    if (!classNames && !className) return elements;=0A=
=0A=
    var nodes =3D $(element).getElementsByTagName('*');=0A=
    className =3D ' ' + className + ' ';=0A=
=0A=
    for (var i =3D 0, child, cn; child =3D nodes[i]; i++) {=0A=
      if (child.className && (cn =3D ' ' + child.className + ' ') && =
(cn.include(className) ||=0A=
          (classNames && classNames.all(function(name) {=0A=
            return !name.toString().blank() && cn.include(' ' + name + ' =
');=0A=
          }))))=0A=
        elements.push(Element.extend(child));=0A=
    }=0A=
    return elements;=0A=
  };=0A=
=0A=
  return function(className, parentElement) {=0A=
    return $(parentElement || =
document.body).getElementsByClassName(className);=0A=
  };=0A=
}(Element.Methods);=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.ClassNames =3D Class.create();=0A=
Element.ClassNames.prototype =3D {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
  },=0A=
=0A=
  _each: function(iterator) {=0A=
    this.element.className.split(/\s+/).select(function(name) {=0A=
      return name.length > 0;=0A=
    })._each(iterator);=0A=
  },=0A=
=0A=
  set: function(className) {=0A=
    this.element.className =3D className;=0A=
  },=0A=
=0A=
  add: function(classNameToAdd) {=0A=
    if (this.include(classNameToAdd)) return;=0A=
    this.set($A(this).concat(classNameToAdd).join(' '));=0A=
  },=0A=
=0A=
  remove: function(classNameToRemove) {=0A=
    if (!this.include(classNameToRemove)) return;=0A=
    this.set($A(this).without(classNameToRemove).join(' '));=0A=
  },=0A=
=0A=
  toString: function() {=0A=
    return $A(this).join(' ');=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Element.ClassNames.prototype, Enumerable);=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.addMethods();
------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/javascripts/effects.js?1323190114

// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, =
http://mir.aculo.us)=0A=
// Contributors:=0A=
//  Justin Palmer (http://encytemedia.com/)=0A=
//  Mark Pilgrim (http://diveintomark.org/)=0A=
//  Martin Bialasinki=0A=
//=0A=
// script.aculo.us is freely distributable under the terms of an =
MIT-style license.=0A=
// For details, see the script.aculo.us web site: http://script.aculo.us/=0A=
=0A=
// converts rgb() and #xxx to #xxxxxx format,=0A=
// returns self (or first argument) if not convertable=0A=
String.prototype.parseColor =3D function() {=0A=
  var color =3D '#';=0A=
  if (this.slice(0,4) =3D=3D 'rgb(') {=0A=
    var cols =3D this.slice(4,this.length-1).split(',');=0A=
    var i=3D0; do { color +=3D parseInt(cols[i]).toColorPart() } while =
(++i<3);=0A=
  } else {=0A=
    if (this.slice(0,1) =3D=3D '#') {=0A=
      if (this.length=3D=3D4) for(var i=3D1;i<4;i++) color +=3D =
(this.charAt(i) + this.charAt(i)).toLowerCase();=0A=
      if (this.length=3D=3D7) color =3D this.toLowerCase();=0A=
    }=0A=
  }=0A=
  return (color.length=3D=3D7 ? color : (arguments[0] || this));=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.collectTextNodes =3D function(element) {=0A=
  return $A($(element).childNodes).collect( function(node) {=0A=
    return (node.nodeType=3D=3D3 ? node.nodeValue :=0A=
      (node.hasChildNodes() ? Element.collectTextNodes(node) : ''));=0A=
  }).flatten().join('');=0A=
};=0A=
=0A=
Element.collectTextNodesIgnoreClass =3D function(element, className) {=0A=
  return $A($(element).childNodes).collect( function(node) {=0A=
    return (node.nodeType=3D=3D3 ? node.nodeValue :=0A=
      ((node.hasChildNodes() && !Element.hasClassName(node,className)) ?=0A=
        Element.collectTextNodesIgnoreClass(node, className) : ''));=0A=
  }).flatten().join('');=0A=
};=0A=
=0A=
Element.setContentZoom =3D function(element, percent) {=0A=
  element =3D $(element);=0A=
  element.setStyle({fontSize: (percent/100) + 'em'});=0A=
  if (Prototype.Browser.WebKit) window.scrollBy(0,0);=0A=
  return element;=0A=
};=0A=
=0A=
Element.getInlineOpacity =3D function(element){=0A=
  return $(element).style.opacity || '';=0A=
};=0A=
=0A=
Element.forceRerendering =3D function(element) {=0A=
  try {=0A=
    element =3D $(element);=0A=
    var n =3D document.createTextNode(' ');=0A=
    element.appendChild(n);=0A=
    element.removeChild(n);=0A=
  } catch(e) { }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Effect =3D {=0A=
  _elementDoesNotExistError: {=0A=
    name: 'ElementDoesNotExistError',=0A=
    message: 'The specified DOM element does not exist, but is required =
for this effect to operate'=0A=
  },=0A=
  Transitions: {=0A=
    linear: Prototype.K,=0A=
    sinoidal: function(pos) {=0A=
      return (-Math.cos(pos*Math.PI)/2) + .5;=0A=
    },=0A=
    reverse: function(pos) {=0A=
      return 1-pos;=0A=
    },=0A=
    flicker: function(pos) {=0A=
      var pos =3D ((-Math.cos(pos*Math.PI)/4) + .75) + Math.random()/4;=0A=
      return pos > 1 ? 1 : pos;=0A=
    },=0A=
    wobble: function(pos) {=0A=
      return (-Math.cos(pos*Math.PI*(9*pos))/2) + .5;=0A=
    },=0A=
    pulse: function(pos, pulses) {=0A=
      return (-Math.cos((pos*((pulses||5)-.5)*2)*Math.PI)/2) + .5;=0A=
    },=0A=
    spring: function(pos) {=0A=
      return 1 - (Math.cos(pos * 4.5 * Math.PI) * Math.exp(-pos * 6));=0A=
    },=0A=
    none: function(pos) {=0A=
      return 0;=0A=
    },=0A=
    full: function(pos) {=0A=
      return 1;=0A=
    }=0A=
  },=0A=
  DefaultOptions: {=0A=
    duration:   1.0,   // seconds=0A=
    fps:        100,   // 100=3D assume 66fps max.=0A=
    sync:       false, // true for combining=0A=
    from:       0.0,=0A=
    to:         1.0,=0A=
    delay:      0.0,=0A=
    queue:      'parallel'=0A=
  },=0A=
  tagifyText: function(element) {=0A=
    var tagifyStyle =3D 'position:relative';=0A=
    if (Prototype.Browser.IE) tagifyStyle +=3D ';zoom:1';=0A=
=0A=
    element =3D $(element);=0A=
    $A(element.childNodes).each( function(child) {=0A=
      if (child.nodeType=3D=3D3) {=0A=
        child.nodeValue.toArray().each( function(character) {=0A=
          element.insertBefore(=0A=
            new Element('span', {style: tagifyStyle}).update(=0A=
              character =3D=3D ' ' ? String.fromCharCode(160) : =
character),=0A=
              child);=0A=
        });=0A=
        Element.remove(child);=0A=
      }=0A=
    });=0A=
  },=0A=
  multiple: function(element, effect) {=0A=
    var elements;=0A=
    if (((typeof element =3D=3D 'object') ||=0A=
        Object.isFunction(element)) &&=0A=
       (element.length))=0A=
      elements =3D element;=0A=
    else=0A=
      elements =3D $(element).childNodes;=0A=
=0A=
    var options =3D Object.extend({=0A=
      speed: 0.1,=0A=
      delay: 0.0=0A=
    }, arguments[2] || { });=0A=
    var masterDelay =3D options.delay;=0A=
=0A=
    $A(elements).each( function(element, index) {=0A=
      new effect(element, Object.extend(options, { delay: index * =
options.speed + masterDelay }));=0A=
    });=0A=
  },=0A=
  PAIRS: {=0A=
    'slide':  ['SlideDown','SlideUp'],=0A=
    'blind':  ['BlindDown','BlindUp'],=0A=
    'appear': ['Appear','Fade']=0A=
  },=0A=
  toggle: function(element, effect) {=0A=
    element =3D $(element);=0A=
    effect =3D (effect || 'appear').toLowerCase();=0A=
    var options =3D Object.extend({=0A=
      queue: { position:'end', scope:(element.id || 'global'), limit: 1 }=0A=
    }, arguments[2] || { });=0A=
    Effect[element.visible() ?=0A=
      Effect.PAIRS[effect][1] : Effect.PAIRS[effect][0]](element, =
options);=0A=
  }=0A=
};=0A=
=0A=
Effect.DefaultOptions.transition =3D Effect.Transitions.sinoidal;=0A=
=0A=
/* ------------- core effects ------------- */=0A=
=0A=
Effect.ScopedQueue =3D Class.create(Enumerable, {=0A=
  initialize: function() {=0A=
    this.effects  =3D [];=0A=
    this.interval =3D null;=0A=
  },=0A=
  _each: function(iterator) {=0A=
    this.effects._each(iterator);=0A=
  },=0A=
  add: function(effect) {=0A=
    var timestamp =3D new Date().getTime();=0A=
=0A=
    var position =3D Object.isString(effect.options.queue) ?=0A=
      effect.options.queue : effect.options.queue.position;=0A=
=0A=
    switch(position) {=0A=
      case 'front':=0A=
        // move unstarted effects after this effect=0A=
        this.effects.findAll(function(e){ return e.state=3D=3D'idle' =
}).each( function(e) {=0A=
            e.startOn  +=3D effect.finishOn;=0A=
            e.finishOn +=3D effect.finishOn;=0A=
          });=0A=
        break;=0A=
      case 'with-last':=0A=
        timestamp =3D this.effects.pluck('startOn').max() || timestamp;=0A=
        break;=0A=
      case 'end':=0A=
        // start effect after last queued effect has finished=0A=
        timestamp =3D this.effects.pluck('finishOn').max() || timestamp;=0A=
        break;=0A=
    }=0A=
=0A=
    effect.startOn  +=3D timestamp;=0A=
    effect.finishOn +=3D timestamp;=0A=
=0A=
    if (!effect.options.queue.limit || (this.effects.length < =
effect.options.queue.limit))=0A=
      this.effects.push(effect);=0A=
=0A=
    if (!this.interval)=0A=
      this.interval =3D setInterval(this.loop.bind(this), 15);=0A=
  },=0A=
  remove: function(effect) {=0A=
    this.effects =3D this.effects.reject(function(e) { return =
e=3D=3Deffect });=0A=
    if (this.effects.length =3D=3D 0) {=0A=
      clearInterval(this.interval);=0A=
      this.interval =3D null;=0A=
    }=0A=
  },=0A=
  loop: function() {=0A=
    var timePos =3D new Date().getTime();=0A=
    for(var i=3D0, len=3Dthis.effects.length;i<len;i++)=0A=
      this.effects[i] && this.effects[i].loop(timePos);=0A=
  }=0A=
});=0A=
=0A=
Effect.Queues =3D {=0A=
  instances: $H(),=0A=
  get: function(queueName) {=0A=
    if (!Object.isString(queueName)) return queueName;=0A=
=0A=
    return this.instances.get(queueName) ||=0A=
      this.instances.set(queueName, new Effect.ScopedQueue());=0A=
  }=0A=
};=0A=
Effect.Queue =3D Effect.Queues.get('global');=0A=
=0A=
Effect.Base =3D Class.create({=0A=
  position: null,=0A=
  start: function(options) {=0A=
    function codeForEvent(options,eventName){=0A=
      return (=0A=
        (options[eventName+'Internal'] ? =
'this.options.'+eventName+'Internal(this);' : '') +=0A=
        (options[eventName] ? 'this.options.'+eventName+'(this);' : '')=0A=
      );=0A=
    }=0A=
    if (options && options.transition =3D=3D=3D false) =
options.transition =3D Effect.Transitions.linear;=0A=
    this.options      =3D Object.extend(Object.extend({ =
},Effect.DefaultOptions), options || { });=0A=
    this.currentFrame =3D 0;=0A=
    this.state        =3D 'idle';=0A=
    this.startOn      =3D this.options.delay*1000;=0A=
    this.finishOn     =3D this.startOn+(this.options.duration*1000);=0A=
    this.fromToDelta  =3D this.options.to-this.options.from;=0A=
    this.totalTime    =3D this.finishOn-this.startOn;=0A=
    this.totalFrames  =3D this.options.fps*this.options.duration;=0A=
=0A=
    this.render =3D (function() {=0A=
      function dispatch(effect, eventName) {=0A=
        if (effect.options[eventName + 'Internal'])=0A=
          effect.options[eventName + 'Internal'](effect);=0A=
        if (effect.options[eventName])=0A=
          effect.options[eventName](effect);=0A=
      }=0A=
=0A=
      return function(pos) {=0A=
        if (this.state =3D=3D=3D "idle") {=0A=
          this.state =3D "running";=0A=
          dispatch(this, 'beforeSetup');=0A=
          if (this.setup) this.setup();=0A=
          dispatch(this, 'afterSetup');=0A=
        }=0A=
        if (this.state =3D=3D=3D "running") {=0A=
          pos =3D (this.options.transition(pos) * this.fromToDelta) + =
this.options.from;=0A=
          this.position =3D pos;=0A=
          dispatch(this, 'beforeUpdate');=0A=
          if (this.update) this.update(pos);=0A=
          dispatch(this, 'afterUpdate');=0A=
        }=0A=
      };=0A=
    })();=0A=
=0A=
    this.event('beforeStart');=0A=
    if (!this.options.sync)=0A=
      Effect.Queues.get(Object.isString(this.options.queue) ?=0A=
        'global' : this.options.queue.scope).add(this);=0A=
  },=0A=
  loop: function(timePos) {=0A=
    if (timePos >=3D this.startOn) {=0A=
      if (timePos >=3D this.finishOn) {=0A=
        this.render(1.0);=0A=
        this.cancel();=0A=
        this.event('beforeFinish');=0A=
        if (this.finish) this.finish();=0A=
        this.event('afterFinish');=0A=
        return;=0A=
      }=0A=
      var pos   =3D (timePos - this.startOn) / this.totalTime,=0A=
          frame =3D (pos * this.totalFrames).round();=0A=
      if (frame > this.currentFrame) {=0A=
        this.render(pos);=0A=
        this.currentFrame =3D frame;=0A=
      }=0A=
    }=0A=
  },=0A=
  cancel: function() {=0A=
    if (!this.options.sync)=0A=
      Effect.Queues.get(Object.isString(this.options.queue) ?=0A=
        'global' : this.options.queue.scope).remove(this);=0A=
    this.state =3D 'finished';=0A=
  },=0A=
  event: function(eventName) {=0A=
    if (this.options[eventName + 'Internal']) this.options[eventName + =
'Internal'](this);=0A=
    if (this.options[eventName]) this.options[eventName](this);=0A=
  },=0A=
  inspect: function() {=0A=
    var data =3D $H();=0A=
    for(property in this)=0A=
      if (!Object.isFunction(this[property])) data.set(property, =
this[property]);=0A=
    return '#<Effect:' + data.inspect() + ',options:' + =
$H(this.options).inspect() + '>';=0A=
  }=0A=
});=0A=
=0A=
Effect.Parallel =3D Class.create(Effect.Base, {=0A=
  initialize: function(effects) {=0A=
    this.effects =3D effects || [];=0A=
    this.start(arguments[1]);=0A=
  },=0A=
  update: function(position) {=0A=
    this.effects.invoke('render', position);=0A=
  },=0A=
  finish: function(position) {=0A=
    this.effects.each( function(effect) {=0A=
      effect.render(1.0);=0A=
      effect.cancel();=0A=
      effect.event('beforeFinish');=0A=
      if (effect.finish) effect.finish(position);=0A=
      effect.event('afterFinish');=0A=
    });=0A=
  }=0A=
});=0A=
=0A=
Effect.Tween =3D Class.create(Effect.Base, {=0A=
  initialize: function(object, from, to) {=0A=
    object =3D Object.isString(object) ? $(object) : object;=0A=
    var args =3D $A(arguments), method =3D args.last(),=0A=
      options =3D args.length =3D=3D 5 ? args[3] : null;=0A=
    this.method =3D Object.isFunction(method) ? method.bind(object) :=0A=
      Object.isFunction(object[method]) ? object[method].bind(object) :=0A=
      function(value) { object[method] =3D value };=0A=
    this.start(Object.extend({ from: from, to: to }, options || { }));=0A=
  },=0A=
  update: function(position) {=0A=
    this.method(position);=0A=
  }=0A=
});=0A=
=0A=
Effect.Event =3D Class.create(Effect.Base, {=0A=
  initialize: function() {=0A=
    this.start(Object.extend({ duration: 0 }, arguments[0] || { }));=0A=
  },=0A=
  update: Prototype.emptyFunction=0A=
});=0A=
=0A=
Effect.Opacity =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    // make this work on IE on elements without 'layout'=0A=
    if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))=0A=
      this.element.setStyle({zoom: 1});=0A=
    var options =3D Object.extend({=0A=
      from: this.element.getOpacity() || 0.0,=0A=
      to:   1.0=0A=
    }, arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setOpacity(position);=0A=
  }=0A=
});=0A=
=0A=
Effect.Move =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      x:    0,=0A=
      y:    0,=0A=
      mode: 'relative'=0A=
    }, arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    this.element.makePositioned();=0A=
    this.originalLeft =3D parseFloat(this.element.getStyle('left') || =
'0');=0A=
    this.originalTop  =3D parseFloat(this.element.getStyle('top')  || =
'0');=0A=
    if (this.options.mode =3D=3D 'absolute') {=0A=
      this.options.x =3D this.options.x - this.originalLeft;=0A=
      this.options.y =3D this.options.y - this.originalTop;=0A=
    }=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setStyle({=0A=
      left: (this.options.x  * position + this.originalLeft).round() + =
'px',=0A=
      top:  (this.options.y  * position + this.originalTop).round()  + =
'px'=0A=
    });=0A=
  }=0A=
});=0A=
=0A=
// for backwards compatibility=0A=
Effect.MoveBy =3D function(element, toTop, toLeft) {=0A=
  return new Effect.Move(element,=0A=
    Object.extend({ x: toLeft, y: toTop }, arguments[3] || { }));=0A=
};=0A=
=0A=
Effect.Scale =3D Class.create(Effect.Base, {=0A=
  initialize: function(element, percent) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      scaleX: true,=0A=
      scaleY: true,=0A=
      scaleContent: true,=0A=
      scaleFromCenter: false,=0A=
      scaleMode: 'box',        // 'box' or 'contents' or { } with =
provided values=0A=
      scaleFrom: 100.0,=0A=
      scaleTo:   percent=0A=
    }, arguments[2] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    this.restoreAfterFinish =3D this.options.restoreAfterFinish || false;=0A=
    this.elementPositioning =3D this.element.getStyle('position');=0A=
=0A=
    this.originalStyle =3D { };=0A=
    ['top','left','width','height','fontSize'].each( function(k) {=0A=
      this.originalStyle[k] =3D this.element.style[k];=0A=
    }.bind(this));=0A=
=0A=
    this.originalTop  =3D this.element.offsetTop;=0A=
    this.originalLeft =3D this.element.offsetLeft;=0A=
=0A=
    var fontSize =3D this.element.getStyle('font-size') || '100%';=0A=
    ['em','px','%','pt'].each( function(fontSizeType) {=0A=
      if (fontSize.indexOf(fontSizeType)>0) {=0A=
        this.fontSize     =3D parseFloat(fontSize);=0A=
        this.fontSizeType =3D fontSizeType;=0A=
      }=0A=
    }.bind(this));=0A=
=0A=
    this.factor =3D (this.options.scaleTo - this.options.scaleFrom)/100;=0A=
=0A=
    this.dims =3D null;=0A=
    if (this.options.scaleMode=3D=3D'box')=0A=
      this.dims =3D [this.element.offsetHeight, =
this.element.offsetWidth];=0A=
    if (/^content/.test(this.options.scaleMode))=0A=
      this.dims =3D [this.element.scrollHeight, =
this.element.scrollWidth];=0A=
    if (!this.dims)=0A=
      this.dims =3D [this.options.scaleMode.originalHeight,=0A=
                   this.options.scaleMode.originalWidth];=0A=
  },=0A=
  update: function(position) {=0A=
    var currentScale =3D (this.options.scaleFrom/100.0) + (this.factor * =
position);=0A=
    if (this.options.scaleContent && this.fontSize)=0A=
      this.element.setStyle({fontSize: this.fontSize * currentScale + =
this.fontSizeType });=0A=
    this.setDimensions(this.dims[0] * currentScale, this.dims[1] * =
currentScale);=0A=
  },=0A=
  finish: function(position) {=0A=
    if (this.restoreAfterFinish) =
this.element.setStyle(this.originalStyle);=0A=
  },=0A=
  setDimensions: function(height, width) {=0A=
    var d =3D { };=0A=
    if (this.options.scaleX) d.width =3D width.round() + 'px';=0A=
    if (this.options.scaleY) d.height =3D height.round() + 'px';=0A=
    if (this.options.scaleFromCenter) {=0A=
      var topd  =3D (height - this.dims[0])/2;=0A=
      var leftd =3D (width  - this.dims[1])/2;=0A=
      if (this.elementPositioning =3D=3D 'absolute') {=0A=
        if (this.options.scaleY) d.top =3D this.originalTop-topd + 'px';=0A=
        if (this.options.scaleX) d.left =3D this.originalLeft-leftd + =
'px';=0A=
      } else {=0A=
        if (this.options.scaleY) d.top =3D -topd + 'px';=0A=
        if (this.options.scaleX) d.left =3D -leftd + 'px';=0A=
      }=0A=
    }=0A=
    this.element.setStyle(d);=0A=
  }=0A=
});=0A=
=0A=
Effect.Highlight =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({ startcolor: '#ffff99' }, =
arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    // Prevent executing on elements not in the layout flow=0A=
    if (this.element.getStyle('display')=3D=3D'none') { this.cancel(); =
return; }=0A=
    // Disable background image during the effect=0A=
    this.oldStyle =3D { };=0A=
    if (!this.options.keepBackgroundImage) {=0A=
      this.oldStyle.backgroundImage =3D =
this.element.getStyle('background-image');=0A=
      this.element.setStyle({backgroundImage: 'none'});=0A=
    }=0A=
    if (!this.options.endcolor)=0A=
      this.options.endcolor =3D =
this.element.getStyle('background-color').parseColor('#ffffff');=0A=
    if (!this.options.restorecolor)=0A=
      this.options.restorecolor =3D =
this.element.getStyle('background-color');=0A=
    // init color calculations=0A=
    this._base  =3D $R(0,2).map(function(i){ return =
parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16) }.bind(this));=0A=
    this._delta =3D $R(0,2).map(function(i){ return =
parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i] =
}.bind(this));=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setStyle({backgroundColor: =
$R(0,2).inject('#',function(m,v,i){=0A=
      return =
m+((this._base[i]+(this._delta[i]*position)).round().toColorPart()); =
}.bind(this)) });=0A=
  },=0A=
  finish: function() {=0A=
    this.element.setStyle(Object.extend(this.oldStyle, {=0A=
      backgroundColor: this.options.restorecolor=0A=
    }));=0A=
  }=0A=
});=0A=
=0A=
Effect.ScrollTo =3D function(element) {=0A=
  var options =3D arguments[1] || { },=0A=
  scrollOffsets =3D document.viewport.getScrollOffsets(),=0A=
  elementOffsets =3D $(element).cumulativeOffset();=0A=
=0A=
  if (options.offset) elementOffsets[1] +=3D options.offset;=0A=
=0A=
  return new Effect.Tween(null,=0A=
    scrollOffsets.top,=0A=
    elementOffsets[1],=0A=
    options,=0A=
    function(p){ scrollTo(scrollOffsets.left, p.round()); }=0A=
  );=0A=
};=0A=
=0A=
/* ------------- combination effects ------------- */=0A=
=0A=
Effect.Fade =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldOpacity =3D element.getInlineOpacity();=0A=
  var options =3D Object.extend({=0A=
    from: element.getOpacity() || 1.0,=0A=
    to:   0.0,=0A=
    afterFinishInternal: function(effect) {=0A=
      if (effect.options.to!=3D0) return;=0A=
      effect.element.hide().setStyle({opacity: oldOpacity});=0A=
    }=0A=
  }, arguments[1] || { });=0A=
  return new Effect.Opacity(element,options);=0A=
};=0A=
=0A=
Effect.Appear =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
  from: (element.getStyle('display') =3D=3D 'none' ? 0.0 : =
element.getOpacity() || 0.0),=0A=
  to:   1.0,=0A=
  // force Safari to render floated elements properly=0A=
  afterFinishInternal: function(effect) {=0A=
    effect.element.forceRerendering();=0A=
  },=0A=
  beforeSetup: function(effect) {=0A=
    effect.element.setOpacity(effect.options.from).show();=0A=
  }}, arguments[1] || { });=0A=
  return new Effect.Opacity(element,options);=0A=
};=0A=
=0A=
Effect.Puff =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    opacity: element.getInlineOpacity(),=0A=
    position: element.getStyle('position'),=0A=
    top:  element.style.top,=0A=
    left: element.style.left,=0A=
    width: element.style.width,=0A=
    height: element.style.height=0A=
  };=0A=
  return new Effect.Parallel(=0A=
   [ new Effect.Scale(element, 200,=0A=
      { sync: true, scaleFromCenter: true, scaleContent: true, =
restoreAfterFinish: true }),=0A=
     new Effect.Opacity(element, { sync: true, to: 0.0 } ) ],=0A=
     Object.extend({ duration: 1.0,=0A=
      beforeSetupInternal: function(effect) {=0A=
        Position.absolutize(effect.effects[0].element);=0A=
      },=0A=
      afterFinishInternal: function(effect) {=0A=
         effect.effects[0].element.hide().setStyle(oldStyle); }=0A=
     }, arguments[1] || { })=0A=
   );=0A=
};=0A=
=0A=
Effect.BlindUp =3D function(element) {=0A=
  element =3D $(element);=0A=
  element.makeClipping();=0A=
  return new Effect.Scale(element, 0,=0A=
    Object.extend({ scaleContent: false,=0A=
      scaleX: false,=0A=
      restoreAfterFinish: true,=0A=
      afterFinishInternal: function(effect) {=0A=
        effect.element.hide().undoClipping();=0A=
      }=0A=
    }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
Effect.BlindDown =3D function(element) {=0A=
  element =3D $(element);=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, 100, Object.extend({=0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    scaleFrom: 0,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makeClipping().setStyle({height: '0px'}).show();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.undoClipping();=0A=
    }=0A=
  }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.SwitchOff =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldOpacity =3D element.getInlineOpacity();=0A=
  return new Effect.Appear(element, Object.extend({=0A=
    duration: 0.4,=0A=
    from: 0,=0A=
    transition: Effect.Transitions.flicker,=0A=
    afterFinishInternal: function(effect) {=0A=
      new Effect.Scale(effect.element, 1, {=0A=
        duration: 0.3, scaleFromCenter: true,=0A=
        scaleX: false, scaleContent: false, restoreAfterFinish: true,=0A=
        beforeSetup: function(effect) {=0A=
          effect.element.makePositioned().makeClipping();=0A=
        },=0A=
        afterFinishInternal: function(effect) {=0A=
          =
effect.element.hide().undoClipping().undoPositioned().setStyle({opacity: =
oldOpacity});=0A=
        }=0A=
      });=0A=
    }=0A=
  }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.DropOut =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    top: element.getStyle('top'),=0A=
    left: element.getStyle('left'),=0A=
    opacity: element.getInlineOpacity() };=0A=
  return new Effect.Parallel(=0A=
    [ new Effect.Move(element, {x: 0, y: 100, sync: true }),=0A=
      new Effect.Opacity(element, { sync: true, to: 0.0 }) ],=0A=
    Object.extend(=0A=
      { duration: 0.5,=0A=
        beforeSetup: function(effect) {=0A=
          effect.effects[0].element.makePositioned();=0A=
        },=0A=
        afterFinishInternal: function(effect) {=0A=
          =
effect.effects[0].element.hide().undoPositioned().setStyle(oldStyle);=0A=
        }=0A=
      }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.Shake =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    distance: 20,=0A=
    duration: 0.5=0A=
  }, arguments[1] || {});=0A=
  var distance =3D parseFloat(options.distance);=0A=
  var split =3D parseFloat(options.duration) / 10.0;=0A=
  var oldStyle =3D {=0A=
    top: element.getStyle('top'),=0A=
    left: element.getStyle('left') };=0A=
    return new Effect.Move(element,=0A=
      { x:  distance, y: 0, duration: split, afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x: -distance, y: 0, duration: split, afterFinishInternal: =
function(effect) {=0A=
        effect.element.undoPositioned().setStyle(oldStyle);=0A=
  }}); }}); }}); }}); }}); }});=0A=
};=0A=
=0A=
Effect.SlideDown =3D function(element) {=0A=
  element =3D $(element).cleanWhitespace();=0A=
  // SlideDown need to have the content of the element wrapped in a =
container element with fixed height!=0A=
  var oldInnerBottom =3D element.down().getStyle('bottom');=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, 100, Object.extend({=0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    scaleFrom: window.opera ? 0 : 1,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makePositioned();=0A=
      effect.element.down().makePositioned();=0A=
      if (window.opera) effect.element.setStyle({top: ''});=0A=
      effect.element.makeClipping().setStyle({height: '0px'}).show();=0A=
    },=0A=
    afterUpdateInternal: function(effect) {=0A=
      effect.element.down().setStyle({bottom:=0A=
        (effect.dims[0] - effect.element.clientHeight) + 'px' });=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.undoClipping().undoPositioned();=0A=
      effect.element.down().undoPositioned().setStyle({bottom: =
oldInnerBottom}); }=0A=
    }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
Effect.SlideUp =3D function(element) {=0A=
  element =3D $(element).cleanWhitespace();=0A=
  var oldInnerBottom =3D element.down().getStyle('bottom');=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, window.opera ? 0 : 1,=0A=
   Object.extend({ scaleContent: false,=0A=
    scaleX: false,=0A=
    scaleMode: 'box',=0A=
    scaleFrom: 100,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makePositioned();=0A=
      effect.element.down().makePositioned();=0A=
      if (window.opera) effect.element.setStyle({top: ''});=0A=
      effect.element.makeClipping().show();=0A=
    },=0A=
    afterUpdateInternal: function(effect) {=0A=
      effect.element.down().setStyle({bottom:=0A=
        (effect.dims[0] - effect.element.clientHeight) + 'px' });=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.hide().undoClipping().undoPositioned();=0A=
      effect.element.down().undoPositioned().setStyle({bottom: =
oldInnerBottom});=0A=
    }=0A=
   }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
// Bug in opera makes the TD containing this element expand for a =
instance after finish=0A=
Effect.Squish =3D function(element) {=0A=
  return new Effect.Scale(element, window.opera ? 1 : 0, {=0A=
    restoreAfterFinish: true,=0A=
    beforeSetup: function(effect) {=0A=
      effect.element.makeClipping();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.hide().undoClipping();=0A=
    }=0A=
  });=0A=
};=0A=
=0A=
Effect.Grow =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    direction: 'center',=0A=
    moveTransition: Effect.Transitions.sinoidal,=0A=
    scaleTransition: Effect.Transitions.sinoidal,=0A=
    opacityTransition: Effect.Transitions.full=0A=
  }, arguments[1] || { });=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    height: element.style.height,=0A=
    width: element.style.width,=0A=
    opacity: element.getInlineOpacity() };=0A=
=0A=
  var dims =3D element.getDimensions();=0A=
  var initialMoveX, initialMoveY;=0A=
  var moveX, moveY;=0A=
=0A=
  switch (options.direction) {=0A=
    case 'top-left':=0A=
      initialMoveX =3D initialMoveY =3D moveX =3D moveY =3D 0;=0A=
      break;=0A=
    case 'top-right':=0A=
      initialMoveX =3D dims.width;=0A=
      initialMoveY =3D moveY =3D 0;=0A=
      moveX =3D -dims.width;=0A=
      break;=0A=
    case 'bottom-left':=0A=
      initialMoveX =3D moveX =3D 0;=0A=
      initialMoveY =3D dims.height;=0A=
      moveY =3D -dims.height;=0A=
      break;=0A=
    case 'bottom-right':=0A=
      initialMoveX =3D dims.width;=0A=
      initialMoveY =3D dims.height;=0A=
      moveX =3D -dims.width;=0A=
      moveY =3D -dims.height;=0A=
      break;=0A=
    case 'center':=0A=
      initialMoveX =3D dims.width / 2;=0A=
      initialMoveY =3D dims.height / 2;=0A=
      moveX =3D -dims.width / 2;=0A=
      moveY =3D -dims.height / 2;=0A=
      break;=0A=
  }=0A=
=0A=
  return new Effect.Move(element, {=0A=
    x: initialMoveX,=0A=
    y: initialMoveY,=0A=
    duration: 0.01,=0A=
    beforeSetup: function(effect) {=0A=
      effect.element.hide().makeClipping().makePositioned();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      new Effect.Parallel(=0A=
        [ new Effect.Opacity(effect.element, { sync: true, to: 1.0, =
from: 0.0, transition: options.opacityTransition }),=0A=
          new Effect.Move(effect.element, { x: moveX, y: moveY, sync: =
true, transition: options.moveTransition }),=0A=
          new Effect.Scale(effect.element, 100, {=0A=
            scaleMode: { originalHeight: dims.height, originalWidth: =
dims.width },=0A=
            sync: true, scaleFrom: window.opera ? 1 : 0, transition: =
options.scaleTransition, restoreAfterFinish: true})=0A=
        ], Object.extend({=0A=
             beforeSetup: function(effect) {=0A=
               effect.effects[0].element.setStyle({height: =
'0px'}).show();=0A=
             },=0A=
             afterFinishInternal: function(effect) {=0A=
               =
effect.effects[0].element.undoClipping().undoPositioned().setStyle(oldSty=
le);=0A=
             }=0A=
           }, options)=0A=
      );=0A=
    }=0A=
  });=0A=
};=0A=
=0A=
Effect.Shrink =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    direction: 'center',=0A=
    moveTransition: Effect.Transitions.sinoidal,=0A=
    scaleTransition: Effect.Transitions.sinoidal,=0A=
    opacityTransition: Effect.Transitions.none=0A=
  }, arguments[1] || { });=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    height: element.style.height,=0A=
    width: element.style.width,=0A=
    opacity: element.getInlineOpacity() };=0A=
=0A=
  var dims =3D element.getDimensions();=0A=
  var moveX, moveY;=0A=
=0A=
  switch (options.direction) {=0A=
    case 'top-left':=0A=
      moveX =3D moveY =3D 0;=0A=
      break;=0A=
    case 'top-right':=0A=
      moveX =3D dims.width;=0A=
      moveY =3D 0;=0A=
      break;=0A=
    case 'bottom-left':=0A=
      moveX =3D 0;=0A=
      moveY =3D dims.height;=0A=
      break;=0A=
    case 'bottom-right':=0A=
      moveX =3D dims.width;=0A=
      moveY =3D dims.height;=0A=
      break;=0A=
    case 'center':=0A=
      moveX =3D dims.width / 2;=0A=
      moveY =3D dims.height / 2;=0A=
      break;=0A=
  }=0A=
=0A=
  return new Effect.Parallel(=0A=
    [ new Effect.Opacity(element, { sync: true, to: 0.0, from: 1.0, =
transition: options.opacityTransition }),=0A=
      new Effect.Scale(element, window.opera ? 1 : 0, { sync: true, =
transition: options.scaleTransition, restoreAfterFinish: true}),=0A=
      new Effect.Move(element, { x: moveX, y: moveY, sync: true, =
transition: options.moveTransition })=0A=
    ], Object.extend({=0A=
         beforeStartInternal: function(effect) {=0A=
           effect.effects[0].element.makePositioned().makeClipping();=0A=
         },=0A=
         afterFinishInternal: function(effect) {=0A=
           =
effect.effects[0].element.hide().undoClipping().undoPositioned().setStyle=
(oldStyle); }=0A=
       }, options)=0A=
  );=0A=
};=0A=
=0A=
Effect.Pulsate =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options    =3D arguments[1] || { },=0A=
    oldOpacity =3D element.getInlineOpacity(),=0A=
    transition =3D options.transition || Effect.Transitions.linear,=0A=
    reverser   =3D function(pos){=0A=
      return 1 - =
transition((-Math.cos((pos*(options.pulses||5)*2)*Math.PI)/2) + .5);=0A=
    };=0A=
=0A=
  return new Effect.Opacity(element,=0A=
    Object.extend(Object.extend({  duration: 2.0, from: 0,=0A=
      afterFinishInternal: function(effect) { =
effect.element.setStyle({opacity: oldOpacity}); }=0A=
    }, options), {transition: reverser}));=0A=
};=0A=
=0A=
Effect.Fold =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    width: element.style.width,=0A=
    height: element.style.height };=0A=
  element.makeClipping();=0A=
  return new Effect.Scale(element, 5, Object.extend({=0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    afterFinishInternal: function(effect) {=0A=
    new Effect.Scale(element, 1, {=0A=
      scaleContent: false,=0A=
      scaleY: false,=0A=
      afterFinishInternal: function(effect) {=0A=
        effect.element.hide().undoClipping().setStyle(oldStyle);=0A=
      } });=0A=
  }}, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.Morph =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      style: { }=0A=
    }, arguments[1] || { });=0A=
=0A=
    if (!Object.isString(options.style)) this.style =3D =
$H(options.style);=0A=
    else {=0A=
      if (options.style.include(':'))=0A=
        this.style =3D options.style.parseStyle();=0A=
      else {=0A=
        this.element.addClassName(options.style);=0A=
        this.style =3D $H(this.element.getStyles());=0A=
        this.element.removeClassName(options.style);=0A=
        var css =3D this.element.getStyles();=0A=
        this.style =3D this.style.reject(function(style) {=0A=
          return style.value =3D=3D css[style.key];=0A=
        });=0A=
        options.afterFinishInternal =3D function(effect) {=0A=
          effect.element.addClassName(effect.options.style);=0A=
          effect.transforms.each(function(transform) {=0A=
            effect.element.style[transform.style] =3D '';=0A=
          });=0A=
        };=0A=
      }=0A=
    }=0A=
    this.start(options);=0A=
  },=0A=
=0A=
  setup: function(){=0A=
    function parseColor(color){=0A=
      if (!color || ['rgba(0, 0, 0, 0)','transparent'].include(color)) =
color =3D '#ffffff';=0A=
      color =3D color.parseColor();=0A=
      return $R(0,2).map(function(i){=0A=
        return parseInt( color.slice(i*2+1,i*2+3), 16 );=0A=
      });=0A=
    }=0A=
    this.transforms =3D this.style.map(function(pair){=0A=
      var property =3D pair[0], value =3D pair[1], unit =3D null;=0A=
=0A=
      if (value.parseColor('#zzzzzz') !=3D '#zzzzzz') {=0A=
        value =3D value.parseColor();=0A=
        unit  =3D 'color';=0A=
      } else if (property =3D=3D 'opacity') {=0A=
        value =3D parseFloat(value);=0A=
        if (Prototype.Browser.IE && =
(!this.element.currentStyle.hasLayout))=0A=
          this.element.setStyle({zoom: 1});=0A=
      } else if (Element.CSS_LENGTH.test(value)) {=0A=
          var components =3D value.match(/^([\+\-]?[0-9\.]+)(.*)$/);=0A=
          value =3D parseFloat(components[1]);=0A=
          unit =3D (components.length =3D=3D 3) ? components[2] : null;=0A=
      }=0A=
=0A=
      var originalValue =3D this.element.getStyle(property);=0A=
      return {=0A=
        style: property.camelize(),=0A=
        originalValue: unit=3D=3D'color' ? parseColor(originalValue) : =
parseFloat(originalValue || 0),=0A=
        targetValue: unit=3D=3D'color' ? parseColor(value) : value,=0A=
        unit: unit=0A=
      };=0A=
    }.bind(this)).reject(function(transform){=0A=
      return (=0A=
        (transform.originalValue =3D=3D transform.targetValue) ||=0A=
        (=0A=
          transform.unit !=3D 'color' &&=0A=
          (isNaN(transform.originalValue) || =
isNaN(transform.targetValue))=0A=
        )=0A=
      );=0A=
    });=0A=
  },=0A=
  update: function(position) {=0A=
    var style =3D { }, transform, i =3D this.transforms.length;=0A=
    while(i--)=0A=
      style[(transform =3D this.transforms[i]).style] =3D=0A=
        transform.unit=3D=3D'color' ? '#'+=0A=
          (Math.round(transform.originalValue[0]+=0A=
            =
(transform.targetValue[0]-transform.originalValue[0])*position)).toColorP=
art() +=0A=
          (Math.round(transform.originalValue[1]+=0A=
            =
(transform.targetValue[1]-transform.originalValue[1])*position)).toColorP=
art() +=0A=
          (Math.round(transform.originalValue[2]+=0A=
            =
(transform.targetValue[2]-transform.originalValue[2])*position)).toColorP=
art() :=0A=
        (transform.originalValue +=0A=
          (transform.targetValue - transform.originalValue) * =
position).toFixed(3) +=0A=
            (transform.unit =3D=3D=3D null ? '' : transform.unit);=0A=
    this.element.setStyle(style, true);=0A=
  }=0A=
});=0A=
=0A=
Effect.Transform =3D Class.create({=0A=
  initialize: function(tracks){=0A=
    this.tracks  =3D [];=0A=
    this.options =3D arguments[1] || { };=0A=
    this.addTracks(tracks);=0A=
  },=0A=
  addTracks: function(tracks){=0A=
    tracks.each(function(track){=0A=
      track =3D $H(track);=0A=
      var data =3D track.values().first();=0A=
      this.tracks.push($H({=0A=
        ids:     track.keys().first(),=0A=
        effect:  Effect.Morph,=0A=
        options: { style: data }=0A=
      }));=0A=
    }.bind(this));=0A=
    return this;=0A=
  },=0A=
  play: function(){=0A=
    return new Effect.Parallel(=0A=
      this.tracks.map(function(track){=0A=
        var ids =3D track.get('ids'), effect =3D track.get('effect'), =
options =3D track.get('options');=0A=
        var elements =3D [$(ids) || $$(ids)].flatten();=0A=
        return elements.map(function(e){ return new effect(e, =
Object.extend({ sync:true }, options)) });=0A=
      }).flatten(),=0A=
      this.options=0A=
    );=0A=
  }=0A=
});=0A=
=0A=
Element.CSS_PROPERTIES =3D $w(=0A=
  'backgroundColor backgroundPosition borderBottomColor =
borderBottomStyle ' +=0A=
  'borderBottomWidth borderLeftColor borderLeftStyle borderLeftWidth ' +=0A=
  'borderRightColor borderRightStyle borderRightWidth borderSpacing ' +=0A=
  'borderTopColor borderTopStyle borderTopWidth bottom clip color ' +=0A=
  'fontSize fontWeight height left letterSpacing lineHeight ' +=0A=
  'marginBottom marginLeft marginRight marginTop markerOffset maxHeight =
'+=0A=
  'maxWidth minHeight minWidth opacity outlineColor outlineOffset ' +=0A=
  'outlineWidth paddingBottom paddingLeft paddingRight paddingTop ' +=0A=
  'right textIndent top width wordSpacing zIndex');=0A=
=0A=
Element.CSS_LENGTH =3D =
/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;=0A=
=0A=
String.__parseStyleElement =3D document.createElement('div');=0A=
String.prototype.parseStyle =3D function(){=0A=
  var style, styleRules =3D $H();=0A=
  if (Prototype.Browser.WebKit)=0A=
    style =3D new Element('div',{style:this}).style;=0A=
  else {=0A=
    String.__parseStyleElement.innerHTML =3D '<div style=3D"' + this + =
'"></div>';=0A=
    style =3D String.__parseStyleElement.childNodes[0].style;=0A=
  }=0A=
=0A=
  Element.CSS_PROPERTIES.each(function(property){=0A=
    if (style[property]) styleRules.set(property, style[property]);=0A=
  });=0A=
=0A=
  if (Prototype.Browser.IE && this.include('opacity'))=0A=
    styleRules.set('opacity', =
this.match(/opacity:\s*((?:0|1)?(?:\.\d*)?)/)[1]);=0A=
=0A=
  return styleRules;=0A=
};=0A=
=0A=
if (document.defaultView && document.defaultView.getComputedStyle) {=0A=
  Element.getStyles =3D function(element) {=0A=
    var css =3D document.defaultView.getComputedStyle($(element), null);=0A=
    return Element.CSS_PROPERTIES.inject({ }, function(styles, property) =
{=0A=
      styles[property] =3D css[property];=0A=
      return styles;=0A=
    });=0A=
  };=0A=
} else {=0A=
  Element.getStyles =3D function(element) {=0A=
    element =3D $(element);=0A=
    var css =3D element.currentStyle, styles;=0A=
    styles =3D Element.CSS_PROPERTIES.inject({ }, function(results, =
property) {=0A=
      results[property] =3D css[property];=0A=
      return results;=0A=
    });=0A=
    if (!styles.opacity) styles.opacity =3D element.getOpacity();=0A=
    return styles;=0A=
  };=0A=
}=0A=
=0A=
Effect.Methods =3D {=0A=
  morph: function(element, style) {=0A=
    element =3D $(element);=0A=
    new Effect.Morph(element, Object.extend({ style: style }, =
arguments[2] || { }));=0A=
    return element;=0A=
  },=0A=
  visualEffect: function(element, effect, options) {=0A=
    element =3D $(element);=0A=
    var s =3D effect.dasherize().camelize(), klass =3D =
s.charAt(0).toUpperCase() + s.substring(1);=0A=
    new Effect[klass](element, options);=0A=
    return element;=0A=
  },=0A=
  highlight: function(element, options) {=0A=
    element =3D $(element);=0A=
    new Effect.Highlight(element, options);=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
$w('fade appear grow shrink fold blindUp blindDown slideUp slideDown '+=0A=
  'pulsate shake puff squish switchOff dropOut').each(=0A=
  function(effect) {=0A=
    Effect.Methods[effect] =3D function(element, options){=0A=
      element =3D $(element);=0A=
      Effect[effect.charAt(0).toUpperCase() + =
effect.substring(1)](element, options);=0A=
      return element;=0A=
    };=0A=
  }=0A=
);=0A=
=0A=
$w('getInlineOpacity forceRerendering setContentZoom collectTextNodes =
collectTextNodesIgnoreClass getStyles').each(=0A=
  function(f) { Effect.Methods[f] =3D Element[f]; }=0A=
);=0A=
=0A=
Element.addMethods(Effect.Methods);
------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/javascripts/dragdrop.js?1323190114

// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, =
http://mir.aculo.us)=0A=
//           (c) 2005-2008 Sammi Williams =
(http://www.oriontransfer.co.nz, sammi@oriontransfer.co.nz)=0A=
//=0A=
// script.aculo.us is freely distributable under the terms of an =
MIT-style license.=0A=
// For details, see the script.aculo.us web site: http://script.aculo.us/=0A=
=0A=
if(Object.isUndefined(Effect))=0A=
  throw("dragdrop.js requires including script.aculo.us' effects.js =
library");=0A=
=0A=
var Droppables =3D {=0A=
  drops: [],=0A=
=0A=
  remove: function(element) {=0A=
    this.drops =3D this.drops.reject(function(d) { return =
d.element=3D=3D$(element) });=0A=
  },=0A=
=0A=
  add: function(element) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend({=0A=
      greedy:     true,=0A=
      hoverclass: null,=0A=
      tree:       false=0A=
    }, arguments[1] || { });=0A=
=0A=
    // cache containers=0A=
    if(options.containment) {=0A=
      options._containers =3D [];=0A=
      var containment =3D options.containment;=0A=
      if(Object.isArray(containment)) {=0A=
        containment.each( function(c) { options._containers.push($(c)) =
});=0A=
      } else {=0A=
        options._containers.push($(containment));=0A=
      }=0A=
    }=0A=
=0A=
    if(options.accept) options.accept =3D [options.accept].flatten();=0A=
=0A=
    Element.makePositioned(element); // fix IE=0A=
    options.element =3D element;=0A=
=0A=
    this.drops.push(options);=0A=
  },=0A=
=0A=
  findDeepestChild: function(drops) {=0A=
    deepest =3D drops[0];=0A=
=0A=
    for (i =3D 1; i < drops.length; ++i)=0A=
      if (Element.isParent(drops[i].element, deepest.element))=0A=
        deepest =3D drops[i];=0A=
=0A=
    return deepest;=0A=
  },=0A=
=0A=
  isContained: function(element, drop) {=0A=
    var containmentNode;=0A=
    if(drop.tree) {=0A=
      containmentNode =3D element.treeNode;=0A=
    } else {=0A=
      containmentNode =3D element.parentNode;=0A=
    }=0A=
    return drop._containers.detect(function(c) { return containmentNode =
=3D=3D c });=0A=
  },=0A=
=0A=
  isAffected: function(point, element, drop) {=0A=
    return (=0A=
      (drop.element!=3Delement) &&=0A=
      ((!drop._containers) ||=0A=
        this.isContained(element, drop)) &&=0A=
      ((!drop.accept) ||=0A=
        (Element.classNames(element).detect(=0A=
          function(v) { return drop.accept.include(v) } ) )) &&=0A=
      Position.within(drop.element, point[0], point[1]) );=0A=
  },=0A=
=0A=
  deactivate: function(drop) {=0A=
    if(drop.hoverclass)=0A=
      Element.removeClassName(drop.element, drop.hoverclass);=0A=
    this.last_active =3D null;=0A=
  },=0A=
=0A=
  activate: function(drop) {=0A=
    if(drop.hoverclass)=0A=
      Element.addClassName(drop.element, drop.hoverclass);=0A=
    this.last_active =3D drop;=0A=
  },=0A=
=0A=
  show: function(point, element) {=0A=
    if(!this.drops.length) return;=0A=
    var drop, affected =3D [];=0A=
=0A=
    this.drops.each( function(drop) {=0A=
      if(Droppables.isAffected(point, element, drop))=0A=
        affected.push(drop);=0A=
    });=0A=
=0A=
    if(affected.length>0)=0A=
      drop =3D Droppables.findDeepestChild(affected);=0A=
=0A=
    if(this.last_active && this.last_active !=3D drop) =
this.deactivate(this.last_active);=0A=
    if (drop) {=0A=
      Position.within(drop.element, point[0], point[1]);=0A=
      if(drop.onHover)=0A=
        drop.onHover(element, drop.element, =
Position.overlap(drop.overlap, drop.element));=0A=
=0A=
      if (drop !=3D this.last_active) Droppables.activate(drop);=0A=
    }=0A=
  },=0A=
=0A=
  fire: function(event, element) {=0A=
    if(!this.last_active) return;=0A=
    Position.prepare();=0A=
=0A=
    if (this.isAffected([Event.pointerX(event), Event.pointerY(event)], =
element, this.last_active))=0A=
      if (this.last_active.onDrop) {=0A=
        this.last_active.onDrop(element, this.last_active.element, =
event);=0A=
        return true;=0A=
      }=0A=
  },=0A=
=0A=
  reset: function() {=0A=
    if(this.last_active)=0A=
      this.deactivate(this.last_active);=0A=
  }=0A=
};=0A=
=0A=
var Draggables =3D {=0A=
  drags: [],=0A=
  observers: [],=0A=
=0A=
  register: function(draggable) {=0A=
    if(this.drags.length =3D=3D 0) {=0A=
      this.eventMouseUp   =3D this.endDrag.bindAsEventListener(this);=0A=
      this.eventMouseMove =3D this.updateDrag.bindAsEventListener(this);=0A=
      this.eventKeypress  =3D this.keyPress.bindAsEventListener(this);=0A=
=0A=
      Event.observe(document, "mouseup", this.eventMouseUp);=0A=
      Event.observe(document, "mousemove", this.eventMouseMove);=0A=
      Event.observe(document, "keypress", this.eventKeypress);=0A=
    }=0A=
    this.drags.push(draggable);=0A=
  },=0A=
=0A=
  unregister: function(draggable) {=0A=
    this.drags =3D this.drags.reject(function(d) { return =
d=3D=3Ddraggable });=0A=
    if(this.drags.length =3D=3D 0) {=0A=
      Event.stopObserving(document, "mouseup", this.eventMouseUp);=0A=
      Event.stopObserving(document, "mousemove", this.eventMouseMove);=0A=
      Event.stopObserving(document, "keypress", this.eventKeypress);=0A=
    }=0A=
  },=0A=
=0A=
  activate: function(draggable) {=0A=
    if(draggable.options.delay) {=0A=
      this._timeout =3D setTimeout(function() {=0A=
        Draggables._timeout =3D null;=0A=
        window.focus();=0A=
        Draggables.activeDraggable =3D draggable;=0A=
      }.bind(this), draggable.options.delay);=0A=
    } else {=0A=
      window.focus(); // allows keypress events if window isn't =
currently focused, fails for Safari=0A=
      this.activeDraggable =3D draggable;=0A=
    }=0A=
  },=0A=
=0A=
  deactivate: function() {=0A=
    this.activeDraggable =3D null;=0A=
  },=0A=
=0A=
  updateDrag: function(event) {=0A=
    if(!this.activeDraggable) return;=0A=
    var pointer =3D [Event.pointerX(event), Event.pointerY(event)];=0A=
    // Mozilla-based browsers fire successive mousemove events with=0A=
    // the same coordinates, prevent needless redrawing (moz bug?)=0A=
    if(this._lastPointer && (this._lastPointer.inspect() =3D=3D =
pointer.inspect())) return;=0A=
    this._lastPointer =3D pointer;=0A=
=0A=
    this.activeDraggable.updateDrag(event, pointer);=0A=
  },=0A=
=0A=
  endDrag: function(event) {=0A=
    if(this._timeout) {=0A=
      clearTimeout(this._timeout);=0A=
      this._timeout =3D null;=0A=
    }=0A=
    if(!this.activeDraggable) return;=0A=
    this._lastPointer =3D null;=0A=
    this.activeDraggable.endDrag(event);=0A=
    this.activeDraggable =3D null;=0A=
  },=0A=
=0A=
  keyPress: function(event) {=0A=
    if(this.activeDraggable)=0A=
      this.activeDraggable.keyPress(event);=0A=
  },=0A=
=0A=
  addObserver: function(observer) {=0A=
    this.observers.push(observer);=0A=
    this._cacheObserverCallbacks();=0A=
  },=0A=
=0A=
  removeObserver: function(element) {  // element instead of observer =
fixes mem leaks=0A=
    this.observers =3D this.observers.reject( function(o) { return =
o.element=3D=3Delement });=0A=
    this._cacheObserverCallbacks();=0A=
  },=0A=
=0A=
  notify: function(eventName, draggable, event) {  // 'onStart', =
'onEnd', 'onDrag'=0A=
    if(this[eventName+'Count'] > 0)=0A=
      this.observers.each( function(o) {=0A=
        if(o[eventName]) o[eventName](eventName, draggable, event);=0A=
      });=0A=
    if(draggable.options[eventName]) =
draggable.options[eventName](draggable, event);=0A=
  },=0A=
=0A=
  _cacheObserverCallbacks: function() {=0A=
    ['onStart','onEnd','onDrag'].each( function(eventName) {=0A=
      Draggables[eventName+'Count'] =3D Draggables.observers.select(=0A=
        function(o) { return o[eventName]; }=0A=
      ).length;=0A=
    });=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Draggable =3D Class.create({=0A=
  initialize: function(element) {=0A=
    var defaults =3D {=0A=
      handle: false,=0A=
      reverteffect: function(element, top_offset, left_offset) {=0A=
        var dur =3D =
Math.sqrt(Math.abs(top_offset^2)+Math.abs(left_offset^2))*0.02;=0A=
        new Effect.Move(element, { x: -left_offset, y: -top_offset, =
duration: dur,=0A=
          queue: {scope:'_draggable', position:'end'}=0A=
        });=0A=
      },=0A=
      endeffect: function(element) {=0A=
        var toOpacity =3D Object.isNumber(element._opacity) ? =
element._opacity : 1.0;=0A=
        new Effect.Opacity(element, {duration:0.2, from:0.7, =
to:toOpacity,=0A=
          queue: {scope:'_draggable', position:'end'},=0A=
          afterFinish: function(){=0A=
            Draggable._dragging[element] =3D false=0A=
          }=0A=
        });=0A=
      },=0A=
      zindex: 1000,=0A=
      revert: false,=0A=
      quiet: false,=0A=
      scroll: false,=0A=
      scrollSensitivity: 20,=0A=
      scrollSpeed: 15,=0A=
      snap: false,  // false, or xy or [x,y] or function(x,y){ return =
[x,y] }=0A=
      delay: 0=0A=
    };=0A=
=0A=
    if(!arguments[1] || Object.isUndefined(arguments[1].endeffect))=0A=
      Object.extend(defaults, {=0A=
        starteffect: function(element) {=0A=
          element._opacity =3D Element.getOpacity(element);=0A=
          Draggable._dragging[element] =3D true;=0A=
          new Effect.Opacity(element, {duration:0.2, =
from:element._opacity, to:0.7});=0A=
        }=0A=
      });=0A=
=0A=
    var options =3D Object.extend(defaults, arguments[1] || { });=0A=
=0A=
    this.element =3D $(element);=0A=
=0A=
    if(options.handle && Object.isString(options.handle))=0A=
      this.handle =3D this.element.down('.'+options.handle, 0);=0A=
=0A=
    if(!this.handle) this.handle =3D $(options.handle);=0A=
    if(!this.handle) this.handle =3D this.element;=0A=
=0A=
    if(options.scroll && !options.scroll.scrollTo && =
!options.scroll.outerHTML) {=0A=
      options.scroll =3D $(options.scroll);=0A=
      this._isScrollChild =3D Element.childOf(this.element, =
options.scroll);=0A=
    }=0A=
=0A=
    Element.makePositioned(this.element); // fix IE=0A=
=0A=
    this.options  =3D options;=0A=
    this.dragging =3D false;=0A=
=0A=
    this.eventMouseDown =3D this.initDrag.bindAsEventListener(this);=0A=
    Event.observe(this.handle, "mousedown", this.eventMouseDown);=0A=
=0A=
    Draggables.register(this);=0A=
  },=0A=
=0A=
  destroy: function() {=0A=
    Event.stopObserving(this.handle, "mousedown", this.eventMouseDown);=0A=
    Draggables.unregister(this);=0A=
  },=0A=
=0A=
  currentDelta: function() {=0A=
    return([=0A=
      parseInt(Element.getStyle(this.element,'left') || '0'),=0A=
      parseInt(Element.getStyle(this.element,'top') || '0')]);=0A=
  },=0A=
=0A=
  initDrag: function(event) {=0A=
    if(!Object.isUndefined(Draggable._dragging[this.element]) &&=0A=
      Draggable._dragging[this.element]) return;=0A=
    if(Event.isLeftClick(event)) {=0A=
      // abort on form elements, fixes a Firefox issue=0A=
      var src =3D Event.element(event);=0A=
      if((tag_name =3D src.tagName.toUpperCase()) && (=0A=
        tag_name=3D=3D'INPUT' ||=0A=
        tag_name=3D=3D'SELECT' ||=0A=
        tag_name=3D=3D'OPTION' ||=0A=
        tag_name=3D=3D'BUTTON' ||=0A=
        tag_name=3D=3D'TEXTAREA')) return;=0A=
=0A=
      var pointer =3D [Event.pointerX(event), Event.pointerY(event)];=0A=
      var pos     =3D Position.cumulativeOffset(this.element);=0A=
      this.offset =3D [0,1].map( function(i) { return (pointer[i] - =
pos[i]) });=0A=
=0A=
      Draggables.activate(this);=0A=
      Event.stop(event);=0A=
    }=0A=
  },=0A=
=0A=
  startDrag: function(event) {=0A=
    this.dragging =3D true;=0A=
    if(!this.delta)=0A=
      this.delta =3D this.currentDelta();=0A=
=0A=
    if(this.options.zindex) {=0A=
      this.originalZ =3D =
parseInt(Element.getStyle(this.element,'z-index') || 0);=0A=
      this.element.style.zIndex =3D this.options.zindex;=0A=
    }=0A=
=0A=
    if(this.options.ghosting) {=0A=
      this._clone =3D this.element.cloneNode(true);=0A=
      this._originallyAbsolute =3D (this.element.getStyle('position') =
=3D=3D 'absolute');=0A=
      if (!this._originallyAbsolute)=0A=
        Position.absolutize(this.element);=0A=
      this.element.parentNode.insertBefore(this._clone, this.element);=0A=
    }=0A=
=0A=
    if(this.options.scroll) {=0A=
      if (this.options.scroll =3D=3D window) {=0A=
        var where =3D this._getWindowScroll(this.options.scroll);=0A=
        this.originalScrollLeft =3D where.left;=0A=
        this.originalScrollTop =3D where.top;=0A=
      } else {=0A=
        this.originalScrollLeft =3D this.options.scroll.scrollLeft;=0A=
        this.originalScrollTop =3D this.options.scroll.scrollTop;=0A=
      }=0A=
    }=0A=
=0A=
    Draggables.notify('onStart', this, event);=0A=
=0A=
    if(this.options.starteffect) this.options.starteffect(this.element);=0A=
  },=0A=
=0A=
  updateDrag: function(event, pointer) {=0A=
    if(!this.dragging) this.startDrag(event);=0A=
=0A=
    if(!this.options.quiet){=0A=
      Position.prepare();=0A=
      Droppables.show(pointer, this.element);=0A=
    }=0A=
=0A=
    Draggables.notify('onDrag', this, event);=0A=
=0A=
    this.draw(pointer);=0A=
    if(this.options.change) this.options.change(this);=0A=
=0A=
    if(this.options.scroll) {=0A=
      this.stopScrolling();=0A=
=0A=
      var p;=0A=
      if (this.options.scroll =3D=3D window) {=0A=
        with(this._getWindowScroll(this.options.scroll)) { p =3D [ left, =
top, left+width, top+height ]; }=0A=
      } else {=0A=
        p =3D Position.page(this.options.scroll);=0A=
        p[0] +=3D this.options.scroll.scrollLeft + Position.deltaX;=0A=
        p[1] +=3D this.options.scroll.scrollTop + Position.deltaY;=0A=
        p.push(p[0]+this.options.scroll.offsetWidth);=0A=
        p.push(p[1]+this.options.scroll.offsetHeight);=0A=
      }=0A=
      var speed =3D [0,0];=0A=
      if(pointer[0] < (p[0]+this.options.scrollSensitivity)) speed[0] =
=3D pointer[0]-(p[0]+this.options.scrollSensitivity);=0A=
      if(pointer[1] < (p[1]+this.options.scrollSensitivity)) speed[1] =
=3D pointer[1]-(p[1]+this.options.scrollSensitivity);=0A=
      if(pointer[0] > (p[2]-this.options.scrollSensitivity)) speed[0] =
=3D pointer[0]-(p[2]-this.options.scrollSensitivity);=0A=
      if(pointer[1] > (p[3]-this.options.scrollSensitivity)) speed[1] =
=3D pointer[1]-(p[3]-this.options.scrollSensitivity);=0A=
      this.startScrolling(speed);=0A=
    }=0A=
=0A=
    // fix AppleWebKit rendering=0A=
    if(Prototype.Browser.WebKit) window.scrollBy(0,0);=0A=
=0A=
    Event.stop(event);=0A=
  },=0A=
=0A=
  finishDrag: function(event, success) {=0A=
    this.dragging =3D false;=0A=
=0A=
    if(this.options.quiet){=0A=
      Position.prepare();=0A=
      var pointer =3D [Event.pointerX(event), Event.pointerY(event)];=0A=
      Droppables.show(pointer, this.element);=0A=
    }=0A=
=0A=
    if(this.options.ghosting) {=0A=
      if (!this._originallyAbsolute)=0A=
        Position.relativize(this.element);=0A=
      delete this._originallyAbsolute;=0A=
      Element.remove(this._clone);=0A=
      this._clone =3D null;=0A=
    }=0A=
=0A=
    var dropped =3D false;=0A=
    if(success) {=0A=
      dropped =3D Droppables.fire(event, this.element);=0A=
      if (!dropped) dropped =3D false;=0A=
    }=0A=
    if(dropped && this.options.onDropped) =
this.options.onDropped(this.element);=0A=
    Draggables.notify('onEnd', this, event);=0A=
=0A=
    var revert =3D this.options.revert;=0A=
    if(revert && Object.isFunction(revert)) revert =3D =
revert(this.element);=0A=
=0A=
    var d =3D this.currentDelta();=0A=
    if(revert && this.options.reverteffect) {=0A=
      if (dropped =3D=3D 0 || revert !=3D 'failure')=0A=
        this.options.reverteffect(this.element,=0A=
          d[1]-this.delta[1], d[0]-this.delta[0]);=0A=
    } else {=0A=
      this.delta =3D d;=0A=
    }=0A=
=0A=
    if(this.options.zindex)=0A=
      this.element.style.zIndex =3D this.originalZ;=0A=
=0A=
    if(this.options.endeffect)=0A=
      this.options.endeffect(this.element);=0A=
=0A=
    Draggables.deactivate(this);=0A=
    Droppables.reset();=0A=
  },=0A=
=0A=
  keyPress: function(event) {=0A=
    if(event.keyCode!=3DEvent.KEY_ESC) return;=0A=
    this.finishDrag(event, false);=0A=
    Event.stop(event);=0A=
  },=0A=
=0A=
  endDrag: function(event) {=0A=
    if(!this.dragging) return;=0A=
    this.stopScrolling();=0A=
    this.finishDrag(event, true);=0A=
    Event.stop(event);=0A=
  },=0A=
=0A=
  draw: function(point) {=0A=
    var pos =3D Position.cumulativeOffset(this.element);=0A=
    if(this.options.ghosting) {=0A=
      var r   =3D Position.realOffset(this.element);=0A=
      pos[0] +=3D r[0] - Position.deltaX; pos[1] +=3D r[1] - =
Position.deltaY;=0A=
    }=0A=
=0A=
    var d =3D this.currentDelta();=0A=
    pos[0] -=3D d[0]; pos[1] -=3D d[1];=0A=
=0A=
    if(this.options.scroll && (this.options.scroll !=3D window && =
this._isScrollChild)) {=0A=
      pos[0] -=3D this.options.scroll.scrollLeft-this.originalScrollLeft;=0A=
      pos[1] -=3D this.options.scroll.scrollTop-this.originalScrollTop;=0A=
    }=0A=
=0A=
    var p =3D [0,1].map(function(i){=0A=
      return (point[i]-pos[i]-this.offset[i])=0A=
    }.bind(this));=0A=
=0A=
    if(this.options.snap) {=0A=
      if(Object.isFunction(this.options.snap)) {=0A=
        p =3D this.options.snap(p[0],p[1],this);=0A=
      } else {=0A=
      if(Object.isArray(this.options.snap)) {=0A=
        p =3D p.map( function(v, i) {=0A=
          return (v/this.options.snap[i]).round()*this.options.snap[i] =
}.bind(this));=0A=
      } else {=0A=
        p =3D p.map( function(v) {=0A=
          return (v/this.options.snap).round()*this.options.snap =
}.bind(this));=0A=
      }=0A=
    }}=0A=
=0A=
    var style =3D this.element.style;=0A=
    if((!this.options.constraint) || =
(this.options.constraint=3D=3D'horizontal'))=0A=
      style.left =3D p[0] + "px";=0A=
    if((!this.options.constraint) || =
(this.options.constraint=3D=3D'vertical'))=0A=
      style.top  =3D p[1] + "px";=0A=
=0A=
    if(style.visibility=3D=3D"hidden") style.visibility =3D ""; // fix =
gecko rendering=0A=
  },=0A=
=0A=
  stopScrolling: function() {=0A=
    if(this.scrollInterval) {=0A=
      clearInterval(this.scrollInterval);=0A=
      this.scrollInterval =3D null;=0A=
      Draggables._lastScrollPointer =3D null;=0A=
    }=0A=
  },=0A=
=0A=
  startScrolling: function(speed) {=0A=
    if(!(speed[0] || speed[1])) return;=0A=
    this.scrollSpeed =3D =
[speed[0]*this.options.scrollSpeed,speed[1]*this.options.scrollSpeed];=0A=
    this.lastScrolled =3D new Date();=0A=
    this.scrollInterval =3D setInterval(this.scroll.bind(this), 10);=0A=
  },=0A=
=0A=
  scroll: function() {=0A=
    var current =3D new Date();=0A=
    var delta =3D current - this.lastScrolled;=0A=
    this.lastScrolled =3D current;=0A=
    if(this.options.scroll =3D=3D window) {=0A=
      with (this._getWindowScroll(this.options.scroll)) {=0A=
        if (this.scrollSpeed[0] || this.scrollSpeed[1]) {=0A=
          var d =3D delta / 1000;=0A=
          this.options.scroll.scrollTo( left + d*this.scrollSpeed[0], =
top + d*this.scrollSpeed[1] );=0A=
        }=0A=
      }=0A=
    } else {=0A=
      this.options.scroll.scrollLeft +=3D this.scrollSpeed[0] * delta / =
1000;=0A=
      this.options.scroll.scrollTop  +=3D this.scrollSpeed[1] * delta / =
1000;=0A=
    }=0A=
=0A=
    Position.prepare();=0A=
    Droppables.show(Draggables._lastPointer, this.element);=0A=
    Draggables.notify('onDrag', this);=0A=
    if (this._isScrollChild) {=0A=
      Draggables._lastScrollPointer =3D Draggables._lastScrollPointer || =
$A(Draggables._lastPointer);=0A=
      Draggables._lastScrollPointer[0] +=3D this.scrollSpeed[0] * delta =
/ 1000;=0A=
      Draggables._lastScrollPointer[1] +=3D this.scrollSpeed[1] * delta =
/ 1000;=0A=
      if (Draggables._lastScrollPointer[0] < 0)=0A=
        Draggables._lastScrollPointer[0] =3D 0;=0A=
      if (Draggables._lastScrollPointer[1] < 0)=0A=
        Draggables._lastScrollPointer[1] =3D 0;=0A=
      this.draw(Draggables._lastScrollPointer);=0A=
    }=0A=
=0A=
    if(this.options.change) this.options.change(this);=0A=
  },=0A=
=0A=
  _getWindowScroll: function(w) {=0A=
    var T, L, W, H;=0A=
    with (w.document) {=0A=
      if (w.document.documentElement && documentElement.scrollTop) {=0A=
        T =3D documentElement.scrollTop;=0A=
        L =3D documentElement.scrollLeft;=0A=
      } else if (w.document.body) {=0A=
        T =3D body.scrollTop;=0A=
        L =3D body.scrollLeft;=0A=
      }=0A=
      if (w.innerWidth) {=0A=
        W =3D w.innerWidth;=0A=
        H =3D w.innerHeight;=0A=
      } else if (w.document.documentElement && =
documentElement.clientWidth) {=0A=
        W =3D documentElement.clientWidth;=0A=
        H =3D documentElement.clientHeight;=0A=
      } else {=0A=
        W =3D body.offsetWidth;=0A=
        H =3D body.offsetHeight;=0A=
      }=0A=
    }=0A=
    return { top: T, left: L, width: W, height: H };=0A=
  }=0A=
});=0A=
=0A=
Draggable._dragging =3D { };=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var SortableObserver =3D Class.create({=0A=
  initialize: function(element, observer) {=0A=
    this.element   =3D $(element);=0A=
    this.observer  =3D observer;=0A=
    this.lastValue =3D Sortable.serialize(this.element);=0A=
  },=0A=
=0A=
  onStart: function() {=0A=
    this.lastValue =3D Sortable.serialize(this.element);=0A=
  },=0A=
=0A=
  onEnd: function() {=0A=
    Sortable.unmark();=0A=
    if(this.lastValue !=3D Sortable.serialize(this.element))=0A=
      this.observer(this.element)=0A=
  }=0A=
});=0A=
=0A=
var Sortable =3D {=0A=
  SERIALIZE_RULE: /^[^_\-](?:[A-Za-z0-9\-\_]*)[_](.*)$/,=0A=
=0A=
  sortables: { },=0A=
=0A=
  _findRootElement: function(element) {=0A=
    while (element.tagName.toUpperCase() !=3D "BODY") {=0A=
      if(element.id && Sortable.sortables[element.id]) return element;=0A=
      element =3D element.parentNode;=0A=
    }=0A=
  },=0A=
=0A=
  options: function(element) {=0A=
    element =3D Sortable._findRootElement($(element));=0A=
    if(!element) return;=0A=
    return Sortable.sortables[element.id];=0A=
  },=0A=
=0A=
  destroy: function(element){=0A=
    element =3D $(element);=0A=
    var s =3D Sortable.sortables[element.id];=0A=
=0A=
    if(s) {=0A=
      Draggables.removeObserver(s.element);=0A=
      s.droppables.each(function(d){ Droppables.remove(d) });=0A=
      s.draggables.invoke('destroy');=0A=
=0A=
      delete Sortable.sortables[s.element.id];=0A=
    }=0A=
  },=0A=
=0A=
  create: function(element) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend({=0A=
      element:     element,=0A=
      tag:         'li',       // assumes li children, override with =
tag: 'tagname'=0A=
      dropOnEmpty: false,=0A=
      tree:        false,=0A=
      treeTag:     'ul',=0A=
      overlap:     'vertical', // one of 'vertical', 'horizontal'=0A=
      constraint:  'vertical', // one of 'vertical', 'horizontal', false=0A=
      containment: element,    // also takes array of elements (or =
id's); or false=0A=
      handle:      false,      // or a CSS class=0A=
      only:        false,=0A=
      delay:       0,=0A=
      hoverclass:  null,=0A=
      ghosting:    false,=0A=
      quiet:       false,=0A=
      scroll:      false,=0A=
      scrollSensitivity: 20,=0A=
      scrollSpeed: 15,=0A=
      format:      this.SERIALIZE_RULE,=0A=
=0A=
      // these take arrays of elements or ids and can be=0A=
      // used for better initialization performance=0A=
      elements:    false,=0A=
      handles:     false,=0A=
=0A=
      onChange:    Prototype.emptyFunction,=0A=
      onUpdate:    Prototype.emptyFunction=0A=
    }, arguments[1] || { });=0A=
=0A=
    // clear any old sortable with same element=0A=
    this.destroy(element);=0A=
=0A=
    // build options for the draggables=0A=
    var options_for_draggable =3D {=0A=
      revert:      true,=0A=
      quiet:       options.quiet,=0A=
      scroll:      options.scroll,=0A=
      scrollSpeed: options.scrollSpeed,=0A=
      scrollSensitivity: options.scrollSensitivity,=0A=
      delay:       options.delay,=0A=
      ghosting:    options.ghosting,=0A=
      constraint:  options.constraint,=0A=
      handle:      options.handle };=0A=
=0A=
    if(options.starteffect)=0A=
      options_for_draggable.starteffect =3D options.starteffect;=0A=
=0A=
    if(options.reverteffect)=0A=
      options_for_draggable.reverteffect =3D options.reverteffect;=0A=
    else=0A=
      if(options.ghosting) options_for_draggable.reverteffect =3D =
function(element) {=0A=
        element.style.top  =3D 0;=0A=
        element.style.left =3D 0;=0A=
      };=0A=
=0A=
    if(options.endeffect)=0A=
      options_for_draggable.endeffect =3D options.endeffect;=0A=
=0A=
    if(options.zindex)=0A=
      options_for_draggable.zindex =3D options.zindex;=0A=
=0A=
    // build options for the droppables=0A=
    var options_for_droppable =3D {=0A=
      overlap:     options.overlap,=0A=
      containment: options.containment,=0A=
      tree:        options.tree,=0A=
      hoverclass:  options.hoverclass,=0A=
      onHover:     Sortable.onHover=0A=
    };=0A=
=0A=
    var options_for_tree =3D {=0A=
      onHover:      Sortable.onEmptyHover,=0A=
      overlap:      options.overlap,=0A=
      containment:  options.containment,=0A=
      hoverclass:   options.hoverclass=0A=
    };=0A=
=0A=
    // fix for gecko engine=0A=
    Element.cleanWhitespace(element);=0A=
=0A=
    options.draggables =3D [];=0A=
    options.droppables =3D [];=0A=
=0A=
    // drop on empty handling=0A=
    if(options.dropOnEmpty || options.tree) {=0A=
      Droppables.add(element, options_for_tree);=0A=
      options.droppables.push(element);=0A=
    }=0A=
=0A=
    (options.elements || this.findElements(element, options) || =
[]).each( function(e,i) {=0A=
      var handle =3D options.handles ? $(options.handles[i]) :=0A=
        (options.handle ? $(e).select('.' + options.handle)[0] : e);=0A=
      options.draggables.push(=0A=
        new Draggable(e, Object.extend(options_for_draggable, { handle: =
handle })));=0A=
      Droppables.add(e, options_for_droppable);=0A=
      if(options.tree) e.treeNode =3D element;=0A=
      options.droppables.push(e);=0A=
    });=0A=
=0A=
    if(options.tree) {=0A=
      (Sortable.findTreeElements(element, options) || []).each( =
function(e) {=0A=
        Droppables.add(e, options_for_tree);=0A=
        e.treeNode =3D element;=0A=
        options.droppables.push(e);=0A=
      });=0A=
    }=0A=
=0A=
    // keep reference=0A=
    this.sortables[element.id] =3D options;=0A=
=0A=
    // for onupdate=0A=
    Draggables.addObserver(new SortableObserver(element, =
options.onUpdate));=0A=
=0A=
  },=0A=
=0A=
  // return all suitable-for-sortable elements in a guaranteed order=0A=
  findElements: function(element, options) {=0A=
    return Element.findChildren(=0A=
      element, options.only, options.tree ? true : false, options.tag);=0A=
  },=0A=
=0A=
  findTreeElements: function(element, options) {=0A=
    return Element.findChildren(=0A=
      element, options.only, options.tree ? true : false, =
options.treeTag);=0A=
  },=0A=
=0A=
  onHover: function(element, dropon, overlap) {=0A=
    if(Element.isParent(dropon, element)) return;=0A=
=0A=
    if(overlap > .33 && overlap < .66 && Sortable.options(dropon).tree) {=0A=
      return;=0A=
    } else if(overlap>0.5) {=0A=
      Sortable.mark(dropon, 'before');=0A=
      if(dropon.previousSibling !=3D element) {=0A=
        var oldParentNode =3D element.parentNode;=0A=
        element.style.visibility =3D "hidden"; // fix gecko rendering=0A=
        dropon.parentNode.insertBefore(element, dropon);=0A=
        if(dropon.parentNode!=3DoldParentNode)=0A=
          Sortable.options(oldParentNode).onChange(element);=0A=
        Sortable.options(dropon.parentNode).onChange(element);=0A=
      }=0A=
    } else {=0A=
      Sortable.mark(dropon, 'after');=0A=
      var nextElement =3D dropon.nextSibling || null;=0A=
      if(nextElement !=3D element) {=0A=
        var oldParentNode =3D element.parentNode;=0A=
        element.style.visibility =3D "hidden"; // fix gecko rendering=0A=
        dropon.parentNode.insertBefore(element, nextElement);=0A=
        if(dropon.parentNode!=3DoldParentNode)=0A=
          Sortable.options(oldParentNode).onChange(element);=0A=
        Sortable.options(dropon.parentNode).onChange(element);=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  onEmptyHover: function(element, dropon, overlap) {=0A=
    var oldParentNode =3D element.parentNode;=0A=
    var droponOptions =3D Sortable.options(dropon);=0A=
=0A=
    if(!Element.isParent(dropon, element)) {=0A=
      var index;=0A=
=0A=
      var children =3D Sortable.findElements(dropon, {tag: =
droponOptions.tag, only: droponOptions.only});=0A=
      var child =3D null;=0A=
=0A=
      if(children) {=0A=
        var offset =3D Element.offsetSize(dropon, droponOptions.overlap) =
* (1.0 - overlap);=0A=
=0A=
        for (index =3D 0; index < children.length; index +=3D 1) {=0A=
          if (offset - Element.offsetSize (children[index], =
droponOptions.overlap) >=3D 0) {=0A=
            offset -=3D Element.offsetSize (children[index], =
droponOptions.overlap);=0A=
          } else if (offset - (Element.offsetSize (children[index], =
droponOptions.overlap) / 2) >=3D 0) {=0A=
            child =3D index + 1 < children.length ? children[index + 1] =
: null;=0A=
            break;=0A=
          } else {=0A=
            child =3D children[index];=0A=
            break;=0A=
          }=0A=
        }=0A=
      }=0A=
=0A=
      dropon.insertBefore(element, child);=0A=
=0A=
      Sortable.options(oldParentNode).onChange(element);=0A=
      droponOptions.onChange(element);=0A=
    }=0A=
  },=0A=
=0A=
  unmark: function() {=0A=
    if(Sortable._marker) Sortable._marker.hide();=0A=
  },=0A=
=0A=
  mark: function(dropon, position) {=0A=
    // mark on ghosting only=0A=
    var sortable =3D Sortable.options(dropon.parentNode);=0A=
    if(sortable && !sortable.ghosting) return;=0A=
=0A=
    if(!Sortable._marker) {=0A=
      Sortable._marker =3D=0A=
        ($('dropmarker') || =
Element.extend(document.createElement('DIV'))).=0A=
          =
hide().addClassName('dropmarker').setStyle({position:'absolute'});=0A=
      =
document.getElementsByTagName("body").item(0).appendChild(Sortable._marke=
r);=0A=
    }=0A=
    var offsets =3D Position.cumulativeOffset(dropon);=0A=
    Sortable._marker.setStyle({left: offsets[0]+'px', top: offsets[1] + =
'px'});=0A=
=0A=
    if(position=3D=3D'after')=0A=
      if(sortable.overlap =3D=3D 'horizontal')=0A=
        Sortable._marker.setStyle({left: (offsets[0]+dropon.clientWidth) =
+ 'px'});=0A=
      else=0A=
        Sortable._marker.setStyle({top: (offsets[1]+dropon.clientHeight) =
+ 'px'});=0A=
=0A=
    Sortable._marker.show();=0A=
  },=0A=
=0A=
  _tree: function(element, options, parent) {=0A=
    var children =3D Sortable.findElements(element, options) || [];=0A=
=0A=
    for (var i =3D 0; i < children.length; ++i) {=0A=
      var match =3D children[i].id.match(options.format);=0A=
=0A=
      if (!match) continue;=0A=
=0A=
      var child =3D {=0A=
        id: encodeURIComponent(match ? match[1] : null),=0A=
        element: element,=0A=
        parent: parent,=0A=
        children: [],=0A=
        position: parent.children.length,=0A=
        container: $(children[i]).down(options.treeTag)=0A=
      };=0A=
=0A=
      /* Get the element containing the children and recurse over it */=0A=
      if (child.container)=0A=
        this._tree(child.container, options, child);=0A=
=0A=
      parent.children.push (child);=0A=
    }=0A=
=0A=
    return parent;=0A=
  },=0A=
=0A=
  tree: function(element) {=0A=
    element =3D $(element);=0A=
    var sortableOptions =3D this.options(element);=0A=
    var options =3D Object.extend({=0A=
      tag: sortableOptions.tag,=0A=
      treeTag: sortableOptions.treeTag,=0A=
      only: sortableOptions.only,=0A=
      name: element.id,=0A=
      format: sortableOptions.format=0A=
    }, arguments[1] || { });=0A=
=0A=
    var root =3D {=0A=
      id: null,=0A=
      parent: null,=0A=
      children: [],=0A=
      container: element,=0A=
      position: 0=0A=
    };=0A=
=0A=
    return Sortable._tree(element, options, root);=0A=
  },=0A=
=0A=
  /* Construct a [i] index for a particular node */=0A=
  _constructIndex: function(node) {=0A=
    var index =3D '';=0A=
    do {=0A=
      if (node.id) index =3D '[' + node.position + ']' + index;=0A=
    } while ((node =3D node.parent) !=3D null);=0A=
    return index;=0A=
  },=0A=
=0A=
  sequence: function(element) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend(this.options(element), arguments[1] || =
{ });=0A=
=0A=
    return $(this.findElements(element, options) || []).map( =
function(item) {=0A=
      return item.id.match(options.format) ? =
item.id.match(options.format)[1] : '';=0A=
    });=0A=
  },=0A=
=0A=
  setSequence: function(element, new_sequence) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend(this.options(element), arguments[2] || =
{ });=0A=
=0A=
    var nodeMap =3D { };=0A=
    this.findElements(element, options).each( function(n) {=0A=
        if (n.id.match(options.format))=0A=
            nodeMap[n.id.match(options.format)[1]] =3D [n, n.parentNode];=0A=
        n.parentNode.removeChild(n);=0A=
    });=0A=
=0A=
    new_sequence.each(function(ident) {=0A=
      var n =3D nodeMap[ident];=0A=
      if (n) {=0A=
        n[1].appendChild(n[0]);=0A=
        delete nodeMap[ident];=0A=
      }=0A=
    });=0A=
  },=0A=
=0A=
  serialize: function(element) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend(Sortable.options(element), =
arguments[1] || { });=0A=
    var name =3D encodeURIComponent(=0A=
      (arguments[1] && arguments[1].name) ? arguments[1].name : =
element.id);=0A=
=0A=
    if (options.tree) {=0A=
      return Sortable.tree(element, arguments[1]).children.map( function =
(item) {=0A=
        return [name + Sortable._constructIndex(item) + "[id]=3D" +=0A=
                =
encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));=0A=
      }).flatten().join('&');=0A=
    } else {=0A=
      return Sortable.sequence(element, arguments[1]).map( =
function(item) {=0A=
        return name + "[]=3D" + encodeURIComponent(item);=0A=
      }).join('&');=0A=
    }=0A=
  }=0A=
};=0A=
=0A=
// Returns true if child is contained within element=0A=
Element.isParent =3D function(child, element) {=0A=
  if (!child.parentNode || child =3D=3D element) return false;=0A=
  if (child.parentNode =3D=3D element) return true;=0A=
  return Element.isParent(child.parentNode, element);=0A=
};=0A=
=0A=
Element.findChildren =3D function(element, only, recursive, tagName) {=0A=
  if(!element.hasChildNodes()) return null;=0A=
  tagName =3D tagName.toUpperCase();=0A=
  if(only) only =3D [only].flatten();=0A=
  var elements =3D [];=0A=
  $A(element.childNodes).each( function(e) {=0A=
    if(e.tagName && e.tagName.toUpperCase()=3D=3DtagName &&=0A=
      (!only || (Element.classNames(e).detect(function(v) { return =
only.include(v) }))))=0A=
        elements.push(e);=0A=
    if(recursive) {=0A=
      var grandchildren =3D Element.findChildren(e, only, recursive, =
tagName);=0A=
      if(grandchildren) elements.push(grandchildren);=0A=
    }=0A=
  });=0A=
=0A=
  return (elements.length>0 ? elements.flatten() : []);=0A=
};=0A=
=0A=
Element.offsetSize =3D function (element, type) {=0A=
  return element['offset' + ((type=3D=3D'vertical' || =
type=3D=3D'height') ? 'Height' : 'Width')];=0A=
};
------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/javascripts/controls.js?1323190114

// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, =
http://mir.aculo.us)=0A=
//           (c) 2005-2008 Ivan Krstic =
(http://blogs.law.harvard.edu/ivan)=0A=
//           (c) 2005-2008 Jon Tirsen (http://www.tirsen.com)=0A=
// Contributors:=0A=
//  Richard Livsey=0A=
//  Rahul Bhargava=0A=
//  Rob Wills=0A=
//=0A=
// script.aculo.us is freely distributable under the terms of an =
MIT-style license.=0A=
// For details, see the script.aculo.us web site: http://script.aculo.us/=0A=
=0A=
// Autocompleter.Base handles all the autocompletion functionality=0A=
// that's independent of the data source for autocompletion. This=0A=
// includes drawing the autocompletion menu, observing keyboard=0A=
// and mouse events, and similar.=0A=
//=0A=
// Specific autocompleters need to provide, at the very least,=0A=
// a getUpdatedChoices function that will be invoked every time=0A=
// the text inside the monitored textbox changes. This method=0A=
// should get the text for which to provide autocompletion by=0A=
// invoking this.getToken(), NOT by directly accessing=0A=
// this.element.value. This is to allow incremental tokenized=0A=
// autocompletion. Specific auto-completion logic (AJAX, etc)=0A=
// belongs in getUpdatedChoices.=0A=
//=0A=
// Tokenized incremental autocompletion is enabled automatically=0A=
// when an autocompleter is instantiated with the 'tokens' option=0A=
// in the options parameter, e.g.:=0A=
// new Ajax.Autocompleter('id','upd', '/url/', { tokens: ',' });=0A=
// will incrementally autocomplete with a comma as the token.=0A=
// Additionally, ',' in the above example can be replaced with=0A=
// a token array, e.g. { tokens: [',', '\n'] } which=0A=
// enables autocompletion on multiple tokens. This is most=0A=
// useful when one of the tokens is \n (a newline), as it=0A=
// allows smart autocompletion after linebreaks.=0A=
=0A=
if(typeof Effect =3D=3D 'undefined')=0A=
  throw("controls.js requires including script.aculo.us' effects.js =
library");=0A=
=0A=
var Autocompleter =3D { };=0A=
Autocompleter.Base =3D Class.create({=0A=
  baseInitialize: function(element, update, options) {=0A=
    element          =3D $(element);=0A=
    this.element     =3D element;=0A=
    this.update      =3D $(update);=0A=
    this.hasFocus    =3D false;=0A=
    this.changed     =3D false;=0A=
    this.active      =3D false;=0A=
    this.index       =3D 0;=0A=
    this.entryCount  =3D 0;=0A=
    this.oldElementValue =3D this.element.value;=0A=
=0A=
    if(this.setOptions)=0A=
      this.setOptions(options);=0A=
    else=0A=
      this.options =3D options || { };=0A=
=0A=
    this.options.paramName    =3D this.options.paramName || =
this.element.name;=0A=
    this.options.tokens       =3D this.options.tokens || [];=0A=
    this.options.frequency    =3D this.options.frequency || 0.4;=0A=
    this.options.minChars     =3D this.options.minChars || 1;=0A=
    this.options.onShow       =3D this.options.onShow ||=0A=
      function(element, update){=0A=
        if(!update.style.position || =
update.style.position=3D=3D'absolute') {=0A=
          update.style.position =3D 'absolute';=0A=
          Position.clone(element, update, {=0A=
            setHeight: false,=0A=
            offsetTop: element.offsetHeight=0A=
          });=0A=
        }=0A=
        Effect.Appear(update,{duration:0.15});=0A=
      };=0A=
    this.options.onHide =3D this.options.onHide ||=0A=
      function(element, update){ new Effect.Fade(update,{duration:0.15}) =
};=0A=
=0A=
    if(typeof(this.options.tokens) =3D=3D 'string')=0A=
      this.options.tokens =3D new Array(this.options.tokens);=0A=
    // Force carriage returns as token delimiters anyway=0A=
    if (!this.options.tokens.include('\n'))=0A=
      this.options.tokens.push('\n');=0A=
=0A=
    this.observer =3D null;=0A=
=0A=
    this.element.setAttribute('autocomplete','off');=0A=
=0A=
    Element.hide(this.update);=0A=
=0A=
    Event.observe(this.element, 'blur', =
this.onBlur.bindAsEventListener(this));=0A=
    Event.observe(this.element, 'keydown', =
this.onKeyPress.bindAsEventListener(this));=0A=
  },=0A=
=0A=
  show: function() {=0A=
    if(Element.getStyle(this.update, 'display')=3D=3D'none') =
this.options.onShow(this.element, this.update);=0A=
    if(!this.iefix &&=0A=
      (Prototype.Browser.IE) &&=0A=
      (Element.getStyle(this.update, 'position')=3D=3D'absolute')) {=0A=
      new Insertion.After(this.update,=0A=
       '<iframe id=3D"' + this.update.id + '_iefix" '+=0A=
       =
'style=3D"display:none;position:absolute;filter:progid:DXImageTransform.M=
icrosoft.Alpha(opacity=3D0);" ' +=0A=
       'src=3D"javascript:false;" frameborder=3D"0" =
scrolling=3D"no"></iframe>');=0A=
      this.iefix =3D $(this.update.id+'_iefix');=0A=
    }=0A=
    if(this.iefix) setTimeout(this.fixIEOverlapping.bind(this), 50);=0A=
  },=0A=
=0A=
  fixIEOverlapping: function() {=0A=
    Position.clone(this.update, this.iefix, =
{setTop:(!this.update.style.height)});=0A=
    this.iefix.style.zIndex =3D 1;=0A=
    this.update.style.zIndex =3D 2;=0A=
    Element.show(this.iefix);=0A=
  },=0A=
=0A=
  hide: function() {=0A=
    this.stopIndicator();=0A=
    if(Element.getStyle(this.update, 'display')!=3D'none') =
this.options.onHide(this.element, this.update);=0A=
    if(this.iefix) Element.hide(this.iefix);=0A=
  },=0A=
=0A=
  startIndicator: function() {=0A=
    if(this.options.indicator) Element.show(this.options.indicator);=0A=
  },=0A=
=0A=
  stopIndicator: function() {=0A=
    if(this.options.indicator) Element.hide(this.options.indicator);=0A=
  },=0A=
=0A=
  onKeyPress: function(event) {=0A=
    if(this.active)=0A=
      switch(event.keyCode) {=0A=
       case Event.KEY_TAB:=0A=
       case Event.KEY_RETURN:=0A=
         this.selectEntry();=0A=
         Event.stop(event);=0A=
       case Event.KEY_ESC:=0A=
         this.hide();=0A=
         this.active =3D false;=0A=
         Event.stop(event);=0A=
         return;=0A=
       case Event.KEY_LEFT:=0A=
       case Event.KEY_RIGHT:=0A=
         return;=0A=
       case Event.KEY_UP:=0A=
         this.markPrevious();=0A=
         this.render();=0A=
         Event.stop(event);=0A=
         return;=0A=
       case Event.KEY_DOWN:=0A=
         this.markNext();=0A=
         this.render();=0A=
         Event.stop(event);=0A=
         return;=0A=
      }=0A=
     else=0A=
       if(event.keyCode=3D=3DEvent.KEY_TAB || =
event.keyCode=3D=3DEvent.KEY_RETURN ||=0A=
         (Prototype.Browser.WebKit > 0 && event.keyCode =3D=3D 0)) =
return;=0A=
=0A=
    this.changed =3D true;=0A=
    this.hasFocus =3D true;=0A=
=0A=
    if(this.observer) clearTimeout(this.observer);=0A=
      this.observer =3D=0A=
        setTimeout(this.onObserverEvent.bind(this), =
this.options.frequency*1000);=0A=
  },=0A=
=0A=
  activate: function() {=0A=
    this.changed =3D false;=0A=
    this.hasFocus =3D true;=0A=
    this.getUpdatedChoices();=0A=
  },=0A=
=0A=
  onHover: function(event) {=0A=
    var element =3D Event.findElement(event, 'LI');=0A=
    if(this.index !=3D element.autocompleteIndex)=0A=
    {=0A=
        this.index =3D element.autocompleteIndex;=0A=
        this.render();=0A=
    }=0A=
    Event.stop(event);=0A=
  },=0A=
=0A=
  onClick: function(event) {=0A=
    var element =3D Event.findElement(event, 'LI');=0A=
    this.index =3D element.autocompleteIndex;=0A=
    this.selectEntry();=0A=
    this.hide();=0A=
  },=0A=
=0A=
  onBlur: function(event) {=0A=
    // needed to make click events working=0A=
    setTimeout(this.hide.bind(this), 250);=0A=
    this.hasFocus =3D false;=0A=
    this.active =3D false;=0A=
  },=0A=
=0A=
  render: function() {=0A=
    if(this.entryCount > 0) {=0A=
      for (var i =3D 0; i < this.entryCount; i++)=0A=
        this.index=3D=3Di ?=0A=
          Element.addClassName(this.getEntry(i),"selected") :=0A=
          Element.removeClassName(this.getEntry(i),"selected");=0A=
      if(this.hasFocus) {=0A=
        this.show();=0A=
        this.active =3D true;=0A=
      }=0A=
    } else {=0A=
      this.active =3D false;=0A=
      this.hide();=0A=
    }=0A=
  },=0A=
=0A=
  markPrevious: function() {=0A=
    if(this.index > 0) this.index--;=0A=
      else this.index =3D this.entryCount-1;=0A=
    this.getEntry(this.index).scrollIntoView(true);=0A=
  },=0A=
=0A=
  markNext: function() {=0A=
    if(this.index < this.entryCount-1) this.index++;=0A=
      else this.index =3D 0;=0A=
    this.getEntry(this.index).scrollIntoView(false);=0A=
  },=0A=
=0A=
  getEntry: function(index) {=0A=
    return this.update.firstChild.childNodes[index];=0A=
  },=0A=
=0A=
  getCurrentEntry: function() {=0A=
    return this.getEntry(this.index);=0A=
  },=0A=
=0A=
  selectEntry: function() {=0A=
    this.active =3D false;=0A=
    this.updateElement(this.getCurrentEntry());=0A=
  },=0A=
=0A=
  updateElement: function(selectedElement) {=0A=
    if (this.options.updateElement) {=0A=
      this.options.updateElement(selectedElement);=0A=
      return;=0A=
    }=0A=
    var value =3D '';=0A=
    if (this.options.select) {=0A=
      var nodes =3D $(selectedElement).select('.' + this.options.select) =
|| [];=0A=
      if(nodes.length>0) value =3D Element.collectTextNodes(nodes[0], =
this.options.select);=0A=
    } else=0A=
      value =3D Element.collectTextNodesIgnoreClass(selectedElement, =
'informal');=0A=
=0A=
    var bounds =3D this.getTokenBounds();=0A=
    if (bounds[0] !=3D -1) {=0A=
      var newValue =3D this.element.value.substr(0, bounds[0]);=0A=
      var whitespace =3D =
this.element.value.substr(bounds[0]).match(/^\s+/);=0A=
      if (whitespace)=0A=
        newValue +=3D whitespace[0];=0A=
      this.element.value =3D newValue + value + =
this.element.value.substr(bounds[1]);=0A=
    } else {=0A=
      this.element.value =3D value;=0A=
    }=0A=
    this.oldElementValue =3D this.element.value;=0A=
    this.element.focus();=0A=
=0A=
    if (this.options.afterUpdateElement)=0A=
      this.options.afterUpdateElement(this.element, selectedElement);=0A=
  },=0A=
=0A=
  updateChoices: function(choices) {=0A=
    if(!this.changed && this.hasFocus) {=0A=
      this.update.innerHTML =3D choices;=0A=
      Element.cleanWhitespace(this.update);=0A=
      Element.cleanWhitespace(this.update.down());=0A=
=0A=
      if(this.update.firstChild && this.update.down().childNodes) {=0A=
        this.entryCount =3D=0A=
          this.update.down().childNodes.length;=0A=
        for (var i =3D 0; i < this.entryCount; i++) {=0A=
          var entry =3D this.getEntry(i);=0A=
          entry.autocompleteIndex =3D i;=0A=
          this.addObservers(entry);=0A=
        }=0A=
      } else {=0A=
        this.entryCount =3D 0;=0A=
      }=0A=
=0A=
      this.stopIndicator();=0A=
      this.index =3D 0;=0A=
=0A=
      if(this.entryCount=3D=3D1 && this.options.autoSelect) {=0A=
        this.selectEntry();=0A=
        this.hide();=0A=
      } else {=0A=
        this.render();=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  addObservers: function(element) {=0A=
    Event.observe(element, "mouseover", =
this.onHover.bindAsEventListener(this));=0A=
    Event.observe(element, "click", =
this.onClick.bindAsEventListener(this));=0A=
  },=0A=
=0A=
  onObserverEvent: function() {=0A=
    this.changed =3D false;=0A=
    this.tokenBounds =3D null;=0A=
    if(this.getToken().length>=3Dthis.options.minChars) {=0A=
      this.getUpdatedChoices();=0A=
    } else {=0A=
      this.active =3D false;=0A=
      this.hide();=0A=
    }=0A=
    this.oldElementValue =3D this.element.value;=0A=
  },=0A=
=0A=
  getToken: function() {=0A=
    var bounds =3D this.getTokenBounds();=0A=
    return this.element.value.substring(bounds[0], bounds[1]).strip();=0A=
  },=0A=
=0A=
  getTokenBounds: function() {=0A=
    if (null !=3D this.tokenBounds) return this.tokenBounds;=0A=
    var value =3D this.element.value;=0A=
    if (value.strip().empty()) return [-1, 0];=0A=
    var diff =3D arguments.callee.getFirstDifferencePos(value, =
this.oldElementValue);=0A=
    var offset =3D (diff =3D=3D this.oldElementValue.length ? 1 : 0);=0A=
    var prevTokenPos =3D -1, nextTokenPos =3D value.length;=0A=
    var tp;=0A=
    for (var index =3D 0, l =3D this.options.tokens.length; index < l; =
++index) {=0A=
      tp =3D value.lastIndexOf(this.options.tokens[index], diff + offset =
- 1);=0A=
      if (tp > prevTokenPos) prevTokenPos =3D tp;=0A=
      tp =3D value.indexOf(this.options.tokens[index], diff + offset);=0A=
      if (-1 !=3D tp && tp < nextTokenPos) nextTokenPos =3D tp;=0A=
    }=0A=
    return (this.tokenBounds =3D [prevTokenPos + 1, nextTokenPos]);=0A=
  }=0A=
});=0A=
=0A=
Autocompleter.Base.prototype.getTokenBounds.getFirstDifferencePos =3D =
function(newS, oldS) {=0A=
  var boundary =3D Math.min(newS.length, oldS.length);=0A=
  for (var index =3D 0; index < boundary; ++index)=0A=
    if (newS[index] !=3D oldS[index])=0A=
      return index;=0A=
  return boundary;=0A=
};=0A=
=0A=
Ajax.Autocompleter =3D Class.create(Autocompleter.Base, {=0A=
  initialize: function(element, update, url, options) {=0A=
    this.baseInitialize(element, update, options);=0A=
    this.options.asynchronous  =3D true;=0A=
    this.options.onComplete    =3D this.onComplete.bind(this);=0A=
    this.options.defaultParams =3D this.options.parameters || null;=0A=
    this.url                   =3D url;=0A=
  },=0A=
=0A=
  getUpdatedChoices: function() {=0A=
    this.startIndicator();=0A=
=0A=
    var entry =3D encodeURIComponent(this.options.paramName) + '=3D' +=0A=
      encodeURIComponent(this.getToken());=0A=
=0A=
    this.options.parameters =3D this.options.callback ?=0A=
      this.options.callback(this.element, entry) : entry;=0A=
=0A=
    if(this.options.defaultParams)=0A=
      this.options.parameters +=3D '&' + this.options.defaultParams;=0A=
=0A=
    new Ajax.Request(this.url, this.options);=0A=
  },=0A=
=0A=
  onComplete: function(request) {=0A=
    this.updateChoices(request.responseText);=0A=
  }=0A=
});=0A=
=0A=
// The local array autocompleter. Used when you'd prefer to=0A=
// inject an array of autocompletion options into the page, rather=0A=
// than sending out Ajax queries, which can be quite slow sometimes.=0A=
//=0A=
// The constructor takes four parameters. The first two are, as usual,=0A=
// the id of the monitored textbox, and id of the autocompletion menu.=0A=
// The third is the array you want to autocomplete from, and the fourth=0A=
// is the options block.=0A=
//=0A=
// Extra local autocompletion options:=0A=
// - choices - How many autocompletion choices to offer=0A=
//=0A=
// - partialSearch - If false, the autocompleter will match entered=0A=
//                    text only at the beginning of strings in the=0A=
//                    autocomplete array. Defaults to true, which will=0A=
//                    match text at the beginning of any *word* in the=0A=
//                    strings in the autocomplete array. If you want to=0A=
//                    search anywhere in the string, additionally set=0A=
//                    the option fullSearch to true (default: off).=0A=
//=0A=
// - fullSsearch - Search anywhere in autocomplete array strings.=0A=
//=0A=
// - partialChars - How many characters to enter before triggering=0A=
//                   a partial match (unlike minChars, which defines=0A=
//                   how many characters are required to do any match=0A=
//                   at all). Defaults to 2.=0A=
//=0A=
// - ignoreCase - Whether to ignore case when autocompleting.=0A=
//                 Defaults to true.=0A=
//=0A=
// It's possible to pass in a custom function as the 'selector'=0A=
// option, if you prefer to write your own autocompletion logic.=0A=
// In that case, the other options above will not apply unless=0A=
// you support them.=0A=
=0A=
Autocompleter.Local =3D Class.create(Autocompleter.Base, {=0A=
  initialize: function(element, update, array, options) {=0A=
    this.baseInitialize(element, update, options);=0A=
    this.options.array =3D array;=0A=
  },=0A=
=0A=
  getUpdatedChoices: function() {=0A=
    this.updateChoices(this.options.selector(this));=0A=
  },=0A=
=0A=
  setOptions: function(options) {=0A=
    this.options =3D Object.extend({=0A=
      choices: 10,=0A=
      partialSearch: true,=0A=
      partialChars: 2,=0A=
      ignoreCase: true,=0A=
      fullSearch: false,=0A=
      selector: function(instance) {=0A=
        var ret       =3D []; // Beginning matches=0A=
        var partial   =3D []; // Inside matches=0A=
        var entry     =3D instance.getToken();=0A=
        var count     =3D 0;=0A=
=0A=
        for (var i =3D 0; i < instance.options.array.length &&=0A=
          ret.length < instance.options.choices ; i++) {=0A=
=0A=
          var elem =3D instance.options.array[i];=0A=
          var foundPos =3D instance.options.ignoreCase ?=0A=
            elem.toLowerCase().indexOf(entry.toLowerCase()) :=0A=
            elem.indexOf(entry);=0A=
=0A=
          while (foundPos !=3D -1) {=0A=
            if (foundPos =3D=3D 0 && elem.length !=3D entry.length) {=0A=
              ret.push("<li><strong>" + elem.substr(0, entry.length) + =
"</strong>" +=0A=
                elem.substr(entry.length) + "</li>");=0A=
              break;=0A=
            } else if (entry.length >=3D instance.options.partialChars &&=0A=
              instance.options.partialSearch && foundPos !=3D -1) {=0A=
              if (instance.options.fullSearch || =
/\s/.test(elem.substr(foundPos-1,1))) {=0A=
                partial.push("<li>" + elem.substr(0, foundPos) + =
"<strong>" +=0A=
                  elem.substr(foundPos, entry.length) + "</strong>" + =
elem.substr(=0A=
                  foundPos + entry.length) + "</li>");=0A=
                break;=0A=
              }=0A=
            }=0A=
=0A=
            foundPos =3D instance.options.ignoreCase ?=0A=
              elem.toLowerCase().indexOf(entry.toLowerCase(), foundPos + =
1) :=0A=
              elem.indexOf(entry, foundPos + 1);=0A=
=0A=
          }=0A=
        }=0A=
        if (partial.length)=0A=
          ret =3D ret.concat(partial.slice(0, instance.options.choices - =
ret.length));=0A=
        return "<ul>" + ret.join('') + "</ul>";=0A=
      }=0A=
    }, options || { });=0A=
  }=0A=
});=0A=
=0A=
// AJAX in-place editor and collection editor=0A=
// Full rewrite by Christophe Porteneuve <tdd@tddsworld.com> (April =
2007).=0A=
=0A=
// Use this if you notice weird scrolling problems on some browsers,=0A=
// the DOM might be a bit confused when this gets called so do this=0A=
// waits 1 ms (with setTimeout) until it does the activation=0A=
Field.scrollFreeActivate =3D function(field) {=0A=
  setTimeout(function() {=0A=
    Field.activate(field);=0A=
  }, 1);=0A=
};=0A=
=0A=
Ajax.InPlaceEditor =3D Class.create({=0A=
  initialize: function(element, url, options) {=0A=
    this.url =3D url;=0A=
    this.element =3D element =3D $(element);=0A=
    this.prepareOptions();=0A=
    this._controls =3D { };=0A=
    arguments.callee.dealWithDeprecatedOptions(options); // DEPRECATION =
LAYER!!!=0A=
    Object.extend(this.options, options || { });=0A=
    if (!this.options.formId && this.element.id) {=0A=
      this.options.formId =3D this.element.id + '-inplaceeditor';=0A=
      if ($(this.options.formId))=0A=
        this.options.formId =3D '';=0A=
    }=0A=
    if (this.options.externalControl)=0A=
      this.options.externalControl =3D $(this.options.externalControl);=0A=
    if (!this.options.externalControl)=0A=
      this.options.externalControlOnly =3D false;=0A=
    this._originalBackground =3D =
this.element.getStyle('background-color') || 'transparent';=0A=
    this.element.title =3D this.options.clickToEditText;=0A=
    this._boundCancelHandler =3D this.handleFormCancellation.bind(this);=0A=
    this._boundComplete =3D (this.options.onComplete || =
Prototype.emptyFunction).bind(this);=0A=
    this._boundFailureHandler =3D this.handleAJAXFailure.bind(this);=0A=
    this._boundSubmitHandler =3D this.handleFormSubmission.bind(this);=0A=
    this._boundWrapperHandler =3D this.wrapUp.bind(this);=0A=
    this.registerListeners();=0A=
  },=0A=
  checkForEscapeOrReturn: function(e) {=0A=
    if (!this._editing || e.ctrlKey || e.altKey || e.shiftKey) return;=0A=
    if (Event.KEY_ESC =3D=3D e.keyCode)=0A=
      this.handleFormCancellation(e);=0A=
    else if (Event.KEY_RETURN =3D=3D e.keyCode)=0A=
      this.handleFormSubmission(e);=0A=
  },=0A=
  createControl: function(mode, handler, extraClasses) {=0A=
    var control =3D this.options[mode + 'Control'];=0A=
    var text =3D this.options[mode + 'Text'];=0A=
    if ('button' =3D=3D control) {=0A=
      var btn =3D document.createElement('input');=0A=
      btn.type =3D 'submit';=0A=
      btn.value =3D text;=0A=
      btn.className =3D 'editor_' + mode + '_button';=0A=
      if ('cancel' =3D=3D mode)=0A=
        btn.onclick =3D this._boundCancelHandler;=0A=
      this._form.appendChild(btn);=0A=
      this._controls[mode] =3D btn;=0A=
    } else if ('link' =3D=3D control) {=0A=
      var link =3D document.createElement('a');=0A=
      link.href =3D '#';=0A=
      link.appendChild(document.createTextNode(text));=0A=
      link.onclick =3D 'cancel' =3D=3D mode ? this._boundCancelHandler : =
this._boundSubmitHandler;=0A=
      link.className =3D 'editor_' + mode + '_link';=0A=
      if (extraClasses)=0A=
        link.className +=3D ' ' + extraClasses;=0A=
      this._form.appendChild(link);=0A=
      this._controls[mode] =3D link;=0A=
    }=0A=
  },=0A=
  createEditField: function() {=0A=
    var text =3D (this.options.loadTextURL ? this.options.loadingText : =
this.getText());=0A=
    var fld;=0A=
    if (1 >=3D this.options.rows && !/\r|\n/.test(this.getText())) {=0A=
      fld =3D document.createElement('input');=0A=
      fld.type =3D 'text';=0A=
      var size =3D this.options.size || this.options.cols || 0;=0A=
      if (0 < size) fld.size =3D size;=0A=
    } else {=0A=
      fld =3D document.createElement('textarea');=0A=
      fld.rows =3D (1 >=3D this.options.rows ? this.options.autoRows : =
this.options.rows);=0A=
      fld.cols =3D this.options.cols || 40;=0A=
    }=0A=
    fld.name =3D this.options.paramName;=0A=
    fld.value =3D text; // No HTML breaks conversion anymore=0A=
    fld.className =3D 'editor_field';=0A=
    if (this.options.submitOnBlur)=0A=
      fld.onblur =3D this._boundSubmitHandler;=0A=
    this._controls.editor =3D fld;=0A=
    if (this.options.loadTextURL)=0A=
      this.loadExternalText();=0A=
    this._form.appendChild(this._controls.editor);=0A=
  },=0A=
  createForm: function() {=0A=
    var ipe =3D this;=0A=
    function addText(mode, condition) {=0A=
      var text =3D ipe.options['text' + mode + 'Controls'];=0A=
      if (!text || condition =3D=3D=3D false) return;=0A=
      ipe._form.appendChild(document.createTextNode(text));=0A=
    };=0A=
    this._form =3D $(document.createElement('form'));=0A=
    this._form.id =3D this.options.formId;=0A=
    this._form.addClassName(this.options.formClassName);=0A=
    this._form.onsubmit =3D this._boundSubmitHandler;=0A=
    this.createEditField();=0A=
    if ('textarea' =3D=3D this._controls.editor.tagName.toLowerCase())=0A=
      this._form.appendChild(document.createElement('br'));=0A=
    if (this.options.onFormCustomization)=0A=
      this.options.onFormCustomization(this, this._form);=0A=
    addText('Before', this.options.okControl || =
this.options.cancelControl);=0A=
    this.createControl('ok', this._boundSubmitHandler);=0A=
    addText('Between', this.options.okControl && =
this.options.cancelControl);=0A=
    this.createControl('cancel', this._boundCancelHandler, =
'editor_cancel');=0A=
    addText('After', this.options.okControl || =
this.options.cancelControl);=0A=
  },=0A=
  destroy: function() {=0A=
    if (this._oldInnerHTML)=0A=
      this.element.innerHTML =3D this._oldInnerHTML;=0A=
    this.leaveEditMode();=0A=
    this.unregisterListeners();=0A=
  },=0A=
  enterEditMode: function(e) {=0A=
    if (this._saving || this._editing) return;=0A=
    this._editing =3D true;=0A=
    this.triggerCallback('onEnterEditMode');=0A=
    if (this.options.externalControl)=0A=
      this.options.externalControl.hide();=0A=
    this.element.hide();=0A=
    this.createForm();=0A=
    this.element.parentNode.insertBefore(this._form, this.element);=0A=
    if (!this.options.loadTextURL)=0A=
      this.postProcessEditField();=0A=
    if (e) Event.stop(e);=0A=
  },=0A=
  enterHover: function(e) {=0A=
    if (this.options.hoverClassName)=0A=
      this.element.addClassName(this.options.hoverClassName);=0A=
    if (this._saving) return;=0A=
    this.triggerCallback('onEnterHover');=0A=
  },=0A=
  getText: function() {=0A=
    return this.element.innerHTML.unescapeHTML();=0A=
  },=0A=
  handleAJAXFailure: function(transport) {=0A=
    this.triggerCallback('onFailure', transport);=0A=
    if (this._oldInnerHTML) {=0A=
      this.element.innerHTML =3D this._oldInnerHTML;=0A=
      this._oldInnerHTML =3D null;=0A=
    }=0A=
  },=0A=
  handleFormCancellation: function(e) {=0A=
    this.wrapUp();=0A=
    if (e) Event.stop(e);=0A=
  },=0A=
  handleFormSubmission: function(e) {=0A=
    var form =3D this._form;=0A=
    var value =3D $F(this._controls.editor);=0A=
    this.prepareSubmission();=0A=
    var params =3D this.options.callback(form, value) || '';=0A=
    if (Object.isString(params))=0A=
      params =3D params.toQueryParams();=0A=
    params.editorId =3D this.element.id;=0A=
    if (this.options.htmlResponse) {=0A=
      var options =3D Object.extend({ evalScripts: true }, =
this.options.ajaxOptions);=0A=
      Object.extend(options, {=0A=
        parameters: params,=0A=
        onComplete: this._boundWrapperHandler,=0A=
        onFailure: this._boundFailureHandler=0A=
      });=0A=
      new Ajax.Updater({ success: this.element }, this.url, options);=0A=
    } else {=0A=
      var options =3D Object.extend({ method: 'get' }, =
this.options.ajaxOptions);=0A=
      Object.extend(options, {=0A=
        parameters: params,=0A=
        onComplete: this._boundWrapperHandler,=0A=
        onFailure: this._boundFailureHandler=0A=
      });=0A=
      new Ajax.Request(this.url, options);=0A=
    }=0A=
    if (e) Event.stop(e);=0A=
  },=0A=
  leaveEditMode: function() {=0A=
    this.element.removeClassName(this.options.savingClassName);=0A=
    this.removeForm();=0A=
    this.leaveHover();=0A=
    this.element.style.backgroundColor =3D this._originalBackground;=0A=
    this.element.show();=0A=
    if (this.options.externalControl)=0A=
      this.options.externalControl.show();=0A=
    this._saving =3D false;=0A=
    this._editing =3D false;=0A=
    this._oldInnerHTML =3D null;=0A=
    this.triggerCallback('onLeaveEditMode');=0A=
  },=0A=
  leaveHover: function(e) {=0A=
    if (this.options.hoverClassName)=0A=
      this.element.removeClassName(this.options.hoverClassName);=0A=
    if (this._saving) return;=0A=
    this.triggerCallback('onLeaveHover');=0A=
  },=0A=
  loadExternalText: function() {=0A=
    this._form.addClassName(this.options.loadingClassName);=0A=
    this._controls.editor.disabled =3D true;=0A=
    var options =3D Object.extend({ method: 'get' }, =
this.options.ajaxOptions);=0A=
    Object.extend(options, {=0A=
      parameters: 'editorId=3D' + encodeURIComponent(this.element.id),=0A=
      onComplete: Prototype.emptyFunction,=0A=
      onSuccess: function(transport) {=0A=
        this._form.removeClassName(this.options.loadingClassName);=0A=
        var text =3D transport.responseText;=0A=
        if (this.options.stripLoadedTextTags)=0A=
          text =3D text.stripTags();=0A=
        this._controls.editor.value =3D text;=0A=
        this._controls.editor.disabled =3D false;=0A=
        this.postProcessEditField();=0A=
      }.bind(this),=0A=
      onFailure: this._boundFailureHandler=0A=
    });=0A=
    new Ajax.Request(this.options.loadTextURL, options);=0A=
  },=0A=
  postProcessEditField: function() {=0A=
    var fpc =3D this.options.fieldPostCreation;=0A=
    if (fpc)=0A=
      $(this._controls.editor)['focus' =3D=3D fpc ? 'focus' : =
'activate']();=0A=
  },=0A=
  prepareOptions: function() {=0A=
    this.options =3D Object.clone(Ajax.InPlaceEditor.DefaultOptions);=0A=
    Object.extend(this.options, Ajax.InPlaceEditor.DefaultCallbacks);=0A=
    [this._extraDefaultOptions].flatten().compact().each(function(defs) {=0A=
      Object.extend(this.options, defs);=0A=
    }.bind(this));=0A=
  },=0A=
  prepareSubmission: function() {=0A=
    this._saving =3D true;=0A=
    this.removeForm();=0A=
    this.leaveHover();=0A=
    this.showSaving();=0A=
  },=0A=
  registerListeners: function() {=0A=
    this._listeners =3D { };=0A=
    var listener;=0A=
    $H(Ajax.InPlaceEditor.Listeners).each(function(pair) {=0A=
      listener =3D this[pair.value].bind(this);=0A=
      this._listeners[pair.key] =3D listener;=0A=
      if (!this.options.externalControlOnly)=0A=
        this.element.observe(pair.key, listener);=0A=
      if (this.options.externalControl)=0A=
        this.options.externalControl.observe(pair.key, listener);=0A=
    }.bind(this));=0A=
  },=0A=
  removeForm: function() {=0A=
    if (!this._form) return;=0A=
    this._form.remove();=0A=
    this._form =3D null;=0A=
    this._controls =3D { };=0A=
  },=0A=
  showSaving: function() {=0A=
    this._oldInnerHTML =3D this.element.innerHTML;=0A=
    this.element.innerHTML =3D this.options.savingText;=0A=
    this.element.addClassName(this.options.savingClassName);=0A=
    this.element.style.backgroundColor =3D this._originalBackground;=0A=
    this.element.show();=0A=
  },=0A=
  triggerCallback: function(cbName, arg) {=0A=
    if ('function' =3D=3D typeof this.options[cbName]) {=0A=
      this.options[cbName](this, arg);=0A=
    }=0A=
  },=0A=
  unregisterListeners: function() {=0A=
    $H(this._listeners).each(function(pair) {=0A=
      if (!this.options.externalControlOnly)=0A=
        this.element.stopObserving(pair.key, pair.value);=0A=
      if (this.options.externalControl)=0A=
        this.options.externalControl.stopObserving(pair.key, pair.value);=0A=
    }.bind(this));=0A=
  },=0A=
  wrapUp: function(transport) {=0A=
    this.leaveEditMode();=0A=
    // Can't use triggerCallback due to backward compatibility: requires=0A=
    // binding + direct element=0A=
    this._boundComplete(transport, this.element);=0A=
  }=0A=
});=0A=
=0A=
Object.extend(Ajax.InPlaceEditor.prototype, {=0A=
  dispose: Ajax.InPlaceEditor.prototype.destroy=0A=
});=0A=
=0A=
Ajax.InPlaceCollectionEditor =3D Class.create(Ajax.InPlaceEditor, {=0A=
  initialize: function($super, element, url, options) {=0A=
    this._extraDefaultOptions =3D =
Ajax.InPlaceCollectionEditor.DefaultOptions;=0A=
    $super(element, url, options);=0A=
  },=0A=
=0A=
  createEditField: function() {=0A=
    var list =3D document.createElement('select');=0A=
    list.name =3D this.options.paramName;=0A=
    list.size =3D 1;=0A=
    this._controls.editor =3D list;=0A=
    this._collection =3D this.options.collection || [];=0A=
    if (this.options.loadCollectionURL)=0A=
      this.loadCollection();=0A=
    else=0A=
      this.checkForExternalText();=0A=
    this._form.appendChild(this._controls.editor);=0A=
  },=0A=
=0A=
  loadCollection: function() {=0A=
    this._form.addClassName(this.options.loadingClassName);=0A=
    this.showLoadingText(this.options.loadingCollectionText);=0A=
    var options =3D Object.extend({ method: 'get' }, =
this.options.ajaxOptions);=0A=
    Object.extend(options, {=0A=
      parameters: 'editorId=3D' + encodeURIComponent(this.element.id),=0A=
      onComplete: Prototype.emptyFunction,=0A=
      onSuccess: function(transport) {=0A=
        var js =3D transport.responseText.strip();=0A=
        if (!/^\[.*\]$/.test(js)) // TODO: improve sanity check=0A=
          throw('Server returned an invalid collection representation.');=0A=
        this._collection =3D eval(js);=0A=
        this.checkForExternalText();=0A=
      }.bind(this),=0A=
      onFailure: this.onFailure=0A=
    });=0A=
    new Ajax.Request(this.options.loadCollectionURL, options);=0A=
  },=0A=
=0A=
  showLoadingText: function(text) {=0A=
    this._controls.editor.disabled =3D true;=0A=
    var tempOption =3D this._controls.editor.firstChild;=0A=
    if (!tempOption) {=0A=
      tempOption =3D document.createElement('option');=0A=
      tempOption.value =3D '';=0A=
      this._controls.editor.appendChild(tempOption);=0A=
      tempOption.selected =3D true;=0A=
    }=0A=
    tempOption.update((text || '').stripScripts().stripTags());=0A=
  },=0A=
=0A=
  checkForExternalText: function() {=0A=
    this._text =3D this.getText();=0A=
    if (this.options.loadTextURL)=0A=
      this.loadExternalText();=0A=
    else=0A=
      this.buildOptionList();=0A=
  },=0A=
=0A=
  loadExternalText: function() {=0A=
    this.showLoadingText(this.options.loadingText);=0A=
    var options =3D Object.extend({ method: 'get' }, =
this.options.ajaxOptions);=0A=
    Object.extend(options, {=0A=
      parameters: 'editorId=3D' + encodeURIComponent(this.element.id),=0A=
      onComplete: Prototype.emptyFunction,=0A=
      onSuccess: function(transport) {=0A=
        this._text =3D transport.responseText.strip();=0A=
        this.buildOptionList();=0A=
      }.bind(this),=0A=
      onFailure: this.onFailure=0A=
    });=0A=
    new Ajax.Request(this.options.loadTextURL, options);=0A=
  },=0A=
=0A=
  buildOptionList: function() {=0A=
    this._form.removeClassName(this.options.loadingClassName);=0A=
    this._collection =3D this._collection.map(function(entry) {=0A=
      return 2 =3D=3D=3D entry.length ? entry : [entry, entry].flatten();=0A=
    });=0A=
    var marker =3D ('value' in this.options) ? this.options.value : =
this._text;=0A=
    var textFound =3D this._collection.any(function(entry) {=0A=
      return entry[0] =3D=3D marker;=0A=
    }.bind(this));=0A=
    this._controls.editor.update('');=0A=
    var option;=0A=
    this._collection.each(function(entry, index) {=0A=
      option =3D document.createElement('option');=0A=
      option.value =3D entry[0];=0A=
      option.selected =3D textFound ? entry[0] =3D=3D marker : 0 =3D=3D =
index;=0A=
      option.appendChild(document.createTextNode(entry[1]));=0A=
      this._controls.editor.appendChild(option);=0A=
    }.bind(this));=0A=
    this._controls.editor.disabled =3D false;=0A=
    Field.scrollFreeActivate(this._controls.editor);=0A=
  }=0A=
});=0A=
=0A=
//**** DEPRECATION LAYER FOR InPlace[Collection]Editor! ****=0A=
//**** This only  exists for a while,  in order to  let ****=0A=
//**** users adapt to  the new API.  Read up on the new ****=0A=
//**** API and convert your code to it ASAP!            ****=0A=
=0A=
Ajax.InPlaceEditor.prototype.initialize.dealWithDeprecatedOptions =3D =
function(options) {=0A=
  if (!options) return;=0A=
  function fallback(name, expr) {=0A=
    if (name in options || expr =3D=3D=3D undefined) return;=0A=
    options[name] =3D expr;=0A=
  };=0A=
  fallback('cancelControl', (options.cancelLink ? 'link' : =
(options.cancelButton ? 'button' :=0A=
    options.cancelLink =3D=3D options.cancelButton =3D=3D false ? false =
: undefined)));=0A=
  fallback('okControl', (options.okLink ? 'link' : (options.okButton ? =
'button' :=0A=
    options.okLink =3D=3D options.okButton =3D=3D false ? false : =
undefined)));=0A=
  fallback('highlightColor', options.highlightcolor);=0A=
  fallback('highlightEndColor', options.highlightendcolor);=0A=
};=0A=
=0A=
Object.extend(Ajax.InPlaceEditor, {=0A=
  DefaultOptions: {=0A=
    ajaxOptions: { },=0A=
    autoRows: 3,                                // Use when multi-line =
w/ rows =3D=3D 1=0A=
    cancelControl: 'link',                      // 'link'|'button'|false=0A=
    cancelText: 'cancel',=0A=
    clickToEditText: 'Click to edit',=0A=
    externalControl: null,                      // id|elt=0A=
    externalControlOnly: false,=0A=
    fieldPostCreation: 'activate',              // =
'activate'|'focus'|false=0A=
    formClassName: 'inplaceeditor-form',=0A=
    formId: null,                               // id|elt=0A=
    highlightColor: '#ffff99',=0A=
    highlightEndColor: '#ffffff',=0A=
    hoverClassName: '',=0A=
    htmlResponse: true,=0A=
    loadingClassName: 'inplaceeditor-loading',=0A=
    loadingText: 'Loading...',=0A=
    okControl: 'button',                        // 'link'|'button'|false=0A=
    okText: 'ok',=0A=
    paramName: 'value',=0A=
    rows: 1,                                    // If 1 and multi-line, =
uses autoRows=0A=
    savingClassName: 'inplaceeditor-saving',=0A=
    savingText: 'Saving...',=0A=
    size: 0,=0A=
    stripLoadedTextTags: false,=0A=
    submitOnBlur: false,=0A=
    textAfterControls: '',=0A=
    textBeforeControls: '',=0A=
    textBetweenControls: ''=0A=
  },=0A=
  DefaultCallbacks: {=0A=
    callback: function(form) {=0A=
      return Form.serialize(form);=0A=
    },=0A=
    onComplete: function(transport, element) {=0A=
      // For backward compatibility, this one is bound to the IPE, and =
passes=0A=
      // the element directly.  It was too often customized, so we don't =
break it.=0A=
      new Effect.Highlight(element, {=0A=
        startcolor: this.options.highlightColor, keepBackgroundImage: =
true });=0A=
    },=0A=
    onEnterEditMode: null,=0A=
    onEnterHover: function(ipe) {=0A=
      ipe.element.style.backgroundColor =3D ipe.options.highlightColor;=0A=
      if (ipe._effect)=0A=
        ipe._effect.cancel();=0A=
    },=0A=
    onFailure: function(transport, ipe) {=0A=
      alert('Error communication with the server: ' + =
transport.responseText.stripTags());=0A=
    },=0A=
    onFormCustomization: null, // Takes the IPE and its generated form, =
after editor, before controls.=0A=
    onLeaveEditMode: null,=0A=
    onLeaveHover: function(ipe) {=0A=
      ipe._effect =3D new Effect.Highlight(ipe.element, {=0A=
        startcolor: ipe.options.highlightColor, endcolor: =
ipe.options.highlightEndColor,=0A=
        restorecolor: ipe._originalBackground, keepBackgroundImage: true=0A=
      });=0A=
    }=0A=
  },=0A=
  Listeners: {=0A=
    click: 'enterEditMode',=0A=
    keydown: 'checkForEscapeOrReturn',=0A=
    mouseover: 'enterHover',=0A=
    mouseout: 'leaveHover'=0A=
  }=0A=
});=0A=
=0A=
Ajax.InPlaceCollectionEditor.DefaultOptions =3D {=0A=
  loadingCollectionText: 'Loading options...'=0A=
};=0A=
=0A=
// Delayed observer, like Form.Element.Observer,=0A=
// but waits for delay after last key input=0A=
// Ideal for live-search fields=0A=
=0A=
Form.Element.DelayedObserver =3D Class.create({=0A=
  initialize: function(element, delay, callback) {=0A=
    this.delay     =3D delay || 0.5;=0A=
    this.element   =3D $(element);=0A=
    this.callback  =3D callback;=0A=
    this.timer     =3D null;=0A=
    this.lastValue =3D $F(this.element);=0A=
    =
Event.observe(this.element,'keyup',this.delayedListener.bindAsEventListen=
er(this));=0A=
  },=0A=
  delayedListener: function(event) {=0A=
    if(this.lastValue =3D=3D $F(this.element)) return;=0A=
    if(this.timer) clearTimeout(this.timer);=0A=
    this.timer =3D setTimeout(this.onTimerEvent.bind(this), this.delay * =
1000);=0A=
    this.lastValue =3D $F(this.element);=0A=
  },=0A=
  onTimerEvent: function() {=0A=
    this.timer =3D null;=0A=
    this.callback(this.element, $F(this.element));=0A=
  }=0A=
});
------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/javascripts/application.js?1323190114

// Place your application-specific JavaScript functions and classes here=0A=
// This file is automatically included by javascript_include_tag =
:defaults=0A=
=0A=
function close_window() {=0A=
	window.close();=0A=
}=0A=
=0A=
function replace_self(link) {=0A=
	self.location =3D link;=0A=
}=0A=
=0A=
function go_search(keyword) {=0A=
	window.location =3D "/search/" + keyword;=0A=
}=0A=
=0A=
function impromptu_alert(title, message) {=0A=
	content =3D "<h2>"+title+"</h2>"+message;=0A=
	J =3D jQuery.noConflict();=0A=
	J.prompt(content);=0A=
}=0A=

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/javascripts/syntaxHighlighter/scripts/shCore.js?1323190114

/**
 * SyntaxHighlighter
 * http://alexgorbatchev.com/
 *
 * SyntaxHighlighter is donationware. If you are using it, please =
donate.
 * http://alexgorbatchev.com/wiki/SyntaxHighlighter:Donate
 *
 * @version
 * 2.1.364 (October 15 2009)
 *=20
 * @copyright
 * Copyright (C) 2004-2009 Alex Gorbatchev.
 *
 * @license
 * This file is part of SyntaxHighlighter.
 *=20
 * SyntaxHighlighter is free software: you can redistribute it and/or =
modify
 * it under the terms of the GNU Lesser General Public License as =
published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *=20
 * SyntaxHighlighter is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *=20
 * You should have received a copy of the GNU General Public License
 * along with SyntaxHighlighter.  If not, see =
<http://www.gnu.org/copyleft/lesser.html>.
 */
eval(function(p,a,c,k,e,d){e=3Dfunction(c){return(c<a?'':e(parseInt(c/a))=
)+((c=3Dc%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace=
(/^/,String)){while(c--){d[e(c)]=3Dk[c]||e(c)}k=3D[function(e){return =
d[e]}];e=3Dfunction(){return'\\w+'};c=3D1};while(c--){if(k[c]){p=3Dp.repl=
ace(new RegExp('\\b'+e(c)+'\\b','g'),k[c])}}return p}('c(!1q.2X){h =
2X=3Dl(){h =
p=3D{6b:{"1s-R":"","84-2y":1,"83-2y-7W":I,"1I":v,"8d-89":I,"1H-2Q":4,"3g"=
:I,"1w":I,"66":N,"8k-8l":I,"88":N,"5h-1p":I,"1L-1l":N},M:{4T:I,69:v,5l:16=
,5k:16,8B:N,8f:N,8s:"54",1f:{5q:"53 1g",5d:"9N 1g",5i:"9O 6q 6p",78:"9M =
C 9L 1V 9I 6p 9J",3t:"3t",6C:"?",1A:"2X\\n\\n",6T:"9K\'t 9P 2O D: =
",7x:"9Q 9W\'t 9X D 1L-1l 9V: ",77:"<!9U 1L 9R \\"-//9S//6H 9T 1.0 =
9H//9G\\" \\"2s://5x.6x.6B/9v/6D/6H/6D-9w.9u\\"><1L =
9t=3D\\"2s://5x.6x.6B/9s/9x\\"><6z><9y 2s-9E=3D\\"9F-9D\\" =
63=3D\\"1X/1L; 9C=3D9z-8\\" /><3i>9A 2X</3i></6z><33 =
1m=3D\\"39-9Y:9Z,an,ao,am-al;ai-3f:#aj;3f:#ak;39-2Q:ap;1X-6G:6u;\\"><A =
1m=3D\\"1X-6G:6u;6w-4w:aw;\\"><A 1m=3D\\"39-2Q:au-at;\\">2X</A><A =
1m=3D\\"39-2Q:.as;6w-9p:ah;\\"><A>6O 2.1.ag (a5 15 6h)</A><A><a =
27=3D\\"2s://6I.3k\\" a6=3D\\"4k\\" =
1m=3D\\"3f:#6F;1X-6t:6L;\\">2s://6I.3k</a></A><A>a3 a0 a1 f 1l, a2 <a =
27=3D\\"a7://5x.a8.3k/ae-af/ad?ac=3Da9-aa&ab=3Dax\\" =
1m=3D\\"3f:#6F;1X-6t:6L;\\">8R</a> 6q 8Q 8O 8W!</A></A><A>8V C 8U =
8X.</A><A>8K 8N-6h 8M =
8S.</A></A></33></1L>"},8u:N},1r:{4Z:v,9o:v,3m:v,6f:{}},2d:{},8h:{9g:/\\/=
\\*[\\s\\S]*?\\*\\//3b,9d:/\\/\\/.*$/3b,9e:/#.*$/3b,9j:/"([^\\\\"\\n]|\\\=
\.)*"/g,9n:/\'([^\\\\\'\\n]|\\\\.)*\'/g,9m:/"([^\\\\"]|\\\\.)*"/g,8Y:/\'(=
[^\\\\\']|\\\\.)*\'/g,9k:/(&X;|<)!--[\\s\\S]*?--(&Z;|>)/3b,43:/&X;\\w+:\\=
/\\/[\\w-.\\/?%&=3D@:;]*&Z;|\\w+:\\/\\/[\\w-.\\/?%&=3D@:;]*/g,9c:{G:/(&X;=
|<)\\?=3D?/g,1d:/\\?(&Z;|>)/g},93:{G:/(&X;|<)%=3D?/g,1d:/%(&Z;|>)/g},92:{=
G:/(&X;|<)\\s*1l.*?(&Z;|>)/4e,1d:/(&X;|<)\\/\\s*1l\\s*(&Z;|>)/4e}},1w:{1c=
:l(3O){h 3T=3DQ.22("3Y"),5s=3Dp.1w.7d;3T.L=3D"1w";D(h 30 1V 5s){h =
6i=3D5s[30],5t=3DW =
6i(3O),1Y=3D5t.1c();3O.6g[30]=3D5t;c(1Y=3D=3Dv){1J}c(7X(1Y)=3D=3D"91"){1Y=
=3Dp.1w.6m(1Y,3O.1k,30)}1Y.L+=3D"5v "+30;3T.2p(1Y)}q =
3T},6m:l(5L,7j,5K){h =
a=3DQ.22("a"),5N=3Da.1m,5D=3Dp.M,5M=3D5D.5l,5J=3D5D.5k;a.27=3D"#"+5K;a.3i=
=3D5L;a.5j=3D7j;a.76=3D5K;a.1Q=3D5L;c(40(5M)=3D=3DN){5N.26=3D5M+"75"}c(40=
(5J)=3D=3DN){5N.2e=3D5J+"75"}a.9l=3Dl(e){97{p.1w.6M(f,e||1q.6Y,f.5j,f.76)=
}98(e){p.B.1A(e.6n)}q N};q a},6M:l(7i,7g,7b,7h,7f){h =
5G=3Dp.1r.6f[7b],5H;c(5G=3D=3Dv||(5H=3D5G.6g[7h])=3D=3Dv){q v}q =
5H.2z(7i,7g,7f)},7d:{5q:l(5b){f.1c=3Dl(){c(5b.V("66")!=3DI){q}q =
p.M.1f.5q};f.2z=3Dl(5c,8T,8P){h =
A=3D5b.A;5c.7y.4p(5c);A.L=3DA.L.E("5O","")}},5d:l(6R){f.1c=3Dl(){q =
p.M.1f.5d};f.2z=3Dl(b1,bU,bV){h =
3J=3Dp.B.3d(6R.5g).E(/</g,"&X;"),2A=3Dp.B.4z("","4k",bT,bS,"bQ=3D0, =
bR=3D1, bW=3D0, =
7a=3D1");3J=3Dp.B.2T(3J);2A.Q.3D("<54>"+3J+"</54>");2A.Q.4o()}},5i:l(64){=
h 3C,c2,6a=3D64.1k;f.1c=3Dl(){h 2V=3Dp.M;c(2V.69=3D=3Dv){q v}l 1E(56){h =
5m=3D"";D(h 5f 1V 56){5m+=3D"<c1 R=3D\'"+5f+"\' 24=3D\'"+56[5f]+"\'/>"}q =
5m};l 2i(5n){h 5p=3D"";D(h 5o 1V 5n){5p+=3D" "+5o+"=3D\'"+5n[5o]+"\'"}q =
5p};h =
67=3D{26:2V.5l,2e:2V.5k,1k:6a+"bY",4r:"bZ/x-71-6V",3i:p.M.1f.5i},5V=3D{bE=
:"ay",bD:"bC",bA:"5j=3D"+6a,c4:"N"},5U=3D2V.69,3x;c(/bG/i.1R(6K.7k)){3x=3D=
"<4h"+2i({bH:"bM:bN-bL-bK-bI-bJ",c3:"2s://ck.cj.3k/cm/71/c9/6V/c8.c7#6O=3D=
9,0,0,0"})+2i(67)+">"+1E(5V)+1E({c6:5U})+"</4h>"}F{3x=3D"<ca"+2i(67)+2i(5=
V)+2i({cg:5U})+"/>"}3C=3DQ.22("A");3C.1Q=3D3x;q 3C};f.2z=3Dl(cf,ce,62){h =
7c=3D62.cd;6U(7c){2K"7q":h =
61=3Dp.B.2T(p.B.3d(64.5g).E(/&X;/g,"<").E(/&Z;/g,">").E(/&aT;/g,"&"));c(1=
q.74){1q.74.aU("1X",61)}F{q =
p.B.2T(61)}2K"aR":p.B.1A(p.M.1f.78);2h;2K"aP":p.B.1A(62.6n);2h}}},aV:l(65=
){f.1c=3Dl(){q p.M.1f.3t};f.2z=3Dl(aW,bz,b0){h =
1Z=3DQ.22("aZ"),1N=3Dv;c(p.1r.3m!=3Dv){Q.33.4p(p.1r.3m)}p.1r.3m=3D1Z;1Z.1=
m.aX=3D"aY:aO;26:6r;2e:6r;G:-6j;4w:-6j;";Q.33.2p(1Z);1N=3D1Z.5Q.Q;6J(1N,1=
q.Q);1N.3D("<A 1s=3D\\""+65.A.L.E("5O","")+" =
aD\\">"+65.A.1Q+"</A>");1N.4o();1Z.5Q.4F();1Z.5Q.3t();l 6J(6N,6E){h =
2I=3D6E.4O("4n");D(h =
i=3D0;i<2I.u;i++){c(2I[i].6y.6P()=3D=3D"6A"&&/aE\\.1a$/.1R(2I[i].27)){6N.=
3D("<4n 4r=3D\\"1X/1a\\" 6y=3D\\"6A\\" =
27=3D\\""+2I[i].27+"\\"></4n>")}}}}},az:l(aA){f.1c=3Dl(){q =
p.M.1f.6C};f.2z=3Dl(aF,aG){h =
2A=3Dp.B.4z("","4k",aM,aK,"7a=3D0"),1N=3D2A.Q;1N.3D(p.M.1f.77);1N.4o();2A=
.4F()}}}},B:{Y:l(49,73,3y){3y=3D3e.aH(3y||0,0);D(h =
i=3D3y;i<49.u;i++){c(49[i]=3D=3D73){q i}}q-1},6d:l(72){q =
72+3e.aI(3e.b2()*b3).2u()},6c:l(51,4L){h 3h=3D{},1W;D(1W 1V =
51){3h[1W]=3D51[1W]}D(1W 1V 4L){3h[1W]=3D4L[1W]}q =
3h},80:l(4J){6U(4J){2K"I":q I;2K"N":q N}q 4J},4z:l(43,6W,4B,4H,2N){h =
x=3D(6X.26-4B)/2,y=3D(6X.2e-4H)/2;2N+=3D", G=3D"+x+", 4w=3D"+y+", =
26=3D"+4B+", 2e=3D"+4H;2N=3D2N.E(/^,/,"");h =
4E=3D1q.bk(43,6W,2N);4E.4F();q =
4E},7C:l(1G,1T,1U){c(1G.6Z){1G["e"+1T+1U]=3D1U;1G[1T+1U]=3Dl(){1G["e"+1T+=
1U](1q.6Y)};1G.6Z("bw"+1T,1G[1T+1U])}F{1G.bv(1T,1U,N)}},1A:l(z){1A(p.M.1f=
.1A+z)},4u:l(4N,6Q){h 2r=3Dp.1r.4Z,3V=3Dv;c(2r=3D=3Dv){2r=3D{};D(h 2L 1V =
p.2d){h 42=3Dp.2d[2L].bu;c(42=3D=3Dv){1J}p.2d[2L].R=3D2L.6P();D(h =
i=3D0;i<42.u;i++){2r[42[i]]=3D2L}}p.1r.4Z=3D2r}3V=3Dp.2d[2r[4N]];c(3V=3D=3D=
v&&6Q!=3DN){p.B.1A(p.M.1f.6T+4N)}q 3V},46:l(z,6S){h 2E=3Dz.1P("\\n");D(h =
i=3D0;i<2E.u;i++){2E[i]=3D6S(2E[i])}q 2E.5A("\\n")},8C:l(z){q z.E(/^[ =
]*[\\n]+|[\\n]*[ ]*$/g,"")},8H:l(z){h 3X,45=3D{},4P=3DW =
U("^\\\\[(?<4c>(.*?))\\\\]$"),7e=3DW =
U("(?<R>[\\\\w-]+)"+"\\\\s*:\\\\s*"+"(?<24>"+"[\\\\w-%#]+|"+"\\\\[.*?\\\\=
]|"+"\\".*?\\"|"+"\'.*?\'"+")\\\\s*;?","g");2j((3X=3D7e.T(z))!=3Dv){h =
2f=3D3X.24.E(/^[\'"]|[\'"]$/g,"");c(2f!=3Dv&&4P.1R(2f)){h =
m=3D4P.T(2f);2f=3Dm.4c.u>0?m.4c.1P(/\\s*,\\s*/):[]}45[3X.R]=3D2f}q =
45},7K:l(z,1a){c(z=3D=3Dv||z.u=3D=3D0||z=3D=3D"\\n"){q =
z}z=3Dz.E(/</g,"&X;");z=3Dz.E(/ {2,}/g,l(m){h 4t=3D"";D(h =
i=3D0;i<m.u-1;i++){4t+=3D"&2B;"}q 4t+" =
"});c(1a!=3Dv){z=3Dp.B.46(z,l(2l){c(2l.u=3D=3D0){q""}h =
3W=3D"";2l=3D2l.E(/^(&2B;| )+/,l(s){3W=3Ds;q""});c(2l.u=3D=3D0){q 3W}q =
3W+"<C 1s=3D\\""+1a+"\\">"+2l+"</C>"})}q z},7V:l(6l,6o){h =
32=3D6l.2u();2j(32.u<6o){32=3D"0"+32}q 32},6k:l(){h =
3w=3DQ.22("A"),3B,3o=3D0,44=3DQ.33,1k=3Dp.B.6d("6k"),36=3D"<A =
1s=3D\\"",2Y=3D"</A>",4U=3D"</4G>";3w.1Q=3D36+"6e\\">"+36+"1p\\">"+36+"2y=
\\">"+36+"63"+"\\"><4G 1s=3D\\"b5\\"><4G =
1k=3D\\""+1k+"\\">&2B;"+4U+4U+2Y+2Y+2Y+2Y;44.2p(3w);3B=3DQ.bb(1k);c(/bg/i=
.1R(6K.7k)){h =
6v=3D1q.be(3B,v);3o=3D85(6v.bc("26"))}F{3o=3D3B.bd}44.4p(3w);q =
3o},8b:l(79,6s){h 1H=3D"";D(h i=3D0;i<6s;i++){1H+=3D" "}q =
79.E(/\\t/g,1H)},8a:l(2Z,4f){h bF=3D2Z.1P("\\n"),1H=3D"\\t",4d=3D"";D(h =
i=3D0;i<50;i++){4d+=3D"                    "}l 8x(3s,18,8A){q =
3s.29(0,18)+4d.29(0,8A)+3s.29(18+1,3s.u)};2Z=3Dp.B.46(2Z,l(20){c(20.Y(1H)=
=3D=3D-1){q 20}h 18=3D0;2j((18=3D20.Y(1H))!=3D-1){h =
8w=3D4f-18%4f;20=3D8x(20,18,8w)}q 20});q 2Z},3d:l(z){h =
br=3D/<br\\s*\\/?>|&X;br\\s*\\/?&Z;/4e;c(p.M.8B=3D=3DI){z=3Dz.E(br,"\\n")=
}c(p.M.8f=3D=3DI){z=3Dz.E(br,"")}q z},2G:l(z){q =
z.E(/^\\s+|\\s+$/g,"")},2T:l(z){h 21=3Dp.B.3d(z).1P("\\n"),bf=3DW =
bh(),8D=3D/^\\s*/,2a=3Dba;D(h i=3D0;i<21.u&&2a>0;i++){h =
4x=3D21[i];c(p.B.2G(4x).u=3D=3D0){1J}h 4I=3D8D.T(4x);c(4I=3D=3Dv){q =
z}2a=3D3e.2a(4I[0].u,2a)}c(2a>0){D(h =
i=3D0;i<21.u;i++){21[i]=3D21[i].29(2a)}}q =
21.5A("\\n")},82:l(35,31){c(35.H<31.H){q-1}F{c(35.H>31.H){q =
1}F{c(35.u<31.u){q-1}F{c(35.u>31.u){q 1}}}}q 0},2D:l(8q,34){l =
8n(4D,8r){q[W p.4v(4D[0],4D.H,8r.1a)]};h =
b4=3D0,4s=3Dv,3L=3D[],8p=3D34.4X?34.4X:8n;2j((4s=3D34.3K.T(8q))!=3Dv){3L=3D=
3L.2t(8p(4s,34))}q 3L},8m:l(8o){h X=3D"&X;",Z=3D"&Z;";q =
8o.E(p.8h.43,l(m){h =
4j=3D"",47=3D"";c(m.Y(X)=3D=3D0){47=3DX;m=3Dm.3U(X.u)}c(m.Y(Z)=3D=3Dm.u-Z=
.u){m=3Dm.3U(0,m.u-Z.u);4j=3DZ}q 47+"<a =
27=3D\\""+m+"\\">"+m+"</a>"+4j})},8v:l(){h 3N=3DQ.4O("1l"),4i=3D[];D(h =
i=3D0;i<3N.u;i++){c(3N[i].4r=3D=3D"6e"){4i.K(3N[i])}}q 4i},8I:l(4b){h =
4q=3D"<![b6[",3S=3D"]]>",1v=3Dp.B.2G(4b),3R=3DN;c(1v.Y(4q)=3D=3D0){1v=3D1=
v.3U(4q.u);3R=3DI}c(1v.Y(3S)=3D=3D1v.u-3S.u){1v=3D1v.3U(0,1v.u-3S.u);3R=3D=
I}q 3R?1v:4b}},1I:l(8E,4R){l 8e(4g){h 4Q=3D[];D(h =
i=3D0;i<4g.u;i++){4Q.K(4g[i])}q 4Q};h =
2q=3D4R?[4R]:8e(Q.4O(p.M.8s)),8J=3D"1Q",2k=3Dv,4S=3Dp.M;c(4S.4T){2q=3D2q.=
2t(p.B.8v())}c(2q.u=3D=3D=3D0){q}D(h i=3D0;i<2q.u;i++){h =
2M=3D2q[i],28=3Dp.B.8H(2M.L),1D,2W,25;28=3Dp.B.6c(8E,28);1D=3D28["2O"];c(=
1D=3D=3Dv){1J}c(28["1L-1l"]=3D=3D"I"||p.6b["1L-1l"]=3D=3DI){2k=3DW =
p.4a(1D);1D=3D"b9"}F{h 3P=3Dp.B.4u(1D);c(3P){1D=3D3P.R;2k=3DW =
3P()}F{1J}}2W=3D2M[8J];c(4S.4T){2W=3Dp.B.8I(2W)}28["2O-R"]=3D1D;2k.1I(2W,=
28);25=3D2k.A;c(p.M.8u){25=3DQ.22("bj");25.24=3D2k.A.1Q;25.1m.26=3D"bt";2=
5.1m.2e=3D"bx"}2M.7y.bs(25,2M)}},bq:l(7H){p.B.7C(1q,"bl",l(){p.1I(7H)})}}=
;p.4v=3Dl(4A,7G,1a){f.24=3D4A;f.H=3D7G;f.u=3D4A.u;f.1a=3D1a;f.5Y=3Dv};p.4=
v.14.2u=3Dl(){q f.24};p.4a=3Dl(4K){h 3z=3Dp.B.4u(4K),2g,4W=3DW =
p.2d.bm(),bn=3Dv;c(3z=3D=3Dv){q}2g=3DW =
3z();f.4m=3D4W;c(2g.3I=3D=3Dv){p.B.1A(p.M.1f.7x+4K);q}4W.59.K({3K:2g.3I.C=
,4X:7p});l 3A(4Y,7w){D(h j=3D0;j<4Y.u;j++){4Y[j].H+=3D7w}};l 7p(19,bp){h =
7n=3D19.C,1o=3D[],4M=3D2g.59,7l=3D19.H+19.G.u,2U=3D2g.3I,1n;D(h =
i=3D0;i<4M.u;i++){1n=3Dp.B.2D(7n,4M[i]);3A(1n,7l);1o=3D1o.2t(1n)}c(2U.G!=3D=
v&&19.G!=3Dv){1n=3Dp.B.2D(19.G,2U.G);3A(1n,19.H);1o=3D1o.2t(1n)}c(2U.1d!=3D=
v&&19.1d!=3Dv){1n=3Dp.B.2D(19.1d,2U.1d);3A(1n,19.H+19[0].bo(19.1d));1o=3D=
1o.2t(1n)}D(h j=3D0;j<1o.u;j++){1o[j].5Y=3D3z.R}q =
1o}};p.4a.14.1I=3Dl(7t,7s){f.4m.1I(7t,7s);f.A=3Df.4m.A};p.7I=3Dl(){};p.7I=
.14=3D{V:l(7J,7Z){h 4l=3Df.1E[7J];q p.B.80(4l=3D=3Dv?7Z:4l)},1c:l(7Y){q =
Q.22(7Y)},8i:l(2F,81){h 3u=3D[];c(2F!=3Dv){D(h =
i=3D0;i<2F.u;i++){c(7X(2F[i])=3D=3D"4h"){3u=3D3u.2t(p.B.2D(81,2F[i]))}}}q=
 3u.aB(p.B.82)},86:l(){h 23=3Df.2C;D(h =
i=3D0;i<23.u;i++){c(23[i]=3D=3D=3Dv){1J}h 2x=3D23[i],4V=3D2x.H+2x.u;D(h =
j=3Di+1;j<23.u&&23[i]!=3D=3Dv;j++){h =
1S=3D23[j];c(1S=3D=3D=3Dv){1J}F{c(1S.H>4V){2h}F{c(1S.H=3D=3D2x.H&&1S.u>2x=
.u){f.2C[i]=3Dv}F{c(1S.H>=3D2x.H&&1S.H<4V){f.2C[j]=3Dv}}}}}}},8t:l(2H){h =
3r=3D2H.1P(/\\n/g),3n=3D85(f.V("84-2y")),2v=3Df.V("83-2y-7W"),7N=3Df.V("1=
I",[]),7U=3Df.V("3g");2H=3D"";c(2v=3D=3DI){2v=3D(3n+3r.u-1).2u().u}F{c(40=
(2v)=3D=3DI){2v=3D0}}D(h i=3D0;i<3r.u;i++){h =
1x=3D3r[i],60=3D/^(&2B;|\\s)+/.T(1x),52=3D"aN"+(i%2=3D=3D0?1:2),7F=3Dp.B.=
7V(3n+i,2v),7P=3Dp.B.Y(7N,(3n+i).2u())!=3D-1,2S=3Dv;c(60!=3Dv){2S=3D60[0]=
.2u();1x=3D1x.29(2S.u)}1x=3Dp.B.2G(1x);c(1x.u=3D=3D0){1x=3D"&2B;"}c(7P){5=
2+=3D" aQ"}2H+=3D"<A 1s=3D\\"2y "+52+"\\">"+"<7L>"+"<7T>"+(7U?"<3F =
1s=3D\\"aS\\"><C>"+7F+"</C></3F>":"")+"<3F 1s=3D\\"63\\">"+(2S!=3Dv?"<C =
1s=3D\\"by\\">"+2S.E(" =
","&2B;")+"</C>":"")+1x+"</3F>"+"</7T>"+"</7L>"+"</A>"}q =
2H},8y:l(5X,5T){h 18=3D0,3c=3D"",3a=3Dp.B.7K,5S=3Df.V("2O-R","");l =
5W(5Z){h 5R=3D5Z?(5Z.5Y||5S):5S;q 5R?5R+" ":""};D(h i=3D0;i<5T.u;i++){h =
1y=3D5T[i],3G;c(1y=3D=3D=3Dv||1y.u=3D=3D=3D0){1J}3G=3D5W(1y);3c+=3D3a(5X.=
29(18,1y.H-18),3G+"7O")+3a(1y.24,3G+1y.1a);18=3D1y.H+1y.u}3c+=3D3a(5X.29(=
18),5W()+"7O");q 3c},1I:l(C,7E){h =
cb=3Dp.M,1r=3Dp.1r,A,ci,3Z,ch=3D"cn";f.1E=3D{};f.A=3Dv;f.1p=3Dv;f.C=3Dv;f=
.1i=3Dv;f.6g=3D{};f.1k=3Dp.B.6d("cl");1r.6f[f.1k]=3Df;c(C=3D=3D=3Dv){C=3D=
""}f.1E=3Dp.B.6c(p.6b,7E||{});c(f.V("88")=3D=3DI){f.1E.1w=3Df.1E.3g=3DN}f=
.A=3DA=3Df.1c("3Y");f.1p=3Df.1c("3Y");f.1p.L=3D"1p";L=3D"6e";A.1k=3Df.1k;=
c(f.V("66")){L+=3D" 5O"}c(f.V("3g")=3D=3DN){L+=3D" =
bB"}c(f.V("5h-1p")=3D=3DN){f.1p.L+=3D" bO-5h"}L+=3D" =
"+f.V("1s-R");L+=3D" =
"+f.V("2O-R");A.L=3DL;f.5g=3DC;f.C=3Dp.B.8C(C).E(/\\r/g," =
");3Z=3Df.V("1H-2Q");f.C=3Df.V("8d-89")=3D=3DI?p.B.8a(f.C,3Z):p.B.8b(f.C,=
3Z);f.C=3Dp.B.2T(f.C);c(f.V("1w")){f.1i=3Df.1c("3Y");f.1i.L=3D"1i";f.1i.2=
p(p.1w.1c(f));A.2p(f.1i);h 1i=3Df.1i;l =
58(){1i.L=3D1i.L.E("53","")};A.c0=3Dl(){58();1i.L+=3D" =
53"};A.bX=3Dl(){58()}}A.2p(f.1p);f.2C=3Df.8i(f.59,f.C);f.86();C=3Df.8y(f.=
C,f.2C);C=3Df.8t(p.B.2G(C));c(f.V("8k-8l")){C=3Dp.B.8m(C)}f.1p.1Q=3DC},9f=
:l(z){z=3Dz.E(/^\\s+|\\s+$/g,"").E(/\\s+/g,"|");q"\\\\b(?:"+z+")\\\\b"},9=
i:l(2J){f.3I=3D{G:{3K:2J.G,1a:"1l"},1d:{3K:2J.1d,1a:"1l"},C:W =
U("(?<G>"+2J.G.1g+")"+"(?<C>.*?)"+"(?<1d>"+2J.1d.1g+")","96")}}};q =
p}()}c(!1q.U){(l(){h =
2w=3D{T:10.14.T,87:5I.14.87,E:5I.14.E,1P:5I.14.1P},1F=3D{13:/(?:[^\\\\([#=
\\s.]+|\\\\(?!k<[\\w$]+>|[7z]{[^}]+})[\\S\\s]?|\\((?=3D\\?(?!#|<[\\w$]+>)=
))+|(\\()(?:\\?(?:(#)[^)]*\\)|<([$\\w]+)>))?|\\\\(?:k<([\\w$]+)>|[7z]{([^=
}]+)})|(\\[\\^?)|([\\S\\s])/g,99:/(?:[^$]+|\\$(?![1-9$&`\']|{[$\\w]+}))+|=
\\$(?:([1-9]\\d*|[$&`\'])|{([$\\w]+)})/g,37:/^(?:\\s+|#.*)+/,5B:/^(?:[?*+=
]|{\\d+(?:,\\d*)?})/,7Q:/&&\\[\\^?/g,7S:/]/g},7o=3Dl(5C,5v,5u){D(h =
i=3D5u||0;i<5C.u;i++){c(5C[i]=3D=3D=3D5v){q =
i}}q-1},8G=3D/()??/.T("")[1]!=3D=3D3j,3q=3D{};U=3Dl(1e,1O){c(1e 68 =
10){c(1O!=3D=3D3j){3H 7r("4y\'t 4C 9a 8z 95 7u 10 5u 94")}q 1e.3E()}h =
1O=3D1O||"",7R=3D1O.Y("s")>-1,7M=3D1O.Y("x")>-1,5z=3DN,3v=3D[],1b=3D[],13=
=3D1F.13,J,cc,38,3M,3p;13.O=3D0;2j(J=3D2w.T.2n(13,1e)){c(J[2]){c(!1F.5B.1=
R(1e.17(13.O))){1b.K("(?:)")}}F{c(J[1]){3v.K(J[3]||v);c(J[3]){5z=3DI}1b.K=
("(")}F{c(J[4]){3M=3D7o(3v,J[4]);1b.K(3M>-1?"\\\\"+(3M+1)+(40(1e.5w(13.O)=
)?"":"(?:)"):J[0])}F{c(J[5]){1b.K(3q.7m?3q.7m.7q(J[5],J[0].5w(1)=3D=3D=3D=
"P"):J[0])}F{c(J[6]){c(1e.5w(13.O)=3D=3D=3D"]"){1b.K(J[6]=3D=3D=3D"["?"(?=
!)":"[\\\\S\\\\s]");13.O++}F{cc=3DU.8g("&&"+1e.17(J.H),1F.7Q,1F.7S,"",{7D=
:"\\\\"})[0];1b.K(J[6]+cc+"]");13.O+=3Dcc.u+1}}F{c(J[7]){c(7R&&J[7]=3D=3D=
=3D"."){1b.K("[\\\\S\\\\s]")}F{c(7M&&1F.37.1R(J[7])){38=3D2w.T.2n(1F.37,1=
e.17(13.O-1))[0].u;c(!1F.5B.1R(1e.17(13.O-1+38))){1b.K("(?:)")}13.O+=3D38=
-1}F{1b.K(J[7])}}}F{1b.K(J[0])}}}}}}}3p=3D10(1b.5A(""),2w.E.2n(1O,/[9B]+/=
g,""));3p.1C=3D{1g:1e,2m:5z?3v:v};q =
3p};U.9q=3Dl(R,o){3q[R]=3Do};10.14.T=3Dl(z){h =
1h=3D2w.T.2n(f,z),R,i,5y;c(1h){c(8G&&1h.u>1){5y=3DW =
10("^"+f.1g+"$(?!\\\\s)",f.5E());2w.E.2n(1h[0],5y,l(){D(i=3D1;i<8j.u-2;i+=
+){c(8j[i]=3D=3D=3D3j){1h[i]=3D3j}}})}c(f.1C&&f.1C.2m){D(i=3D1;i<1h.u;i++=
){R=3Df.1C.2m[i-1];c(R){1h[R]=3D1h[i]}}}c(f.3l&&f.O>(1h.H+1h[0].u)){f.O--=
}}q =
1h}})()}10.14.5E=3Dl(){q(f.3l?"g":"")+(f.av?"i":"")+(f.8F?"m":"")+(f.37?"=
x":"")+(f.a4?"y":"")};10.14.3E=3Dl(7A){h 5F=3DW =
U(f.1g,(7A||"")+f.5E());c(f.1C){5F.1C=3D{1g:f.1C.1g,2m:f.1C.2m?f.1C.2m.17=
(0):v}}q 5F};10.14.2n=3Dl(90,z){q f.T(z)};10.14.9b=3Dl(9h,8c){q =
f.T(8c[0])};U.5P=3Dl(57,5e){h 55=3D"/"+57+"/"+(5e||"");q =
U.5P[55]||(U.5P[55]=3DW U(57,5e))};U.41=3Dl(z){q =
z.E(/[-[\\]{}()*+?.\\\\^$|,#\\s]/g,"\\\\$&")};U.8g=3Dl(z,G,11,1j,2R){h =
2R=3D2R||{},2P=3D2R.7D,12=3D2R.c5,1j=3D1j||"",5r=3D1j.Y("g")>-1,70=3D1j.Y=
("i")>-1,7v=3D1j.Y("m")>-1,5a=3D1j.Y("y")>-1,1j=3D1j.E(/y/g,""),G=3DG 68 =
10?(G.3l?G:G.3E("g")):W U(G,"g"+1j),11=3D11 68 =
10?(11.3l?11:11.3E("g")):W =
U(11,"g"+1j),1M=3D[],2o=3D0,1u=3D0,1t=3D0,1z=3D0,2b,2c,1B,1K,3Q,48;c(2P){=
c(2P.u>1){3H aC("4y\'t 4C aL aJ 7u 41 7B")}c(7v){3H 7r("4y\'t 4C 41 7B =
8z bi b8 8F b7")}3Q=3DU.41(2P);48=3DW =
10("^(?:"+3Q+"[\\\\S\\\\s]|(?:(?!"+G.1g+"|"+11.1g+")[^"+3Q+"])+)+",70?"i"=
:"")}2j(I){G.O=3D11.O=3D1t+(2P?(48.T(z.17(1t))||[""])[0].u:0);1B=3DG.T(z)=
;1K=3D11.T(z);c(1B&&1K){c(1B.H<=3D1K.H){1K=3Dv}F{1B=3Dv}}c(1B||1K){1u=3D(=
1B||1K).H;1t=3D(1B?G:11).O}F{c(!2o){2h}}c(5a&&!2o&&1u>1z){2h}c(1B){c(!2o+=
+){2b=3D1u;2c=3D1t}}F{c(1K&&2o){c(!--2o){c(12){c(12[0]&&2b>1z){1M.K([12[0=
],z.17(1z,2b),1z,2b])}c(12[1]){1M.K([12[1],z.17(2b,2c),2b,2c])}c(12[2]){1=
M.K([12[2],z.17(2c,1u),2c,1u])}c(12[3]){1M.K([12[3],z.17(1u,1t),1u,1t])}}=
F{1M.K(z.17(2c,1u))}1z=3D1t;c(!5r){2h}}}F{G.O=3D11.O=3D0;3H bP("8L aq 9r =
ar =
8Z")}}c(1u=3D=3D=3D1t){1t++}}c(5r&&!5a&&12&&12[0]&&z.u>1z){1M.K([12[0],z.=
17(1z),1z,z.u])}G.O=3D11.O=3D0;q =
1M};',62,768,'||||||||||||if|||this||var||||function||||sh|return||||leng=
th|null||||str|div|utils|code|for|replace|else|left|index|true|_121|push|=
className|config|false|lastIndex||document|name||exec|XRegExp|getParam|ne=
w|lt|indexOf|gt|RegExp|_139|vN|part|prototype|||slice|pos|_d3|css|_11f|cr=
eate|right|_119|strings|source|_129|bar|_13a|id|script|style|_da|_d6|line=
s|window|vars|class|_145|_144|_b5|toolbar|_f4|_103|_146|alert|_149|_x|_c3=
|params|lib|obj|tab|highlight|continue|_14a|html|_142|doc|_11a|split|inne=
rHTML|test|_ec|_5a|_5b|in|_4f|text|_8|_3c|_91|_98|createElement|_e7|value=
|_c5|width|href|_c2|substr|min|_147|_148|brushes|height|_6e|_cd|break|att=
ributes|while|_be|_75|captureNames|call|_143|appendChild|_bc|_5f|http|con=
cat|toString|_f0|real|_e9|line|execute|wnd|nbsp|matches|getMatches|_66|_e=
3|trim|_ed|_40|_10f|case|_61|_c1|_55|brush|_13c|size|_13b|_f9|unindent|_d=
9|_28|_c4|SyntaxHighlighter|_81|_88|_5|m2|_7a|body|_a2|m1|_80|extended|le=
n|font|_fe|gm|_fd|fixInputString|Math|color|gutter|_4e|title|undefined|co=
m|global|printFrame|_ef|_7d|_125|_118|_ee|_8e|print|_e5|_11e|_7b|_32|_49|=
_cc|offsetMatches|_7c|_25|write|addFlags|td|_104|throw|htmlScript|_22|reg=
ex|_a7|_124|_af|_2|_c6|_14b|_b6|_b4|_3|substring|_60|_76|_6a|DIV|_10b|isN=
aN|escape|_62|url|_7e|_6b|eachLine|_ae|esc|_47|HtmlScript|_b2|values|_8c|=
gi|_89|_b9|object|_b0|_ad|_blank|_e1|xmlBrush|link|close|removeChild|_b3|=
type|_a6|_73|findBrush|Match|top|_9d|can|popup|_c8|_53|supply|_a3|win|foc=
us|span|_54|_9e|_50|_cb|_4d|_d7|_5d|getElementsByTagName|_6c|_ba|_b8|_bf|=
useScriptTags|_82|_ea|_ce|func|_d0|discoveredBrushes||_4c|_f6|show|pre|ke=
y|_29|_133|hide|regexList|_141|_19|_1a|viewSource|_134|_2b|originalCode|w=
rap|copyToClipboard|highlighterId|toolbarItemHeight|toolbarItemWidth|_2a|=
_2c|_2e|_2d|expandSource|_13e|_4|_7|from|item|charAt|www|r2|_11d|join|qua=
ntifier|_113|_e|getNativeFlags|_12e|_17|_18|String|_10|_b|_9|_f|_d|collap=
sed|cache|contentWindow|_101|_ff|_fb|swf|_30|getBrushNameCss|_fa|brushNam=
e|_100|_f5|_37|_35|content|_24|_38|collapse|_2f|instanceof|clipboardSwf|_=
27|defaults|merge|guid|syntaxhighlighter|highlighters|toolbarCommands|200=
9|_6|500px|measureSpace|_78|createButton|message|_79|clipboard|to|0px|_85=
|decoration|center|_83|margin|w3|rel|head|stylesheet|org|help|xhtml1|_3f|=
0099FF|align|DTD|alexgorbatchev|copyStyles|navigator|none|executeCommand|=
_3e|version|toLowerCase|_5e|_1e|_65|noBrush|switch|flash|_52|screen|event=
|attachEvent|_13f|shockwave|_4b|_48|clipboardData|px|commandName|aboutDia=
log|copyToClipboardConfirmation|_84|scrollbars|_14|_36|items|_6d|_16|_13|=
_15|_12|_a|userAgent|_d8|unicode|_d5|_112|process|get|TypeError|_de|_dd|o=
ne|_140|_d1|brushNotHtmlScript|parentNode|pP|_12d|character|addEvent|esca=
peChar|_106|_f7|_c9|_c7|Highlighter|_df|decorate|table|_11c|_f1|plain|_f8=
|classLeft|_11b|classRight|tr|_f2|padNumber|numbers|typeof|_e2|_e0|toBool=
ean|_e4|matchesSortCallback|pad|first|parseInt|removeNestedMatches|match|=
light|tabs|processSmartTabs|processTabs|args|smart|toArray|stripBrs|match=
Recursive|regexLib|findMatches|arguments|auto|links|processUrls|defaultAd=
d|_a9|_a8|_a1|_a4|tagName|createDisplayLines|debug|getSyntaxHighlighterSc=
riptTags|_93|insertSpaces|processMatches|when|_90|bloggerMode|trimFirstAn=
dLastLines|_9a|_b7|multiline|_117|parseParams|stripCData|_bd|Copyright|su=
bject|Alex|2004|development|_1c|keep|donate|Gorbatchev|_1b|syntax|JavaScr=
ipt|active|highlighter|multiLineSingleQuotedString|delimiters|_12f|string=
|scriptScriptTags|aspScriptTags|another|constructing|sgi|try|catch|replac=
eVar|flags|apply|phpScriptTags|singleLineCComments|singleLinePerlComments=
|getKeywords|multiLineCComments|_131|forHtmlScript|doubleQuotedString|xml=
Comments|onclick|multiLineDoubleQuotedString|singleQuotedString|spaceWidt=
h|bottom|addPlugin|contains|1999|xmlns|dtd|TR|transitional|xhtml|meta|utf=
|About|sx|charset|Type|equiv|Content|EN|Transitional|your|now|Can|is|The|=
view|copy|find|Brush|PUBLIC|W3C|XHTML|DOCTYPE|option|wasn|configured|fami=
ly|Geneva|you|like|please|If|sticky|October|target|https|paypal|_s|xclick=
|hosted_button_id|cmd|webscr|cgi|bin|364|4em|background|fff|000|serif|san=
s|Arial|Helvetica|1em|data|unbalanced|75em|large|xx|ignoreCase|3em|293040=
2|always|about|_42|sort|SyntaxError|printing|shCore|_43|_44|max|round|tha=
n|250|more|500|alt|absolute|error|highlighted|ok|number|amp|setData|print=
Source|_39|cssText|position|IFRAME|_3b|_1f|random|1000000|_a5|block|CDATA=
|flag|the|htmlscript|1000|getElementById|getPropertyValue|offsetWidth|get=
ComputedStyle|_99|opera|Array|using|textarea|open|load|Xml|_cf|lastIndexO=
f|_d4|all||replaceChild|70em|aliases|addEventListener|on|30em|spaces|_3a|=
flashVars|nogutter|transparent|wmode|allowScriptAccess|_8a|msie|classid|9=
6b8|444553540000|11cf|ae6d|clsid|d27cdb6e|no|Error|location|resizable|400=
|750|_20|_21|menubar|onmouseout|_clipboard|application|onmouseover|param|=
_26|codebase|menu|valueNames|movie|cab|swflash|cabs|embed|conf||command|_=
34|_33|src|_10c|_10a|macromedia|download|highlighter_|pub|important'.spli=
t('|'),0,{}))=0A=

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/javascripts/syntaxHighlighter/scripts/shBrushJava.js?1323190114

/**
 * SyntaxHighlighter
 * http://alexgorbatchev.com/
 *
 * SyntaxHighlighter is donationware. If you are using it, please =
donate.
 * http://alexgorbatchev.com/wiki/SyntaxHighlighter:Donate
 *
 * @version
 * 2.1.364 (October 15 2009)
 *=20
 * @copyright
 * Copyright (C) 2004-2009 Alex Gorbatchev.
 *
 * @license
 * This file is part of SyntaxHighlighter.
 *=20
 * SyntaxHighlighter is free software: you can redistribute it and/or =
modify
 * it under the terms of the GNU Lesser General Public License as =
published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *=20
 * SyntaxHighlighter is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *=20
 * You should have received a copy of the GNU General Public License
 * along with SyntaxHighlighter.  If not, see =
<http://www.gnu.org/copyleft/lesser.html>.
 */
SyntaxHighlighter.brushes.Java =3D function()
{
	var keywords =3D	'abstract assert boolean break byte case catch char =
class const ' +
					'continue default do double else enum extends ' +
					'false final finally float for goto if implements import ' +
					'instanceof int interface long native new null ' +
					'package private protected public return ' +
					'short static strictfp super switch synchronized this throw throws =
true ' +
					'transient try void volatile while';

	this.regexList =3D [
		{ regex: SyntaxHighlighter.regexLib.singleLineCComments,	css: =
'comments' },		// one line comments
		{ regex: /\/\*([^\*][\s\S]*)?\*\//gm,						css: 'comments' },	 	// =
multiline comments
		{ regex: /\/\*(?!\*\/)\*[\s\S]*?\*\//gm,					css: 'preprocessor' },	// =
documentation comments
		{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,		css: 'string' =
},		// strings
		{ regex: SyntaxHighlighter.regexLib.singleQuotedString,		css: 'string' =
},		// strings
		{ regex: /\b([\d]+(\.[\d]+)?|0x[a-f0-9]+)\b/gi,				css: 'value' },			=
// numbers
		{ regex: /(?!\@interface\b)\@[\$\w]+\b/g,					css: 'color1' },		// =
annotation @anno
		{ regex: /\@interface\b/g,									css: 'color2' },		// @interface =
keyword
		{ regex: new RegExp(this.getKeywords(keywords), 'gm'),		css: 'keyword' =
}		// java keyword
		];

	this.forHtmlScript({
		left	: /(&lt;|<)%[@!=3D]?/g,=20
		right	: /%(&gt;|>)/g=20
	});
};

SyntaxHighlighter.brushes.Java.prototype	=3D new =
SyntaxHighlighter.Highlighter();
SyntaxHighlighter.brushes.Java.aliases		=3D ['java'];

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/javascripts/syntaxHighlighter/scripts/shBrushXml.js?1323190114

/**
 * SyntaxHighlighter
 * http://alexgorbatchev.com/
 *
 * SyntaxHighlighter is donationware. If you are using it, please =
donate.
 * http://alexgorbatchev.com/wiki/SyntaxHighlighter:Donate
 *
 * @version
 * 2.1.364 (October 15 2009)
 *=20
 * @copyright
 * Copyright (C) 2004-2009 Alex Gorbatchev.
 *
 * @license
 * This file is part of SyntaxHighlighter.
 *=20
 * SyntaxHighlighter is free software: you can redistribute it and/or =
modify
 * it under the terms of the GNU Lesser General Public License as =
published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *=20
 * SyntaxHighlighter is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *=20
 * You should have received a copy of the GNU General Public License
 * along with SyntaxHighlighter.  If not, see =
<http://www.gnu.org/copyleft/lesser.html>.
 */
SyntaxHighlighter.brushes.Xml =3D function()
{
	function process(match, regexInfo)
	{
		var constructor =3D SyntaxHighlighter.Match,
			code =3D match[0],
			tag =3D new XRegExp('(&lt;|<)[\\s\\/\\?]*(?<name>[:\\w-\\.]+)', =
'xg').exec(code),
			result =3D []
			;
	=09
		if (match.attributes !=3D null)=20
		{
			var attributes,
				regex =3D new XRegExp('(?<name> [\\w:\\-\\.]+)' +
									'\\s*=3D\\s*' +
									'(?<value> ".*?"|\'.*?\'|\\w+)',
									'xg');

			while ((attributes =3D regex.exec(code)) !=3D null)=20
			{
				result.push(new constructor(attributes.name, match.index + =
attributes.index, 'color1'));
				result.push(new constructor(attributes.value, match.index + =
attributes.index + attributes[0].indexOf(attributes.value), 'string'));
			}
		}

		if (tag !=3D null)
			result.push(
				new constructor(tag.name, match.index + tag[0].indexOf(tag.name), =
'keyword')
			);

		return result;
	}
=09
	this.regexList =3D [
		{ regex: new =
XRegExp('(\\&lt;|<)\\!\\[[\\w\\s]*?\\[(.|\\s)*?\\]\\](\\&gt;|>)', 'gm'),	=
		css: 'color2' },	// <![ ... [ ... ]]>
		{ regex: SyntaxHighlighter.regexLib.xmlComments,												css: =
'comments' },	// <!-- ... -->
		{ regex: new =
XRegExp('(&lt;|<)[\\s\\/\\?]*(\\w+)(?<attributes>.*?)[\\s\\/\\?]*(&gt;|>)=
', 'sg'), func: process }
	];
};

SyntaxHighlighter.brushes.Xml.prototype	=3D new =
SyntaxHighlighter.Highlighter();
SyntaxHighlighter.brushes.Xml.aliases	=3D ['xml', 'xhtml', 'xslt', =
'html'];

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/javascripts/syntaxHighlighter/scripts/shBrushBash.js?1323190114

/**
 * SyntaxHighlighter
 * http://alexgorbatchev.com/
 *
 * SyntaxHighlighter is donationware. If you are using it, please =
donate.
 * http://alexgorbatchev.com/wiki/SyntaxHighlighter:Donate
 *
 * @version
 * 2.1.364 (October 15 2009)
 *=20
 * @copyright
 * Copyright (C) 2004-2009 Alex Gorbatchev.
 *
 * @license
 * This file is part of SyntaxHighlighter.
 *=20
 * SyntaxHighlighter is free software: you can redistribute it and/or =
modify
 * it under the terms of the GNU Lesser General Public License as =
published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *=20
 * SyntaxHighlighter is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *=20
 * You should have received a copy of the GNU General Public License
 * along with SyntaxHighlighter.  If not, see =
<http://www.gnu.org/copyleft/lesser.html>.
 */
SyntaxHighlighter.brushes.Bash =3D function()
{
	var keywords =3D	'if fi then elif else for do done until while break =
continue case function return in eq ne gt lt ge le';
	var commands =3D  'alias apropos awk basename bash bc bg builtin bzip2 =
cal cat cd cfdisk chgrp chmod chown chroot' +
					'cksum clear cmp comm command cp cron crontab csplit cut date dc dd =
ddrescue declare df ' +
					'diff diff3 dig dir dircolors dirname dirs du echo egrep eject =
enable env ethtool eval ' +
					'exec exit expand export expr false fdformat fdisk fg fgrep file =
find fmt fold format ' +
					'free fsck ftp gawk getopts grep groups gzip hash head history =
hostname id ifconfig ' +
					'import install join kill less let ln local locate logname logout =
look lpc lpr lprint ' +
					'lprintd lprintq lprm ls lsof make man mkdir mkfifo mkisofs mknod =
more mount mtools ' +
					'mv netstat nice nl nohup nslookup open op passwd paste pathchk =
ping popd pr printcap ' +
					'printenv printf ps pushd pwd quota quotacheck quotactl ram rcp =
read readonly renice ' +
					'remsync rm rmdir rsync screen scp sdiff sed select seq set sftp =
shift shopt shutdown ' +
					'sleep sort source split ssh strace su sudo sum symlink sync tail =
tar tee test time ' +
					'times touch top traceroute trap tr true tsort tty type ulimit =
umask umount unalias ' +
					'uname unexpand uniq units unset unshar useradd usermod users =
uuencode uudecode v vdir ' +
					'vi watch wc whereis which who whoami Wget xargs yes'
					;
=09
	this.findMatches =3D function(regexList, code)
	{
		code =3D code.replace(/&gt;/g, '>').replace(/&lt;/g, '<');
		this.code =3D code;
		return SyntaxHighlighter.Highlighter.prototype.findMatches.apply(this, =
[regexList, code]);
	};

	this.regexList =3D [
		{ regex: SyntaxHighlighter.regexLib.singleLinePerlComments,		css: =
'comments' },		// one line comments
		{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,			css: =
'string' },		// double quoted strings
		{ regex: SyntaxHighlighter.regexLib.singleQuotedString,			css: =
'string' },		// single quoted strings
		{ regex: new RegExp(this.getKeywords(keywords), 'gm'),			css: =
'keyword' },		// keywords
		{ regex: new RegExp(this.getKeywords(commands), 'gm'),			css: =
'functions' }		// commands
		];
}

SyntaxHighlighter.brushes.Bash.prototype	=3D new =
SyntaxHighlighter.Highlighter();
SyntaxHighlighter.brushes.Bash.aliases		=3D ['bash', 'shell'];

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/javascripts/syntaxHighlighter/scripts/shBrushRuby.js?1323190114

/**
 * SyntaxHighlighter
 * http://alexgorbatchev.com/
 *
 * SyntaxHighlighter is donationware. If you are using it, please =
donate.
 * http://alexgorbatchev.com/wiki/SyntaxHighlighter:Donate
 *
 * @version
 * 2.1.364 (October 15 2009)
 *=20
 * @copyright
 * Copyright (C) 2004-2009 Alex Gorbatchev.
 *
 * @license
 * This file is part of SyntaxHighlighter.
 *=20
 * SyntaxHighlighter is free software: you can redistribute it and/or =
modify
 * it under the terms of the GNU Lesser General Public License as =
published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *=20
 * SyntaxHighlighter is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *=20
 * You should have received a copy of the GNU General Public License
 * along with SyntaxHighlighter.  If not, see =
<http://www.gnu.org/copyleft/lesser.html>.
 */
SyntaxHighlighter.brushes.Ruby =3D function()
{
	// Contributed by Erik Peterson.
=09
	var keywords =3D	'alias and BEGIN begin break case class def =
define_method defined do each else elsif ' +
					'END end ensure false for if in module new next nil not or raise =
redo rescue retry return ' +
					'self super then throw true undef unless until when while yield';

	var builtins =3D	'Array Bignum Binding Class Continuation Dir Exception =
FalseClass File::Stat File Fixnum Fload ' +
					'Hash Integer IO MatchData Method Module NilClass Numeric Object =
Proc Range Regexp String Struct::TMS Symbol ' +
					'ThreadGroup Thread Time TrueClass';

	this.regexList =3D [
		{ regex: SyntaxHighlighter.regexLib.singleLinePerlComments,	css: =
'comments' },		// one line comments
		{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,		css: 'string' =
},		// double quoted strings
		{ regex: SyntaxHighlighter.regexLib.singleQuotedString,		css: 'string' =
},		// single quoted strings
		{ regex: /\b[A-Z0-9_]+\b/g,									css: 'constants' },		// constants
		{ regex: /:[a-z][A-Za-z0-9_]*/g,							css: 'color2' },		// symbols
		{ regex: /(\$|@@|@)\w+/g,									css: 'variable bold' },	// $global, =
@instance, and @@class variables
		{ regex: new RegExp(this.getKeywords(keywords), 'gm'),		css: 'keyword' =
},		// keywords
		{ regex: new RegExp(this.getKeywords(builtins), 'gm'),		css: 'color1' =
}			// builtins
		];

	this.forHtmlScript(SyntaxHighlighter.regexLib.aspScriptTags);
};

SyntaxHighlighter.brushes.Ruby.prototype	=3D new =
SyntaxHighlighter.Highlighter();
SyntaxHighlighter.brushes.Ruby.aliases		=3D ['ruby', 'rails', 'ror', =
'rb'];

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/javascripts/syntaxHighlighter/scripts/shBrushPerl.js?1323190114

/**
 * SyntaxHighlighter
 * http://alexgorbatchev.com/
 *
 * SyntaxHighlighter is donationware. If you are using it, please =
donate.
 * http://alexgorbatchev.com/wiki/SyntaxHighlighter:Donate
 *
 * @version
 * 2.1.364 (October 15 2009)
 *=20
 * @copyright
 * Copyright (C) 2004-2009 Alex Gorbatchev.
 *
 * @license
 * This file is part of SyntaxHighlighter.
 *=20
 * SyntaxHighlighter is free software: you can redistribute it and/or =
modify
 * it under the terms of the GNU Lesser General Public License as =
published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *=20
 * SyntaxHighlighter is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *=20
 * You should have received a copy of the GNU General Public License
 * along with SyntaxHighlighter.  If not, see =
<http://www.gnu.org/copyleft/lesser.html>.
 */
SyntaxHighlighter.brushes.Perl =3D function()
{
	// Contributed by David Simmons-Duffin and Marty Kube
=09
	var funcs =3D=20
		'abs accept alarm atan2 bind binmode chdir chmod chomp chop chown chr =
' +=20
		'chroot close closedir connect cos crypt defined delete each endgrent =
' +=20
		'endhostent endnetent endprotoent endpwent endservent eof exec exists =
' +=20
		'exp fcntl fileno flock fork format formline getc getgrent getgrgid ' =
+=20
		'getgrnam gethostbyaddr gethostbyname gethostent getlogin getnetbyaddr =
' +=20
		'getnetbyname getnetent getpeername getpgrp getppid getpriority ' +=20
		'getprotobyname getprotobynumber getprotoent getpwent getpwnam =
getpwuid ' +=20
		'getservbyname getservbyport getservent getsockname getsockopt glob ' =
+=20
		'gmtime grep hex index int ioctl join keys kill lc lcfirst length link =
' +=20
		'listen localtime lock log lstat map mkdir msgctl msgget msgrcv msgsnd =
' +=20
		'oct open opendir ord pack pipe pop pos print printf prototype push ' =
+=20
		'quotemeta rand read readdir readline readlink readpipe recv rename ' =
+=20
		'reset reverse rewinddir rindex rmdir scalar seek seekdir select =
semctl ' +=20
		'semget semop send setgrent sethostent setnetent setpgrp setpriority ' =
+=20
		'setprotoent setpwent setservent setsockopt shift shmctl shmget =
shmread ' +=20
		'shmwrite shutdown sin sleep socket socketpair sort splice split =
sprintf ' +=20
		'sqrt srand stat study substr symlink syscall sysopen sysread sysseek =
' +=20
		'system syswrite tell telldir time times tr truncate uc ucfirst umask =
' +=20
		'undef unlink unpack unshift utime values vec wait waitpid warn =
write';
   =20
	var keywords =3D =20
		'bless caller continue dbmclose dbmopen die do dump else elsif eval =
exit ' +
		'for foreach goto if import last local my next no our package redo ref =
' +=20
		'require return sub tie tied unless untie until use wantarray while';
   =20
	this.regexList =3D [
		{ regex: new RegExp('#[^!].*$', 'gm'),					css: 'comments' },
		{ regex: new RegExp('^\\s*#!.*$', 'gm'),				css: 'preprocessor' }, // =
shebang
		{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,	css: 'string' =
},
		{ regex: SyntaxHighlighter.regexLib.singleQuotedString,	css: 'string' =
},
		{ regex: new RegExp('(\\$|@|%)\\w+', 'g'),				css: 'variable' },
		{ regex: new RegExp(this.getKeywords(funcs), 'gmi'),	css: 'functions' =
},
		{ regex: new RegExp(this.getKeywords(keywords), 'gm'),	css: 'keyword' =
}
	    ];

	this.forHtmlScript(SyntaxHighlighter.regexLib.phpScriptTags);
}

SyntaxHighlighter.brushes.Perl.prototype	=3D new =
SyntaxHighlighter.Highlighter();
SyntaxHighlighter.brushes.Perl.aliases		=3D ['perl', 'Perl', 'pl'];
------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/javascripts/syntaxHighlighter/scripts/shBrushJScript.js?1323190114

/**
 * SyntaxHighlighter
 * http://alexgorbatchev.com/
 *
 * SyntaxHighlighter is donationware. If you are using it, please =
donate.
 * http://alexgorbatchev.com/wiki/SyntaxHighlighter:Donate
 *
 * @version
 * 2.1.364 (October 15 2009)
 *=20
 * @copyright
 * Copyright (C) 2004-2009 Alex Gorbatchev.
 *
 * @license
 * This file is part of SyntaxHighlighter.
 *=20
 * SyntaxHighlighter is free software: you can redistribute it and/or =
modify
 * it under the terms of the GNU Lesser General Public License as =
published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *=20
 * SyntaxHighlighter is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *=20
 * You should have received a copy of the GNU General Public License
 * along with SyntaxHighlighter.  If not, see =
<http://www.gnu.org/copyleft/lesser.html>.
 */
SyntaxHighlighter.brushes.JScript =3D function()
{
	var keywords =3D	'break case catch continue ' +
					'default delete do else false  ' +
					'for function if in instanceof ' +
					'new null return super switch ' +
					'this throw true try typeof var while with'
					;

	this.regexList =3D [
		{ regex: SyntaxHighlighter.regexLib.singleLineCComments,	css: =
'comments' },			// one line comments
		{ regex: SyntaxHighlighter.regexLib.multiLineCComments,		css: =
'comments' },			// multiline comments
		{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,		css: 'string' =
},			// double quoted strings
		{ regex: SyntaxHighlighter.regexLib.singleQuotedString,		css: 'string' =
},			// single quoted strings
		{ regex: /\s*#.*/gm,										css: 'preprocessor' },		// preprocessor =
tags like #region and #endregion
		{ regex: new RegExp(this.getKeywords(keywords), 'gm'),		css: 'keyword' =
}			// keywords
		];
=09
	this.forHtmlScript(SyntaxHighlighter.regexLib.scriptScriptTags);
};

SyntaxHighlighter.brushes.JScript.prototype	=3D new =
SyntaxHighlighter.Highlighter();
SyntaxHighlighter.brushes.JScript.aliases	=3D ['js', 'jscript', =
'javascript'];

------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/javascripts/syntaxHighlighter/scripts/shBrushSql.js?1323190114

/**
 * SyntaxHighlighter
 * http://alexgorbatchev.com/
 *
 * SyntaxHighlighter is donationware. If you are using it, please =
donate.
 * http://alexgorbatchev.com/wiki/SyntaxHighlighter:Donate
 *
 * @version
 * 2.1.364 (October 15 2009)
 *=20
 * @copyright
 * Copyright (C) 2004-2009 Alex Gorbatchev.
 *
 * @license
 * This file is part of SyntaxHighlighter.
 *=20
 * SyntaxHighlighter is free software: you can redistribute it and/or =
modify
 * it under the terms of the GNU Lesser General Public License as =
published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *=20
 * SyntaxHighlighter is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *=20
 * You should have received a copy of the GNU General Public License
 * along with SyntaxHighlighter.  If not, see =
<http://www.gnu.org/copyleft/lesser.html>.
 */
SyntaxHighlighter.brushes.Sql =3D function()
{
	var funcs	=3D	'abs avg case cast coalesce convert count =
current_timestamp ' +
					'current_user day isnull left lower month nullif replace right ' +
					'session_user space substring sum system_user upper user year';

	var keywords =3D	'absolute action add after alter as asc at =
authorization begin bigint ' +
					'binary bit by cascade char character check checkpoint close =
collate ' +
					'column commit committed connect connection constraint contains =
continue ' +
					'create cube current current_date current_time cursor database date =
' +
					'deallocate dec decimal declare default delete desc distinct double =
drop ' +
					'dynamic else end end-exec escape except exec execute false fetch =
first ' +
					'float for force foreign forward free from full function global =
goto grant ' +
					'group grouping having hour ignore index inner insensitive insert =
instead ' +
					'int integer intersect into is isolation key last level load local =
max min ' +
					'minute modify move name national nchar next no numeric of off on =
only ' +
					'open option order out output partial password precision prepare =
primary ' +
					'prior privileges procedure public read real references relative =
repeatable ' +
					'restrict return returns revoke rollback rollup rows rule schema =
scroll ' +
					'second section select sequence serializable set size smallint =
static ' +
					'statistics table temp temporary then time timestamp to top =
transaction ' +
					'translation trigger true truncate uncommitted union unique update =
values ' +
					'varchar varying view when where with work';

	var operators =3D	'all and any between cross in join like not null or =
outer some';

	this.regexList =3D [
		{ regex: /--(.*)$/gm,												css: 'comments' },			// one line and =
multiline comments
		{ regex: SyntaxHighlighter.regexLib.multiLineDoubleQuotedString,	css: =
'string' },			// double quoted strings
		{ regex: SyntaxHighlighter.regexLib.multiLineSingleQuotedString,	css: =
'string' },			// single quoted strings
		{ regex: new RegExp(this.getKeywords(funcs), 'gmi'),				css: 'color2' =
},			// functions
		{ regex: new RegExp(this.getKeywords(operators), 'gmi'),			css: =
'color1' },			// operators and such
		{ regex: new RegExp(this.getKeywords(keywords), 'gmi'),				css: =
'keyword' }			// keyword
		];
};

SyntaxHighlighter.brushes.Sql.prototype	=3D new =
SyntaxHighlighter.Highlighter();
SyntaxHighlighter.brushes.Sql.aliases	=3D ['sql'];


------=_NextPart_000_0000_01CCCBC2.24409D10
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://bluedash.net/javascripts/syntaxHighlighter/scripts/shBrushCpp.js?1323190114

/**
 * SyntaxHighlighter
 * http://alexgorbatchev.com/
 *
 * SyntaxHighlighter is donationware. If you are using it, please =
donate.
 * http://alexgorbatchev.com/wiki/SyntaxHighlighter:Donate
 *
 * @version
 * 2.1.364 (October 15 2009)
 *=20
 * @copyright
 * Copyright (C) 2004-2009 Alex Gorbatchev.
 *
 * @license
 * This file is part of SyntaxHighlighter.
 *=20
 * SyntaxHighlighter is free software: you can redistribute it and/or =
modify
 * it under the terms of the GNU Lesser General Public License as =
published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *=20
 * SyntaxHighlighter is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *=20
 * You should have received a copy of the GNU General Public License
 * along with SyntaxHighlighter.  If not, see =
<http://www.gnu.org/copyleft/lesser.html>.
 */
SyntaxHighlighter.brushes.Cpp =3D function()
{
	// Copyright 2006 Shin, YoungJin
=09
	var datatypes =3D	'ATOM BOOL BOOLEAN BYTE CHAR COLORREF DWORD DWORDLONG =
DWORD_PTR ' +
					'DWORD32 DWORD64 FLOAT HACCEL HALF_PTR HANDLE HBITMAP HBRUSH ' +
					'HCOLORSPACE HCONV HCONVLIST HCURSOR HDC HDDEDATA HDESK HDROP HDWP =
' +
					'HENHMETAFILE HFILE HFONT HGDIOBJ HGLOBAL HHOOK HICON HINSTANCE =
HKEY ' +
					'HKL HLOCAL HMENU HMETAFILE HMODULE HMONITOR HPALETTE HPEN HRESULT =
' +
					'HRGN HRSRC HSZ HWINSTA HWND INT INT_PTR INT32 INT64 LANGID LCID =
LCTYPE ' +
					'LGRPID LONG LONGLONG LONG_PTR LONG32 LONG64 LPARAM LPBOOL LPBYTE =
LPCOLORREF ' +
					'LPCSTR LPCTSTR LPCVOID LPCWSTR LPDWORD LPHANDLE LPINT LPLONG LPSTR =
LPTSTR ' +
					'LPVOID LPWORD LPWSTR LRESULT PBOOL PBOOLEAN PBYTE PCHAR PCSTR =
PCTSTR PCWSTR ' +
					'PDWORDLONG PDWORD_PTR PDWORD32 PDWORD64 PFLOAT PHALF_PTR PHANDLE =
PHKEY PINT ' +
					'PINT_PTR PINT32 PINT64 PLCID PLONG PLONGLONG PLONG_PTR PLONG32 =
PLONG64 POINTER_32 ' +
					'POINTER_64 PSHORT PSIZE_T PSSIZE_T PSTR PTBYTE PTCHAR PTSTR PUCHAR =
PUHALF_PTR ' +
					'PUINT PUINT_PTR PUINT32 PUINT64 PULONG PULONGLONG PULONG_PTR =
PULONG32 PULONG64 ' +
					'PUSHORT PVOID PWCHAR PWORD PWSTR SC_HANDLE SC_LOCK =
SERVICE_STATUS_HANDLE SHORT ' +
					'SIZE_T SSIZE_T TBYTE TCHAR UCHAR UHALF_PTR UINT UINT_PTR UINT32 =
UINT64 ULONG ' +
					'ULONGLONG ULONG_PTR ULONG32 ULONG64 USHORT USN VOID WCHAR WORD =
WPARAM WPARAM WPARAM ' +
					'char bool short int __int32 __int64 __int8 __int16 long float =
double __wchar_t ' +
					'clock_t _complex _dev_t _diskfree_t div_t ldiv_t _exception =
_EXCEPTION_POINTERS ' +
					'FILE _finddata_t _finddatai64_t _wfinddata_t _wfinddatai64_t =
__finddata64_t ' +
					'__wfinddata64_t _FPIEEE_RECORD fpos_t _HEAPINFO _HFILE lconv =
intptr_t ' +
					'jmp_buf mbstate_t _off_t _onexit_t _PNH ptrdiff_t =
_purecall_handler ' +
					'sig_atomic_t size_t _stat __stat64 _stati64 terminate_function ' +
					'time_t __time64_t _timeb __timeb64 tm uintptr_t _utimbuf ' +
					'va_list wchar_t wctrans_t wctype_t wint_t signed';

	var keywords =3D	'break case catch class const __finally __exception =
__try ' +
					'const_cast continue private public protected __declspec ' +
					'default delete deprecated dllexport dllimport do dynamic_cast ' +
					'else enum explicit extern if for friend goto inline ' +
					'mutable naked namespace new noinline noreturn nothrow ' +
					'register reinterpret_cast return selectany ' +
					'sizeof static static_cast struct switch template this ' +
					'thread throw true false try typedef typeid typename union ' +
					'using uuid virtual void volatile whcar_t while';
				=09
	var functions =3D	'assert isalnum isalpha iscntrl isdigit isgraph =
islower isprint' +
					'ispunct isspace isupper isxdigit tolower toupper errno localeconv =
' +
					'setlocale acos asin atan atan2 ceil cos cosh exp fabs floor fmod ' =
+
					'frexp ldexp log log10 modf pow sin sinh sqrt tan tanh jmp_buf ' +
					'longjmp setjmp raise signal sig_atomic_t va_arg va_end va_start ' =
+
					'clearerr fclose feof ferror fflush fgetc fgetpos fgets fopen ' +
					'fprintf fputc fputs fread freopen fscanf fseek fsetpos ftell ' +
					'fwrite getc getchar gets perror printf putc putchar puts remove ' =
+
					'rename rewind scanf setbuf setvbuf sprintf sscanf tmpfile tmpnam ' =
+
					'ungetc vfprintf vprintf vsprintf abort abs atexit atof atoi atol ' =
+
					'bsearch calloc div exit free getenv labs ldiv malloc mblen =
mbstowcs ' +
					'mbtowc qsort rand realloc srand strtod strtol strtoul system ' +
					'wcstombs wctomb memchr memcmp memcpy memmove memset strcat strchr =
' +
					'strcmp strcoll strcpy strcspn strerror strlen strncat strncmp ' +
					'strncpy strpbrk strrchr strspn strstr strtok strxfrm asctime ' +
					'clock ctime difftime gmtime localtime mktime strftime time';

	this.regexList =3D [
		{ regex: SyntaxHighlighter.regexLib.singleLineCComments,	css: =
'comments' },			// one line comments
		{ regex: SyntaxHighlighter.regexLib.multiLineCComments,		css: =
'comments' },			// multiline comments
		{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,		css: 'string' =
},			// strings
		{ regex: SyntaxHighlighter.regexLib.singleQuotedString,		css: 'string' =
},			// strings
		{ regex: /^ *#.*/gm,										css: 'preprocessor' },
		{ regex: new RegExp(this.getKeywords(datatypes), 'gm'),		css: 'color1 =
bold' },
		{ regex: new RegExp(this.getKeywords(functions), 'gm'),		css: =
'functions bold' },
		{ regex: new RegExp(this.getKeywords(keywords), 'gm'),		css: 'keyword =
bold' }
		];
};

SyntaxHighlighter.brushes.Cpp.prototype	=3D new =
SyntaxHighlighter.Highlighter();
SyntaxHighlighter.brushes.Cpp.aliases	=3D ['cpp', 'c'];

------=_NextPart_000_0000_01CCCBC2.24409D10--
